{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#why-expresslrs","title":"Why ExpressLRS?","text":"Why ExpressLRS? <p>ExpressLRS is a high-performance, open-source radio control protocol built from the ground up to be an extremely fast (Express), extremely sensitive (Long Range) System. ELRS uses Semtech <code>SX12xx</code> LoRa transceivers and a lightweight, highly optimized over-the-air (OTA) protocol to provide superior performance compared to legacy RC links. While ExpressLRS started with DIY and repurposed hardware, a large number of manufacturers are now producing high-quality, low-cost transmitters and receivers to make it easy for anyone to get started!</p>"},{"location":"faq/#how-does-expresslrs-compare-to-other-systems","title":"How does ExpressLRS compare to other systems?","text":"How does ExpressLRS compare to other systems? <p>ExpressLRS is capable of extremely high packet rates (up to 1000 Hz) and extreme sensitivity (ranges well over 100+ km have been achieved with 2.4 GHz hardware), making it extremely competitive with any commercially available system. And since ExpressLRS is open-source, it costs much less than other systems too!</p>"},{"location":"faq/#which-opentxedgetx-version-do-i-need-and-why-should-i-update","title":"Which OpenTX/EdgeTX version do I need and why should I update?","text":"Which OpenTX/EdgeTX version do I need and why should I update? <p>ExpressLRS requires OpenTX 2.3.12 or newer, as it depends on CRSFShot (a.k.a mixer sync) to work properly. However, as OpenTX is no longer being maintained, it is strongly recommended that you update to EdgeTX in order to take advantage of the latest performance improvements and bug fixes. </p> <p>Click here to read more about radio firmware requirements and setup.</p>"},{"location":"faq/#how-do-i-flashupdate-my-receivermodule","title":"How do I flash/update my receiver/module?","text":"How do I flash/update my receiver/module? <p>See Getting Started for a Quick Setup guide and detailed instructions on flashing, features, hardware, and troubleshooting.</p>"},{"location":"faq/#will-x-receiver-work-with-y-tx-module-from-z-manufacturer","title":"Will x Receiver work with y TX Module from z Manufacturer?","text":"Will x Receiver work with y TX Module from z Manufacturer? <p>Any Receiver and TX Module from the same Band (e.g. 2.4 GHz or 900 MHz) will work together. For example, a 900 MHz receiver from BetaFPV will work with a 900 MHz TX module from HappyModel. Likewise, any 2.4 GHz receiver will work with any 2.4 GHz TX Modules, from any manufacturer (including DIY ones). This of course assumes the hardware is working properly, flashed with the same major ELRS version (e.g. 3.x), and is using the same binding phrase and configuration options (e.g. Regulatory Domain).</p>"},{"location":"faq/#whats-the-difference-between-the-different-24-ghz-receivers-pp-ep1rp1-ep2rp2-ep1-dual-rp3-rp4td-tcxo","title":"What's the difference between the different 2.4 GHz receivers (PP, EP1/RP1, EP2/RP2, EP1 Dual, RP3, RP4TD, TCXO)?","text":"What's the difference between the different 2.4 GHz receivers (PP, EP1/RP1, EP2/RP2, EP1 Dual, RP3, RP4TD, TCXO)? <p>Early ELRS receivers like the HappyModel PP used an STM32 MCU, while later designs EP1/EP2/etc use ESP MCUs. All offer firmware updates via UART or Betaflight Passthrough, but the ESP-based hardware also support firmware update and configuration over WiFi. The EP1/RP1 receivers use u.fl (external) antennas, while the EP2/RP2 receivers use on-board ceramic antennas. Receivers like the RP3 and R24D have two antennas for antenna diversity, while receivers like the EP1 Dual, RP4TD, and SuperD add a second parallel RF path to provide full receiver diversity. </p> <p>See here for more about different antenna configurations. </p>"},{"location":"faq/#what-is-required-to-achieve-a-1000-hz-update-rate-on-24-ghz","title":"What is required to achieve a 1000 Hz update rate on 2.4 GHz?","text":"What is required to achieve a 1000 Hz packet rate on 2.4 GHz? <p>In order to achieve the fastest packet rate, your radio must be running a supported firmware, set to a minimum hardware baud rate of 921000, and be connected to a serial ELRS receiver (SPI receivers do not support the FLRC modes required). Also make absolutely sure ADC filter is disabled on your radio, and that you have applied the appropriate RC Link Preset in Betaflight. </p> <p>You can use the ELRS lua to check your current packet rate and ensure the radio mixer sync is working properly. See Using the Lua Script for more details.</p>"},{"location":"faq/#how-many-channels-does-elrs-support","title":"How many channels does ELRS support?","text":"How many channels does ELRS support? <p>ELRS supports up to 16 channels*. Channels 1-4 are always sent at full-resolution (10-bit). The resolution and update rate of the remaining channels can be configured as follows, based on your requirements:</p> <ul> <li>4x full-resolution (10-bit) channels for sticks (CH1-4) with either:<ul> <li>HYBRID Mode 1x 2-position channel, AUX1 (CH5; Must be used for Arming), 6x 2-position/3-position/6-position (AUX2-7) and 1x 16-position (AUX8), OR</li> <li>WIDE Mode 1x 2-position channel, AUX1 (CH5; Must be used for Arming), 7x 64 or 128-position channels (AUX2-8). Available via the Lua Script since 2.0.</li> </ul> </li> <li>8x full-resolution (10-bit, ext-limits) with 1x 2-position channel, AUX1</li> <li>16x full-resolution (10-bit, ext-limits, all half rate) with 1x 2-position channel, AUX1</li> <li>12x full-resolution (10-bit, ext-limits) with 1x 2-position channel, AUX1, channels AUX2-9 run at half rate.</li> </ul> <p>See Switch Modes for more details on switch modes and how they work.</p>"},{"location":"faq/#is-my-binding-phrase-a-secret","title":"Is my binding phrase a secret?","text":"Is my binding phrase a secret? <p>No, just like what channel your VTX is on is not a secret. If everyone kept their VTX channel a secret, the chances of you blasting someone out of the sky accidentally is high. The binding phrase is not used for security, it is used to prevent collisions. Specifically, the binding phrase is hashed and used to seed the random number generator that determines the frequency hopping pattern. Thus, each binding phrase results in a unique hopping pattern, minimizing the likelihood of collisions with other users.  To provide the best chance of not interfering with other pilots and them not interfering with you, be sure you're not using the same dumb bind phrase as someone else. Express your style with a hilarious or saucy bind phrase.</p>"},{"location":"faq/#what-does-rqly-tqly-rssi-x2-snr-x2-mean","title":"What does RQLY, TQLY, RSSI x2, SNR x2 mean?","text":"What do RQLY, TQLY, RSSI x2, SNR x2 mean? Datapoint Description Range Info RQly Uplink - link quality (valid packets) 0 - 100 The number of successful packets out of the last 100 from TX. TX \u2192 RX 1RSS Uplink - received signal strength antenna 1 (RSSI) -128 - 0 First antenna RSSI dBm as reported by the RX. Values vary depending on mode, antenna quality, output power and distance. TX \u2192 RX 2RSS Uplink - received signal strength antenna 2 (RSSI) Second antenna RSSI dBm, for diversity receivers.  TX \u2192 RX ANT RX active antenna 0 - 1 Active receiver antenna for diversity RX. RSNR Uplink - signal-to-noise ratio SNR reported by the RX. Value varies mostly by radio chip and gets lower with distance (once the agc hits its limit). TX \u2192 RX RFMD Uplink - packet rate 0 - 7 RF Mode Indexes TPWR Uplink - transmitting power 50mW reported as 0, as CRSF/OpenTX do not have this option TQly Downlink - link quality (valid packets) 0 - 100 An LQ indicator of telemetry packets received by TX. RX \u2192 TX TRSS Downlink - received signal strength (RSSI) RSSI dBm of telemetry packets received by TX. RX \u2192 TX TSNR Downlink - signal-to-noise ratio SNR reported by the TX for telemetry packets. RX \u2192 TX <p>See the Signal Health page for more info on interpreting link stats. </p> <p>If you have other questions or concerns, or maybe you need further help that is not covered by this Guide, head over to our Discord Channel or Facebook Group!</p> <p>ExpressLRS Discord  ExpressLRS Facebook </p>"},{"location":"gsod/","title":"Google Season of Docs: Project Page","text":"<p>Review and Expand ExpressLRS User Documentation - expresslrs.org</p>"},{"location":"gsod/#about-the-organization","title":"About the organization","text":"<p>ExpressLRS (ELRS) is an open source project focusing on developing a radio control (RC) link. The link is primarily designed for first-person view (FPV) crafts (e.g Multicopters, Planes). ELRS aims to provide the best completely open source, high refresh radio control link, minimizing latency while maximizing range. A vast range of hardware in both 900 MHz and 2.4 GHz frequencies is available.</p> <p>FPV is a community built on top of open source projects such as flight controller firmware Betaflight and RC handset firmware EdgeTX.  ELRS fills a void for an open source and high performance RC link with an active development team of about 20 volunteers.</p> <p>github.com/ExpressLRS was created nearly 4 years ago and in the past 12 months has experienced significant growth.  Not only in code contributions, but also users and commercial manufacturers releasing ELRS compatible hardware.</p>"},{"location":"gsod/#about-the-project","title":"About the project","text":""},{"location":"gsod/#the-projects-problem","title":"The project\u2019s problem","text":"<p>During early ELRS development users were required to Do It Yourself (DIY) and build their own hardware. This tended to attract tech savvy users. However, in the past 12 months a number of commercial manufacturers have released ELRS compatible hardware. A much wider user group now exists of varying knowledge and initial setup of ELRS can be troublesome. More so for users who are also new to FPV.</p> <p>A review of the existing user documentation by a technical writer, who has not previously been exposed to FPV, will bring a fresh pair of eyes to the project and help identify knowledge gaps.</p>"},{"location":"gsod/#the-projects-scope","title":"The project\u2019s scope","text":"<p>The ExpressLRS GSoD project will:</p> <ul> <li>Introduce the Technical Writer to the FPV community and teach them about flying a FPV multicopter\u2026 Lets try and have some fun first </li> <li>Introduce the Technical Writer to our troubleshooting procedures.</li> <li>This experience will help to identify any knowledge gaps in existing user ELRS documentation.</li> <li>Devs and Advanced Users will provide information on general user queries from project volunteers and assist with documentation on recurring issues.</li> <li>Review documentation used to assist manufacturers where English may not be their first language.</li> <li>Hopefully assist in a major release (ELRS V3) and release notes.</li> </ul> <p>We estimate that this work will take 4-6 months to complete.</p> <p>Work that is out-of-scope of ELRS project: - In-depth PID Tuning of RC vehicles (Multicopter, Fixed - Wing, Boat, Rover). - Auxiliary function of RC vehicles (Mapping, Package Delivery, Pest Control Drone, Weaponry).</p>"},{"location":"gsod/#measuring-projects-success","title":"Measuring project\u2019s success","text":"<p>The ELRS project runs a Facebook group (8.4k users at time of application) and Discord Server (8.1k users at time of application) to help users troubleshoot setup issues.  A milestone of this work will be to see the number of users posting setup issues reduced, and to have documentation for all common issues presented in a user first perspective and mindset.</p> <p>The project would be a success if we could provide a link to users for 90% of new user questions.</p> <p>ELRS Developers also volunteer a lot of time communicating with commercial manufacturers.  For a majority of the manufacturers English is not their native language and current ELRS documentation may be confusing.  A long term goal of the project is to minimize design errors in commercial hardware releases.</p>"},{"location":"gsod/#timeline","title":"Timeline","text":"<p>The documentation project will take approximately four to six months. It is expected the initial learning about FPV, Multicopters and ELRS may take 4 - 8 weeks.  During which time the existing documentation can be used and reviewed.  The remaining time will be used updating and expanding existing user, manufacturer, and developer documentation. ELRS has set its next major release goal before November to include release notes coordinated from this project.</p> Dates Action Items May - June Learning FPV and ELRS from scratch July - August Updating and expanding current User and Manufacturer documentation September - October ELRS V3 release notes and new feature documents November Project Completion"},{"location":"gsod/#proposed-budget","title":"Proposed Budget","text":"Budget Item Amount Running Total Notes Technical Writer 10,000 10,000 26 wk, 6 hrs/wk Technical Writer Hardware 2,000 12,000 FPV Hardware Volunteer stipends 500 14,500 2 ELRS Devs + 3 Adv User Total 14,500"},{"location":"gsod/#additional-information","title":"Additional information","text":"<p>The ELRS development team includes a range of expertise, from software professionals, academics, researchers, scientists, and university students.  And we love nothing more than nerding out on all things FPV in our free time </p>"},{"location":"gsod/#case-study","title":"Case study","text":"<p>ExpressLRS</p> <p>Organization Description:</p> <p>ExpressLRS (ELRS) is an open source project focusing on developing a radio control (RC) link. The link is primarily designed for first-person view (FPV) crafts (e.g Multicopters, Planes). ELRS aims to provide the best, completely open source, high refresh radio control link, minimizing latency and maximizing range. A vast range of hardware in both 900 MHz and 2.4 GHz frequencies is available.</p> <p>FPV is a community built on top of open source projects such as flight controller firmware Betaflight and RC handset firmware EdgeTX.  ELRS fills a void for an open source and high performance RC link with an active development team of about 20 volunteers.</p> <p>github.com/ExpressLRS was created nearly 4 years ago and in the past 12 months has experienced significant growth.  Not only in code contributions, but also users and commercial manufacturers releasing ELRS compatible hardware.</p> <p>Problem Statement / Proposal Abstract</p> <p>During early ELRS development users were required to Do It Yourself (DIY) and build their own hardware. This tended to attract tech savvy users. However, in the past 12 months a number of commercial manufacturers have released ELRS compatible hardware. A much wider user group now exists of varying knowledge and initial setup of ELRS can be troublesome, especially for users who are new to FPV.</p> <p>A review of the existing user documentation by a technical writer, who has not previously been exposed to FPV, will bring a fresh pair of eyes to the project and help identify knowledge gaps.</p> <p>Project Description</p> <p>Creating the proposal</p> <p>The proposal idea was pretty easy for us, as we like to keep it simple.  GSoD is fundamentally about improving documentation and also supporting technical writers, so we collectively decided we needed the support to hire a writer to review &amp; write better documentation.  The exploding ELRS users base meant we could not continue to provide 1 on 1 support to new users, unlike in the beginning of the project.  The demand for more and better documentation is and will be ongoing during the ELRS growth period.  However, the community appears to have reached a critical mass and the user base is great at supporting new users.</p> <p>Budget</p> <p>Of the initially deposited $5800:</p> <p>$3000 was invoiced by our Technical Writer.</p> <p>$1,849.42 of the proposed $2000 hardware budget has been spent.</p> <p>$600 of the proposed $1000 volunteer stipend has been claimed.</p> <p>The project was able to stay within the initial budget.  Some ExpressLRS hardware manufacturers were even able to help with additional hardware and we thank (in alphabetical order) BETAFPV, Happymodel, and RadioMaster for their assistance in providing hundreds of dollars of free hardware to our technical writer.</p> <p>Participants</p> <p>The project had 5 volunteers that were either developers or long term users who were integral community members with their insight: deadbyte, maybenikhil, StonedDawg, YeOldePirate, and commanderguy3001.  </p> <p>We selected our writer Agha Saad after reviewing many resumes and cover letters. He offered an incredibly detailed set of goals and timeline &amp; had previous season of docs experience with Arduino.</p> <p>While no one dropped out of the project, there were personal issues that arose during the period that made it difficult for some volunteers to be available.  This did significantly impact the project's timeline and delay hardware delivery.</p> <p>Selecting a writer with a pre-existing interest in RC or similar hobby that aligned with the projects, and not focus solely on writing experience, may also have assisted with keeping to the timeline, due to hardware being more accessible to them.</p> <p>Timeline</p> <p>Our initial timeline has been heavily delayed through the delivery of hardware to our Writer and the eventual confiscation of said hardware.  More details are provided below.</p> <p>Results</p> <p>A number of PRs were merged by the Technical Writer, which include major technical topics/issues such as Crystal Oscillator (XO) Frequency Error.  However key beginner documents were difficult without hardware for our writer to have hands on experience with.</p> <p>Metrics</p> <p>A key metric for the success of the project was to address common user issues in the documentation. Another key metric is the project's user base &amp; growth: at the time of the proposal the Facebook group had 8.4k and Discord 8.1k users.  These groups have now grown to 12.4k and 13k respectively!</p> <p>Therefore, we can say that we observed significant growth as a project &amp; organization within the months of Google Season of Docs, but have no strong metrics correlating to use of documentation, as compared to the beginning of the project.</p> <p>Analysis</p> <p>A number of challenges were met during this project.  With the final hurdle being the import of FPV hardware to the Technical Writer.  In the end the hardware required for learning FPV, building, and flying were confiscated by the country's Ministry of Defense.  This massively limited what could/can be completed during the project.</p> <p>In good faith, the ExpressLRS devs can not call this project a success, as without hardware to write about the documentation that most affects new users did not see many significant improvements.</p> <p>Summary</p> <p>A number of PRs were merged by the Technical Writer, which is to be commended without access to hardware.  If ELRS was to participate in GSoD again in the future there are a couple major conditions that require checking before hiring a writer:</p> <ul> <li>Is FPV legal in their country?</li> <li>Is the import of FPV/RC hardware legal in their country?</li> </ul> <p>Hot tip for other organizations participating in GSoD and dealing with hardware (especially within the RC &amp; FPV communities).  Potentially look to hire someone in a country, or in close proximity to one of the participating developers or volunteers.  Local expertise to help with delivery and hand up assistance will be invaluable, as well as an existing understanding of complex regulations surrounding the project.</p>"},{"location":"hardware/crystal-frequency-error/","title":"Crystal Oscillator (XO) Frequency Error","text":""},{"location":"hardware/crystal-frequency-error/#principle","title":"Principle","text":"<p>ExpressLRS TX and RX modules generate RF signals based on an external clock source, such as a crystal oscillator (XO). For example, an ExpressLRS 2.4GHz module has an SX1280/1281 RF transceiver chip with a 52 MHz XO. Theoretically, XO is desired to be 52 MHz exactly to generate an accurate 2.4GHz RF signal. However, a real-world XO has deviation for various reasons, such as manufacturing error and ambient temperature.</p> <p>Real-world TX and RX modules deviate from the reference frequency, depending on the quality of XO used and circuit design. Despite that, if the frequency difference is within a certain threshold, they can communicate with each other (<code>working pairs #1 and #2</code> in the picture). However, the last malfunctioning TX/RX pair will not communicate. In ELRS 2.4GHz@500Hz, the threshold is around 190 kHz.</p> <p></p> <p>This issue may affect both 2.4GHz and 900MHz units. To compensate for this, 900MHz modules do online frequency correction, which tunes the RX frequency automatically to the TX unit once connected. Even in this case, if the TX/RX frequency error is too large to make any connection,  the frequency correction won't help. 2.4GHz modules are more vulnerable to frequency error because they can't do frequency correction due to some technical issues, which has risks of a connection drop due to frequency drift from the change of unit temperature.</p>"},{"location":"hardware/crystal-frequency-error/#recommendation-to-elrs-hardware-manufacturers","title":"Recommendation to ELRS hardware manufacturers","text":"<ul> <li>For SX1280/1281, USE 52 MHZ XO RATED 10 PPM TOLERANCE, 10 PF LOAD CAPACITANCE.</li> <li>Do not add unnecessary extra load capacitors. If you add the extra caps for the frequency fine-tune, please VERIFY THE FREQUENCY ACCURACY WITH YOUR FINAL PRODUCT (for every new batch). The detailed procedure is described in this document.</li> </ul>"},{"location":"hardware/crystal-frequency-error/#the-ultimate-solution-tcxo","title":"The ultimate solution -- TCXO","text":"<p>TCXO (Temperature Compensated Crystal Oscillator) is a special kind of crystal oscillator, which equips a temperature-compensation circuit inside the package. Unfortunately, TCXO could not be a drop-in replacement for a normal XO, as it requires additional circuitry and needs a redesign of the module. Please refer to SX1280 reference design (part 15.2, Application Design with optional TCXO) to apply.</p> <p>The advantage of TCXO over a normal XO is its frequency accuracy and stability. Usually, the frequency tolerance of a TCXO is &lt;2 ppm, while the error of a good XO is limited to about 10 ppm. While a good XO is totally fine for ELRS operations (it can tolerate up to 50 ppm relative errors), a TCXO could be a silver bullet to eliminate the frequency offset issue entirely.</p>"},{"location":"hardware/crystal-frequency-error/#frequency-error-measurement","title":"Frequency error measurement","text":"<p>So far, we have established two ways of measuring the XO frequency error: </p> <ul> <li>Absolute </li> <li>Relative</li> </ul>"},{"location":"hardware/crystal-frequency-error/#measuring-absolute-xo-error-not-for-everyone","title":"Measuring absolute XO error (not for everyone)","text":"<p>Note</p> <p>This procedure requires a special instrument, which is not expected of a regular ELRS user.</p> <p>The current ELRS <code>master</code> branch (after PR #1785) equips a test-tone mode. After flashing a TX/RX unit with <code>master</code> branch, get into WiFi update mode, and access <code>http://10.0.0.1/cw.html</code> which should look like the figure below:</p> <p></p> <p>By clicking the <code>START CONTINUOUS WAVE</code> button, the unit will generate a continuous wave at 2440 MHz. By measuring the output frequency with a spectrum analyzer (e.g., HackRF SDR), you can determine how the XO deviates from the reference frequency (2440 MHz). Within 20 ppm (=~50 kHz) absolute error over the entire working operating temperature (from -20 to 85 degC) is expected for a good unit. Up to 40 ppm error (=~100 kHz) is acceptable.</p> <p>Caution: don't use Continuous Wave mode for longer periods of time to avoid excessive heat up of the RF unit.</p>"},{"location":"hardware/crystal-frequency-error/#measuring-relative-xo-error-between-a-tx-rx-pair","title":"Measuring relative XO error between a TX-RX pair","text":"<p>You'll need to use \"Manual mode\" in the configurator to enable a special debug mode. In addition to this debug mode flag, you should add any other user defines you need to get your TX/RX to connect (check the user defines section).</p> <p>For example, this might look like (which is safe to just copy-paste in general):</p> <p></p> Configurator Manual Mode <pre><code>-DMY_BINDING_PHRASE=\"frequency_test\"\n-DRegulatory_Domain_ISM_2400\n-DLOCK_ON_FIRST_CONNECTION\n-DUART_INVERTED\n-DAUTO_WIFI_ON_INTERVAL=60\n-DDEBUG_FREQ_CORRECTION\n</code></pre>"},{"location":"hardware/crystal-frequency-error/#procedure","title":"Procedure","text":"<ul> <li>Using the configurator and user defines, include the <code>-DDEBUG_FREQ_CORRECTION</code> define for BOTH TX AND RX builds of any version of ELRS past v3.0.0 (i.e. V3.0.0 RC2)</li> <li>After loading the new firmware on both TX and RX, go to the telemetry screen in your model settings on the TX side. Note the \"RSNR\" value. This is the relative difference between your TX and RX clocks.</li> <li>The closer this value is to 0, the better!. Negative means the RX clock is slower than TX, and positive means that it is faster.</li> <li>\u00b1 20 ticks (~30 kHz offset) is nearly perfect. \u00b160 ticks (~95 kHz) will still likely be completely fine, though not ideal. \u00b170 ticks and further is marginal and might be fine, but you should be careful.</li> <li>The TX-RX pair can communicate up to about 110 ticks (~170 kHz). However, because you'll want some safety margin, DO NOT USE the gears with \u00b190 ticks of error.</li> </ul>"},{"location":"hardware/crystal-frequency-error/#measuring-ticks","title":"Measuring ticks","text":"<p>The tick value that appeared in the RSNR field is a scaled value of the frequency offset, and here is the conversion formula:</p> <p>\\(Freq_{kHz} = Tick \\times 1.575\\)</p> <p>For example, if you got the tick value of 30, the frequency offset between your TX and RX is \\(30 \\times 1.575 = +47.25_{kHz}\\), and this means your receiver is generating 47.25 kHz higher frequency than your TX.</p>"},{"location":"hardware/crystal-frequency-error/#measuring-absolute-error","title":"Measuring absolute error","text":"<p>When one unit in the measured pair uses TCXO with good error tolerance (desirably &lt;1 ppm) as the SX1280 clock source, the measured ticks will represent the absolute error of the counterpart unit.</p>"},{"location":"hardware/crystal-frequency-error/#elrs-txrx-error-measurement-samples","title":"ELRS TX/RX error measurement samples","text":"<p>We measured the frequency deviation of RX modules from various makers and samples, using the absolute method mentioned above. In the graph, 0 is the reference frequency, and the amount of frequency deviation is shown as the bars. Closer to zero is better. More than 200 kHz deviation is considered to be out of tolerance.  Please note that they are only a few samples acquired by the devs, which may not represent the entire product batches.</p> <p></p> <p>There are a few interesting points in the graph.</p> <p>1 All three samples from JHEMCU have significantly deviated more than other makers. A TX module at the reference frequency will not bind to <code>JHEMCU #3 (yellow bars)</code>. Also, a TX module with a slight positive frequency deviation will not bind to <code>JHEMCU #1 and #2</code> as well. 2 Ambient temperature changes the operating frequency of a module. In the graph, <code>Jumper Aion RX (blue bars)</code> and <code>JHEMCU #3 (yellow bars)</code> were chilled and heated, and their operating frequencies were changed around +- 50 kHz. 3 A few makers added extra load capacitors to XO, which lowered their operating frequencies. In this graph, Matek (pink and green bars) and Jumper (blue bars) modules were shipped with the extra load caps. Removing them shifted the frequency to the higher side. 4 Overall frequency errors tend to shift toward the negative side. This might be caused by using XO designed for 8pF load, while the internal load capacitance of SX1280 is 10 pF.</p> <p>To conclude, XO frequency error is unavoidable. However, a careful circuit design and good-quality parts can control the error within the tolerable amount.</p> <p>Just to note, we've had some mismatching cases as follows:</p> <ul> <li>JHEMCU (which are rebranded and sold as Flywoo, HiYounger as well) SP24S and EP24S units have frequently reported not being able to bind. (Their units tested here are bad as well)</li> <li>A few cases were reported that Matek R24-D, R24-S, and Jumper Aion RX Mini units were not able to bind with some TXes (e.g., HappyModel ES24TX Pro). Removing the additional caps around 52 MHz XO solved the issue.</li> </ul> <p></p> Caps to be removed <p></p> Jumper Aion Caps <p></p> Flywoo Caps"},{"location":"hardware/crystal-frequency-error/#how-to-video","title":"How-to-video","text":"<p>You can also follow the below video which helps to fix ELRS RX Frequency Error by removing extra caps.</p>"},{"location":"hardware/crystal-frequency-error/#acknowledgment","title":"Acknowledgment","text":"<p>The Crystal Oscillator error documentation would not have been possible without the work and huge effort from the @SunjunKim</p>"},{"location":"hardware/fan-mod/","title":"R9M Fan Mod","text":"<p>Initially, this mod is brought to life by Niklas Voigt and Seba112PL as a beta tester and is still a work in progress.. if you have suggestions don't hesitate to contact.</p> <p>DISCLAIMER</p> <p>Users have experienced temperature issues on R9M that degrades the link quality. We recommend you use the lowest power setting required for your flight and turn on dynamic power at all times (ELRS v2.0+)</p> <p>Hot Tip</p> <p>It might seem counterintuitive, but using less power might help for longer flight times and more range by reducing the heat. ELRS does not require a lot of energy and looking at the long-range leader board</p>"},{"location":"hardware/fan-mod/#1w-mod","title":"1W Mod","text":"<p>WARNING</p> <p>With this mod your R9M is still limited to 1W</p> <p> </p> <p>You need a 20x20mm or 25x25mm fan in 5V version.  Both sizes are supported. To secure the fan into the cover you can use 2x M2 screws, a thread is already in the print. You can solder the pins of the fan directly to the 5v port of the R9M or use the Controllable Fan Mod which can control the fan out of software (fan blows only at &gt;250mW). </p> <p>R9M Fan Mod Cover is built out of four Parts and a Sticker:</p> <p></p>"},{"location":"hardware/fan-mod/#download","title":"Download","text":"<ul> <li>R9M-Fan-Case-Cover.stl</li> <li>R9M-Fan-Case-Pins.stl</li> <li>R9M-Fan-Case-XT30.stl</li> <li>R9M-Fan-Case-Standoff.stl (2x)</li> <li>R9M-ExpressLRS-900MHz.pdf</li> </ul> <p>or from Thingiverse</p>"},{"location":"hardware/fan-mod/#controllable-fan-mod","title":"Controllable Fan Mod","text":"<p>Additionally to the fan, you'll need one NPN Transistor (e.g. <code>2N4401</code>) or N-Channel MOSFET (e.g. <code>BS170</code> has built-in Schottky-Diode) and a resistor (200-3k7)</p> <p>' </p>"},{"location":"hardware/fan-mod/#r9m2019-build-notice","title":"R9M2019 Build notice","text":"<p>The PB9 pad location on the R9M2019 module is a bit different. Please see the photo.</p> <p></p> PB9 pad location"},{"location":"hardware/fan-mod/#2w-mod","title":"2W Mod","text":"<p>WARNING</p> <p>Only do this if you are comfortable with modding hardware</p> <p>In addition to the 3D printed Cover &amp; the Controllable Fan Mod you'll need:</p> <ul> <li>Fan + Heatsink <code>\"2507 25MM 25x25x13MM Hydraulic bearing Graphics card Cooling fan with heat sink 5V 12V m.2 SSD Fan with 2pin\"</code></li> <li>Thermal Pad 0.5mm <code>\"1pc 100mmx100mmx0.5mm GPU Northbridge IC LED Chipset Heatsink Cooling Conductive Silicone Thermal Pad,100x100x0.5mm w/ 3.2W/M-K\"</code></li> </ul> <p>The screw heads are cut off to reduce height.</p> <p> </p> <p>As you can see in picture 3, the 5v fan is connected to the power source of the module, so the fan is used with some overvoltage and spins with higher rpm... tested for a long time and should not be a problem for the fan. If you don't know how to allow the 2W in the firmware, don't do this mod!\ud83e\udd26\u200d\u2642\ufe0f</p>"},{"location":"hardware/fan-mod/#here-are-some-makes","title":"Here are some makes","text":""},{"location":"hardware/hardware-selection/","title":"Hardware Selection","text":"<p>ExpressLRS is #blessed with the benefit of there being many options of transmitters and receivers available from a variety of manufacturers. This begs the question \"what is the best?\" There is no best option for hardware, only one that has the features you want for the price you want to pay in the size you want it. ExpressLRS does not recommend a specific brand or model, but provide the information to help you select the right ELRS hardware for your needs. The following page will list manufacturers and features to look out for on their hardware.</p> <p>Note</p> <p>This list will list primarily 2.4GHz hardware with 900MHz only listed in the frequency category, as 2.4GHz has become a significantly larger portion of the ELRS market.</p>"},{"location":"hardware/hardware-selection/#manufacturers","title":"Manufacturers","text":"<ul> <li>Axisflying</li> <li>BetaFPV</li> <li>EMAX</li> <li>Foxeer</li> <li>FrSky</li> <li>GEPRC</li> <li>Happymodel</li> <li>HGLRC</li> <li>iFlight</li> <li>Jumper</li> <li>MatekSys</li> <li>NamimnoRC</li> <li>RadioMaster</li> <li>Skystars</li> <li>Vantac</li> </ul>"},{"location":"hardware/hardware-selection/#receiver-selection","title":"Receiver Selection","text":"<p>This section exists to list some common features of receivers and will give some examples of receivers with these features.</p> <p>Each build is different, but these are recommended things to look for when selecting a receiver:</p> <ul> <li>Whoops / Toothpicks / Light aircraft: Size is probably the most important feature, with a light small receiver and an onboard antenna being the best choice.</li> <li>Racing Quads: Size is again most important. Ceramic antennas could be less easily damaged, and the reduced range of tucking them inside the frame is fine due to the short flight range. An external 2.4GHz antenna dipole is still pretty easy to fit and can be tucked away for a small improvement over the ceramic, but comes with a chance of Choppage.</li> <li>Freestyle Quads: Minimum size is no longer an issue so Nano-sized receivers are the best bet here. An LNA is going to give you better reception behind obstacles. External antennas are a benefit as well, but you need to trade off how unobstructed the antenna will be versus getting it chopped. Diversity can be of major benefit in medium-range scenarios to prevent antenna nulls from pointing towards transmitters and carbon or concrete blocking one antenna.</li> <li>Long Range: For sure you need an LNA, an external antenna, and a PA to extend the telemetry range. This isn't to say these are required for long range, 5km is achievable on a ceramic antenna receiver with no LNA/PA at 250Hz/100mW with a clear line of sight. Diversity can be useful for longer-range quads, to prevent carbon from blocking antennas or antenna nulls from pointing toward the transmitter in certain flight orientations. For planes without a flight controller, PWM receivers will work great. For absolute maximum range, 900MHz can do more but 2.4GHz can still do 50+km.</li> </ul> Frequency <p>ExpressLRS offers both 2.4GHz and 900MHz systems, with each only working with receivers and transmitters of the same frequency. 2.4GHz is the currently most popular frequency given its legality, features and cost. 2.4GHz links offer the fastest packet rates allowing for a more locked-in feel while piloting and still offering massive amounts of range. 900MHz is the original long-range frequency and still can be great for high wifi pollution environments with slightly better penetration.</p> <p>For new users, unless you plan on flying hundreds of kilometers or in a high-noise environment we recommend 2.4GHz hardware such as:</p> <ul> <li>Happymodel EP Series</li> <li>Radiomaster RP Series</li> <li>NamimnoRC Flash Series</li> </ul> <p>If you have an R9 system or similar or plan on flying beyond reasonable ranges, some great 900MHz receivers include:</p> <ul> <li>BetaFPV Nano900</li> <li>Happymodel ES900RX</li> <li>GEPRC Nano 900MHz</li> </ul> Antenna Type <p>Antennas are where the radio waves come and go from the receiver. ExpressLRS offers many different antenna types, with dipoles and ceramic antennas (see SMD Antennas) being the most common types of reciever antennas. In terms of range: Ceramic antenna &lt; Mini Dipole (\"Minimortal-T\" style) &lt; sleeved dipole &lt; Half-wave Dipole. A diagram of the antennas and their sizes for the 2.4GHz band is shown below:</p> <p> </p> <p>Unless otherwise noted, most receivers will have a U.FL/IPEX connecter which supports external antennas. Some receivers with ceramic antennas are:</p> <ul> <li>Happymodel EP2 </li> <li>Radiomaster RP2</li> <li>MatekSys R24-S</li> </ul> Diversity <p>Diversity improves reception compared to standard receivers by using multiple antennas. A standard receiver has a single antenna, while antenna diversity uses two antennas and a switch to route the signal from one or the other. True diversity takes it a step further by using two radio chips, each connected to a different antenna, and choosing the one with the strongest reception at any given time. This provides a level of redundancy which is particularly beneficial for flight where the antenna nulls can point towards the pilot (e.g. freestyle flight)</p> <p> </p> <p>Some receivers with antenna diversity include:</p> <ul> <li>Radiomaster RP3</li> <li>Namimno Flash Diversity</li> <li>Matek R24-D</li> </ul> <p>Some receivers with true diversity include:</p> <ul> <li>Happymodel EP1 Dual</li> <li>BetaFPV SuperD</li> </ul> PWM <p>PWM is used for crafts that do not have flight controllers and allow for direct control of ESCs and Servos. See the page on PWM for more in-depth information on using PWM.</p> <p>Some PWM receivers include:</p> <ul> <li>MatekSys R24-P6</li> <li>Happymodel EPW6</li> <li>Radiomaster ER5A/C</li> </ul> PA/LNA <p>A Low Noise Amplifier (LNA) directly adds to your incoming RSSI. Typical gains are in the ballpark of +12dBm which will be observed in the RSSI as being 12dBm higher than it would have been without the LNA. This is because the LNA amplifies the incoming signal coming from the antenna before going to the RF chip, which increases the sensitivity of the receiver by boosting the incoming signal. An LNA also boosts the noise by the same amount so the sensitivity limit will likely be lower than the value quoted by the Lua.</p> <p>A Power Amplifier (PA) boosts the outgoing signal strength and extends the telemetry range back to the TX. Without a PA, the power output is limited by the RF chip's max power output itself (around +13dBm 20mW). It works the same way as turning up the power output on the transmitter module, however it is not adjustable. The receiver's output can be ran at adjustable power levels given range needs. Most PAs are 20dBm/100mW, meaning the telemetry transmit power can be adjusted to 10, 25, 50 or 100mW.</p> <p>Receivers with a PA/LNA will have a listed telemetry output power in dBm or mW</p> <p>Some receivers with a PA &amp; LNA are the following:</p> <ul> <li>Radiomaster RP3 (100mW)</li> <li>Skystars Nano SS24D (20dBm)</li> <li>MatekSys R24-D (23dBm)</li> <li>BetaFPV SuperD (20dBm)</li> </ul> Size <p>The FPV world shook when ELRS released receivers that were half the size of \"nano\" sized receivers, included the antenna onboard, and still had kilometers of range at 250Hz/100mW. A small receiver can fit in tight places, but remember that tucking a tiny receiver's ceramic antenna deep inside a stack behind carbon reduces its performance, which was already compromised by the elimination of amplifiers to make it that small. Larger ELRS receivers regain these amplifiers offering better reception and telemetry range at the cost of size and weight. The common size classes are shown below, but there are other receivers with slightly different sizes:</p> <p> </p> <p>PP Sized Receivers (absolute smallest, lowest range regardless of antennas):</p> <ul> <li>Happymodel EP/PP</li> <li>Radiomaster RP</li> <li>BetaFPV Lite</li> </ul> <p>Nano Sized Receivers (medium sized, can have PA/LNA but tends to lack some features):</p> <ul> <li>BetaFPV Nano</li> <li>iFlight RXes</li> <li>Namimno Flash Diversity RX</li> <li>Axisflying Thor RX</li> <li>Namimno Flash RX</li> </ul> <p>Larger Receivers (most feature rich but also significantly larger)</p> <ul> <li>Matek R24-D</li> <li>Radiomaster RP3</li> <li>BetaFPV SuperD</li> </ul>"},{"location":"hardware/hardware-selection/#transmitter-selection","title":"Transmitter Selection","text":"<p>This section lists out some common features of transmitters and some examples of transmitters with those features</p> <p>Everyone has different needs for a transmitter but the main needs come down to size, range and integration.</p> Built-In Transmitters <p>Certain manufacturers have made handsets with built in ELRS modules, which offer tighter integration with ELRS. These can be updated through the handset as well as generally over WiFi as is standard.</p> <p>Some handsets with built-in ELRS include:</p> <ul> <li>RadioMaster TX16S ELRS</li> <li>RadioMaster Zorro ELRS</li> <li>BetaFPV Lite Radio 3 Pro ELRS</li> <li>Jumper T-Pro</li> <li>Jumper T-Lite v2</li> </ul> <p>A notable exception to this list is the iFlight Commando, which, while including a TX built into the handset is simply wired as an external module, and put within the casing. It does support an external module and notably has both 868/915MHz and 2.4GHz options available</p> Frequency <p>ExpressLRS offers both 2.4GHz and 900MHz systems, with each only working with receivers and transmitters of the same frequency. 2.4GHz is the currently most popular frequency given it's legality, features and cost. 2.4GHz links offer the fastest packet rates allowing for a more locked-in feel while piloting and still offer massive amounts of range. 900MHz is the original long range frequency and still can be great for high wifi pollution environments with slightly better penetration.</p> <p>For new users unless you plan on flying hundreds of kilometers or in a high noise environment we recommend 2.4GHz hardware such as:</p> <ul> <li>Axisflying Thor</li> <li>RadioMaster Ranger</li> <li>HappyModel ES24TX Pro</li> <li>Namimno Flash</li> </ul> <p>If you want to push the limits of range, a 900MHz system might fit within your needs. Some off the shelf 900MHz transmitters include:</p> <ul> <li>Namimno Voyager</li> <li>Happymodel ES900TX</li> <li>BetaFPV Micro 915/868MHz</li> </ul> Size <p>Most ExpressLRS Transmitter modules fit into one of two classes - Micro and Nano. There are some exceptions that fit into multiple or have interesting features that may make them work better for your needs.</p> <p>Micro modules will fit into the JR bay of a standard transmitter such as a TX16s or QX7, with some examples including:</p> <ul> <li>RadioMaster Ranger Micro</li> <li>Namimno Flash</li> <li>HappyModel ES24TX</li> </ul> <p>Nano modules will fit into a lite module bay such as that on a Zorro, T-Pro or X-Lite with some examples including:</p> <ul> <li>HappyModel ES24TX Slim Pro</li> <li>RadioMaster Ranger Nano</li> <li>Jumper AION Nano</li> <li>BetaFPV Nano</li> </ul> <p>Some notable exceptions that can fit into multiple or very specific module bays include:</p> <ul> <li>HappyModel ES24TX Lite - Fits onto Jumper T-Lite</li> <li>Axisflying Thor - Has a wire system to be able to plug into any radio with a CRSF output</li> <li>Radiomaster Ranger - includes Micro &amp; Nano mounts and wiring for any CRSF compatible radio</li> </ul> Power <p>Most ELRS Transmitters have a 250mW or 500mW power cap, but if you need to go a bit further, a select few 1W modules exist (see the Inverse-square law for info on why 1W does not double the range over 500mW), packing that punch needed to go even further. These transmitters include large heatsinks, fans and sometimes temperature-sensing to cool the RF components. Some of these 1W transmitters are:</p> <ul> <li>HappyModel ES24TX Pro</li> <li>RadioMaster Ranger (Full Size, Micro and Nano all are 1W)</li> <li>Axisflying Thor</li> <li>BetaFPV Micro TX 1W</li> <li>RadioMaster Boxer</li> <li>Jumper T-Pro Internal</li> <li>NamimnoRC Flash (both OLED &amp; non-OLED models)</li> </ul> Screens <p>Some transmitters include a small screen that displays useful information and pairs with a small joystick to quickly change settings on the go. This can be useful when paired with handsets running firmware that does not support lua scripts. The two main types of screens are TFT and OLED:</p> <p> </p> <p>The only transmitter with a TFT screen on the market at the moment is the Axisflying Thor TX.</p> <p>Some transmitters with an OLED include:</p> <ul> <li>Namimno Flash OLED</li> <li>RadioMaster Ranger</li> <li>BetaFPV Micro TX</li> <li>Jumper AION Nano</li> </ul> Backpack <p>Most current transmitters will include a backpack, which enables communication with accessories such as a VRX allowing for tighter integration with the transmitter and drone. Transmitters with a built-in backpack include:</p> <ul> <li>HappyModel ES24TX Pro</li> <li>HappyModel Slim Pro</li> <li>NamimnoRC Flash</li> <li>AxisFlying Thor</li> <li>RadioMaster Zorro</li> <li>BetaFPV Micro TX 1W</li> </ul> Antennas <p>Besides handset integrated transmitters, all ELRS TX modules support many antennas so this serves as a guide to antenna types and connectors.</p> <p>ELRS TX Modules have two connecters, which are visually similar - SMA and RP-SMA  </p> <p>These connecters mount many types of antennas which have different types of radiation patterns. The first figure depicts the types of antennas commonly sold with transmitters:  </p> <p>The most common antennas sold besides simple dipoles are moxons and folded dipoles, which visually look similar which helps distinguish the two:  </p> <p>The radiation patterns of a moxon and folded dipole are depicted below in a isotropic, lateral and top view  </p> Bling Features <p>Certain transmitters have \"bling features\" which are less important than the other listed features. Some of these include RGB LEDS, Temperature Sensors and G Sensors.</p> <p>RGB LEDs are included on many modern TXes, and also serve as a useful status indicator.</p> <p>Temperature sensors are useful for higher power transmitters, to turn on the fan only when needed instead of constantly running while transmitting which reduces noise. Currently the only transmitter with this feature is the Axisflying Thor.</p> <p>G Sensors/Motion sensors use a 3 axis linear accelerometer to detect the orientation of the transmitter and also can use bump to handoff for loan model. The transmitters that ship with this feature is the Axisflying Thor &amp; RadioMaster Ranger</p>"},{"location":"hardware/inverter-mod/","title":"R9M Inverter Mod","text":""},{"location":"hardware/inverter-mod/#overview","title":"Overview","text":"<ul> <li>To benefit from the higher bitrate of 400 kilobits per second using <code>OpenTX</code>/<code>EdgeTX</code> you need to add a pull-up resistor to the inverter of the serial port on the R9M 2018\ud83d\uddfb\ud83c\udd99</li> <li>Strongly suggested being done for anybody looking for higher than standard packet rates using <code>ExpressLRS</code> \ud83d\udd2e</li> </ul>"},{"location":"hardware/inverter-mod/#identification","title":"Identification","text":"<p>\u26a0\ufe0f This is only required for the 2018 version of the module which has a <code>ACCST</code> logo on the case \ud83d\udd0d</p>"},{"location":"hardware/inverter-mod/#modification","title":"Modification","text":"<p>Easy - connect a 300\u03a9 to 1000\u03a9 resistor between the <code>3.3V</code> and inverter pin as shown in the picture \ud83d\udc67</p> <p></p>"},{"location":"hardware/inverter-mod/#transmitter-notes","title":"Transmitter Notes","text":"<p>Some Radios/Transmitters will require the Inverter/Crossfire Mod depending on the Baud Rate you want to use or you can use. </p> Radio Baud Rate Inverter/Crossfire Mod R9M ACCST MOD Other Notes X9D 400000 Not Needed Required See Troubleshooting X10S Express 400000 Not Needed Required - X10S 400000 Required. Modding Guide. Required - X12 400000 Required. Modding Guide. Required - QX7 400000 Required. Modding Guide. Required See Troubleshooting QX7 115200 Not Needed Not Needed Max Packet Rate supported is 200Hz Others 400000+ Not Needed Required TX16S, TX12, T16/T18, etc <p><code>ACCESS</code> radios don't need the Inverter/Crossfire mod.</p>"},{"location":"hardware/pwm-receivers/","title":"PWM Receivers","text":"<p>ExpressLRS now supports direct PWM output from receivers. This documentation refers to only receivers with native PWM output, not receivers attached to external CRSF to PWM converters such as the CRServoF or Matek CRSF-PWM-C.</p>"},{"location":"hardware/pwm-receivers/#channel-mapping-and-failsafe","title":"Channel Mapping and Failsafe","text":"<p>The default channel mapping is straight through: CH1 from the TX goes to PWM Output 1, CH2 to Output 2, etc. To change this on ESP-based receivers, allow the receiver to go into WiFi mode then use the WebUI to configure the mapping. Any input channel can be mapped to any output channel, and the same input can be used for as many outputs as desired. AUX1/CH5 is always 1-bit, so you'll likely want to change this mapping to a channel with more resolution.</p> <p></p> PWM Output WebUI <p>Failsafe values are set using this UI as well with values that can range from 988us to 2012us. Failsafe is entered if the receiver is connected and Link Quality (LQ) drops to 0, or 1 second has passed without a valid channels packet being received, whichever comes first. On startup, no pulses are generated until a transmitter connects, allowing ESC throttle calibration with the standard \"raise the throttle before connecting\" method. The default failsafe value is 1500us for all channels except Output 3, which defaults to 988us.</p>"},{"location":"hardware/pwm-receivers/#channel-resolution","title":"Channel Resolution","text":"<p>PWM output is still subject to the resolution of the ELRS protocol, which means by default there are still only 4x full resolution channels (10-bit CH1-CH4) and 8x switch channels (CH5-CH12). For the best resolution on the switch channels, use <code>Switch Mode: Wide</code> and a <code>TLM Ratio</code> of <code>1:8</code> to <code>1:256</code> for 7-bit (128 pos) switch channel resolution. Higher TLM Ratios (1:2 and 1:4) are reduced to 6-bit (64 pos) resolution. Remember that switch channels are sent one per packet in Wide mode, taking 8 packets to send all 7 channels (e.g. 150Hz mode 1:64 = 18.657Hz updates to CH6-CH12). AUX1/CH5 is sent in every packet in all switch modes but is only 1-bit (2-pos). See Switch Configs for more information.</p> <p>Full-Resolution Switch Modes</p> <p>ELRS v3 now supports full-res switch modes, which provide 8, 12, or 16 full-resolution (10-bit) channels at 100Hz (900MHz and 2.4GHz) or 333Hz (2.4GHz only). For PWM receivers with more than 4 channels, it is recommended that you use one of the full-res modes for best performance. </p>"},{"location":"hardware/pwm-receivers/#supported-output-modes","title":"Supported Output Modes","text":"<p>ELRS receivers support the following PWM output modes:</p> <ul> <li>PWM output frequencies: 50Hz, 60Hz, 100Hz, 160Hz, 333Hz, 400Hz</li> <li>Normal pulse width (988-2012us - center 1500us), extended pulse width (885-2115us - center 1500us), and also half pulse width servos (494-1006us - center 750us)</li> <li>10kHz Duty Cycle 0-100% PWM (e.g. for driving a brushed motor FET)</li> </ul> <p>On top of this, outputs can also be set to:</p> <ul> <li>Binary On/Off (High/Low signal output)</li> <li>DSHOT300 (for driving brushless motor ESCs; ESP32-based receivers only)</li> </ul>"},{"location":"hardware/pwm-receivers/#serial-output","title":"Serial Output","text":"<p>PWM receivers can also output any supported serial protocol, such as CRSF or SBUS. Select the desired output protocol using the ELRS lua, or on the Model tab in the receiver's WebUI.  The default pins used for serial output vary by receiver. If your receiver has a dedicated serial port (e.g. RadioMaster ER6, ER8, ER8G(V)), serial output will be over this port. Otherwise, check the Model tab in the receiver's WebUI to see which pins can be mapped to Serial TX and RX (usually Ch2 and Ch3). </p> <p></p> JST-GH Serial Port on RadioMaster ER6 PWM Receiver <p>Advanced Output Mapping</p> <p>Advanced users can remap serial, I2C, and PWM outputs to any available pin using the hardware.html page in the receiver's WebUI. Please ask on the ELRS Discord if you need help configuring non-standard receiver output mapping. </p>"},{"location":"hardware/smd-antenna/","title":"SMD Antenna","text":""},{"location":"hardware/smd-antenna/#overview","title":"Overview","text":"<p>Have you ever been frustrated that you can't finish a race because your receiver antenna got chopped? Have you ever wished you could build a quad without worrying about how to mount your antenna? If so, the SMD Antenna is for you!  </p> <p></p> SMD Antenna <p>This perky little fellow is worse at receiving signals than his snaky brothers, but don't let that deter you! Because of the amazing range of ExpressLRS, he still gets all the range a racer could ever need. The SMD Antenna is available now on Happymodel PP/EP hardware and other 2.4GHz receivers. Take a look at the videos below to see what Mr. SMD can do for you.</p>"},{"location":"hardware/smd-antenna/#range-tests","title":"Range Tests","text":"<ul> <li>3km flight on 500Hz</li> <li>Parking Garage on 500Hz</li> <li>Range Comparison to Dipole</li> <li>RSSI Comparison Dipole</li> </ul>"},{"location":"hardware/smd-antenna/#maintenance","title":"Maintenance","text":"<p>Note</p> <p>The antenna is sort of fragile and can break off or be melted by a stray soldering iron. If this happens, you can save your receiver by soldering a U.FL/IPEX1 connector onto the pads as shown here. Just make sure the center pin has continuity with the filter at the other end of the trace, and no continuity with the ground.  </p> <p></p> <p>Conversely, the SMD antenna can be soldered to regular U.FL footprints if you're brave.  </p> <p></p>"},{"location":"hardware/spi-receivers/","title":"SPI Receivers","text":"<p>Supported RF Modes</p> <p>SPI receivers DO NOT support D(D250, D500), F(F500, F1000) and Full Res(100Hz Full Res, 333Hz Full Res) Modes (Packet Rates) and thus will not bind or sync with a TX module in any of these modes.</p> <p>You must use one of these packet rates with an SPI receiver: 50Hz, 150Hz, 250Hz, 500Hz.</p> <p>Update Betaflight 4.5.1 and newer now support FLRC modes (F500,F1000) for SPI receivers. F1000 is not recommended for FCs with F411 MCUs. </p> <p>A few Flight Controllers and AIOs have been released with ExpressLRS receivers on-board using SPI instead of a regular UART. This means you can build a more compact and lightweight whoop or nano long range rig without the need for an external receiver. More of these flight controllers are coming into stores.</p> <p>Because the ExpressLRS code is \"baked-in\" to the flight controller firmware instead of using a second microcontroller, these can not be updated the same way external UART-based receivers are updated. </p> <p>NOTE</p> <p>You cannot use the ExpressLRS Configurator to update these FCs. You must update the flight controller software, e.g. Betaflight.</p> <p>SPI receiver compatibility with ExpressLRS v3.x requires your flight controller be flashed with Betaflight 4.4.0 or newer. If you are running Betaflight 4.3.0 or Betaflight 4.3.1, your receiver will only work with ExpressLRS v2.x. Please update to Betaflight 4.4 or newer for ExpressLRS v3.x compatibility. </p> <p>In preparation for updating, you should save a copy of your <code>diff all</code> dump. Simply go into the CLI Tab of the Betaflight Configurator and execute the command <code>diff all</code> then press enter. A bunch of text will show up on the screen. At the bottom of the page, click the Save to File button and navigate to the folder you want the file to be saved. Finally click <code>Save</code> after taking note of the folder and filename of the text file. You will need to navigate to this file later on, moreover if you already have customized your settings on the flight controller, like rates, PID tune, OSD.</p> <p>Using the latest Betaflight Configurator, navigate into <code>Firmware Flasher</code> and select the latest Betaflight release. Depending on your AIO board, the target will differ. Betaflight targets for FCs with SPI receivers will usually end in <code>SX1280</code>. Examples:</p> <ul> <li>Happymodel AIO: <code>CRAZYBEEF4SX1280</code></li> <li>BetaFPV AIO: <code>BETAFPVF4SX1280</code></li> </ul> <p>If your Flight Controller model is not in the list above, consult your Flight Controller manufacturer for details.</p> <p>NOTE</p> <p>The Happymodel Mobula6 900MHz AIO with the CrazyF4 ELRS FC (Target: CRAZYBEEF4DX) doesn't use an SPI ExpressLRS receiver. Check the page for ES915RX instead.</p> <p>Likewise, the v2.0 BetaFPV F4 1S 5A comes with an on-board UART-based ExpressLRS Receiver and doesn't use the SPI ExpressLRS implementation. Use the <code>BETAFPV AIO 2400 RX</code> Device target.</p> <p>If you're using Windows and flashing fails to start, you may need to correct the drivers using a tool like ImpulseRC Driver Fixer. These tools and other drivers are also linked in the Welcome tab of Betaflight Configurator.</p> <p></p> <p>Once flashed, you will need to connect and restore settings from the <code>diff all</code> you have saved. Go into the CLI Tab of the Betaflight Configurator and press the Load From File button. Select the <code>diff all</code> file you made previously and press execute. If there were any errors, you will need to manually type in the <code>save</code> command and press enter. Betaflight Configurator should disconnect. After reconnecting, review your Betaflight settings (for example the Receiver Type and Protocol in Receiver tab; it should be set to <code>SPI Receiver</code>, with Provider as <code>ExpressLRS</code>).</p> <p>As of Betaflight 4.4 (with Betaflight Configurator version 10.9.0 or newer), your ExpressLRS Binding Phrase can be set directly on the receiver tab in Betaflight Configurator.</p> <p></p> <p>Proper configuration of the Betaflight Receiver tab for ExpressLRS SPI Receivers. Receiver Mode (1) should be set to SPI RX. SPI Bus Receiver Provider (2) should be set to EXPRESSLRS. Enter your binding phrase in the box (3) and it will be converted to UID bytes (4) and saved to your Betaflight config. You can also take this opportunity to enable Telemetry (5) if desired, and make sure RSSI_ADC (6) and RSSI Channel (7) are disabled as shown. </p>"},{"location":"hardware/spi-receivers/#alternate-binding-procedures","title":"Alternate Binding Procedures","text":"<p>There are two ways to bind the receiver, as shown below</p>"},{"location":"hardware/spi-receivers/#button-binding","title":"Button Binding","text":"<p>Put the receiver into bind mode using any of these procedures:</p> <ul> <li>\"Bind\" button in the Betaflight Configurator, Receiver Page (if can't be found, update the Betaflight firmware).</li> <li>Using the CLI, type in <code>bind_rx</code> and press enter once.</li> <li>Press the bind button on the flight controller.</li> <li>Using the CLI, type in <code>set expresslrs_uid = 0</code>, press enter once, then save and reboot</li> </ul> <p>Once the SPI receiver is in Bind Mode (indicated by two immediate blinks followed by a short pause), execute the ExpressLRS Lua script in your handset and press the <code>Bind</code> option. The RX and TX should be now bound (indicated by a SOLID LED on the Flight Controller).</p> <p>Please mind the order, RX first, TX second.</p> <p>Video Tutorial (thanks to @JyeSmith):</p>"},{"location":"hardware/spi-receivers/#binding-phrase-via-cli","title":"Binding Phrase via CLI","text":"<p>The binding phrase is hashed into 6 bytes represented as numbers. These 6 bytes are referred to as the UID bytes.  UID bytes are entered into the Betaflight CLI for binding. Please look below for instructions. </p> <p>NOTE</p> <p>When building via ExpressLRS Configurator or via VS Code, note down the UID bytes from the build log. You can also use the generator below to retrieve your UID bytes from your binding phrase.</p> <p></p>"},{"location":"hardware/spi-receivers/#uid-byte-generator","title":"UID Byte Generator","text":"<p>Binding Phrase:</p> <p>Not updating?</p> <p>If the fields below don't update as you type your binding phrase above, refresh or reload this page in your browser.</p> <p>UID Bytes </p>"},{"location":"hardware/spi-receivers/#model-id","title":"Model ID","text":"<p>In order to set or retrieve current Model ID through Betaflight you need to use CLI: - Set new Model ID: <code>set expresslrs_model_id = N</code> - Get current Model ID: <code>get expresslrs_model_id</code></p>"},{"location":"hardware/spi-receivers/#setting-binding-phrase","title":"Setting Binding Phrase","text":"<p>Go to Betaflight CLI and enter the following commands. </p> <p>As shown above, Betaflight Configurator 10.9.0 also supports entering the Binding Phrase directly in the Receiver Tab. It will generate the UID bytes for you. Clicking <code>Save and Reboot</code> will save the Binding Phrase into the flight controller configuration.</p> <p>Supported RF Modes</p> <p>SPI receivers DO NOT support D(D250, D500), F(F500, F1000) and Full Res(100Hz Full Res, 333Hz Full Res) Modes (Packet Rates) and thus will not bind or sync with a TX module in any of these modes.</p>"},{"location":"hardware/spi-receivers/#acknowledgments","title":"Acknowledgments","text":"<p>The SPI ExpressLRS implementation would not have been possible without the work and huge efforts from the following developers:</p> <ul> <li>Pawe\u0142 Stefanski (@phobos-)</li> <li>Dominic Clifton (@hydra)</li> <li>Hans Christian Olaussen (@klutvott123)</li> <li>Steve Evans (@SteveCEvans)</li> <li>ctzsnooze (@ctzsnooze)</li> </ul>"},{"location":"hardware/x9d-troubleshooting/","title":"Troubleshooting the X9D(+)","text":"<p>For quite some time we had the impression that the X9D(+) radio works well with the high baud rates, needed for ExpressLRS. However, some users report it's not working as it should with ExpressLRS. For example:</p> <ul> <li>ExpressLRS Lua script just shows <code>Loading...</code></li> <li>ExpressLRS Lua script shows unstable behavior, especially on the higher packet rates, showing values different from <code>0/[SELECTED PACKET RATE]</code></li> <li>Constant Telemetry Lost/Telemetry Recovered Notification.</li> </ul>"},{"location":"hardware/x9d-troubleshooting/#potential-problem","title":"Potential Problem","text":"<p>It is possible that the X9D(+) radio also suffers from a slow inverter circuit that messes up the 400000 baud UART signals.</p> <p>As you may know, for the Taranis QX7(S) you can do the Crossfire inverter mod or select a lower baud rate in the Hardware menu (Page 6/7) of OpenTX to fix the issue.</p>"},{"location":"hardware/x9d-troubleshooting/#troubleshoot","title":"Troubleshoot","text":"<p>Well, the final verdict is not out yet, but the following may help to resolve the issue:</p> <ul> <li>Do a hardware mod as well on your X9D(+) as you can read all about here in PR# 59 for EdgeTX. This requires changing the 10k resistor <code>R82</code> to a 1k resistor.</li> <li>Download a OneBit_Status firmware using this OpenTX version, based on OpenTX(2.3.12 or 2.3.14) and enable <code>ONEBIT</code> Sample Mode (System Menu -&gt; Hardware). One Bit Sample Mode is also available on EdgeTX.</li> </ul> <p></p> Sample Mode: Normal <p></p> Sample Mode: OneBit <ul> <li>Select <code>115200 baud</code> using the above OpenTX version. (ExpressLRS will lock you out of 500Hz packet rate with 2.4GHz, but any packet rate below that should be stable now.)</li> </ul> <p>The nice thing about the OpenTX build above is that it also adds two additional <code>Sync</code> lines to show the current OpenTX/UART behavior. This will show in your Model Setup (Page 2/11) where you select the external module type (where you selected CRSF to enable ELRS):</p> <p></p> <ul> <li>The first <code>Sync</code> line shows something like <code>L00002R04000u</code>. <code>L</code> and <code>R</code> indicate the microseconds of Lag and Rate.<ul> <li>The <code>L</code> is how much OpenTX is trying to compensate to nail the rate you selected. (The closer to 0 the better)</li> <li>The <code>R</code> is just the Packet Rate you selected using the ExpressLRS Lua script.</li> </ul> </li> <li>The second <code>Sync</code> line shows something like <code>G11 C00 F00</code>. This stand for <code>G</code> (good packets), <code>C</code> (CRC error), <code>F</code> (Framing error). The goal is to have zero errors here. (Don't forget to power your receiver so a link is established!)</li> </ul> <p>If this has helped you in any way (good or bad) with your X9D(+) radio, let us know on the ExpressLRS discord!</p>"},{"location":"hardware/backpack/backpack-tx-setup/","title":"Tx Backpack Setup","text":""},{"location":"hardware/backpack/backpack-tx-setup/#transmitter-backpack-firmware-guide","title":"Transmitter Backpack Firmware Guide","text":"Backpack Configurator <p>Most of the ESP-based ExpressLRS modules come with the TX Backpack. A \"TX Backpack\" refers to an additional WiFi-capable microcontroller inside the TX module, which can communicate wirelessly with \"Backpack receivers\". This allows the TX to communicate with other devices such as your Goggles (to change VRX channel), race timers, antenna trackers, ground control stations, etc.</p>"},{"location":"hardware/backpack/backpack-tx-setup/#setup","title":"Setup","text":"<ul> <li>Open the ExpressLRS Configurator and select <code>Backpack</code> in the left hand menu bar.</li> <li>Select the latest Backpack Release version from the <code>Releases</code> dropdown.</li> <li>Select your device target. If there is a target that matches your hardware, use it. If you can't find a target that matches your TX module, use the <code>Generic backpack for any TX module</code> targets.</li> <li>Enter your Binding Phrase and your Home WiFi SSID and Password (Optional).</li> <li>Choose your <code>Flashing Method</code> based on your hardware (choose from the options below):</li> </ul>"},{"location":"hardware/backpack/backpack-tx-setup/#flashing-via-usbuart-for-older-tx-modules-with-dip-switches-jumper-pins","title":"Flashing via USB/UART (for older TX modules with DIP switches / jumper pins)","text":"<p>Applies to: Older TX modules that have DIP switches or jumper pins, e.g. <code>Happymodel TX modules</code>. Recent transmitter modules do not required any preparation prior to flashing the TX-Backpack firmware. If your TX module does not have any DIP switches or jumper pins, you can skip this step, and proceed to flash via Passthrough or WiFi.</p> <p>For older TX modules like the Happymodel TX Modules, you will need to move the jumpers or DIP switches into the correct position before flashing the firmware. Please see the USB/UART Flashing section of your particular TX Module for the jumper or DIP switch position.</p> <ul> <li>ES24TX Jumpers</li> <li>ES900TX Jumpers</li> </ul> <p>You need to activate the <code>Backpack Flashing</code> jumper or DIP switch (middle pair). Opening up the module enclosure will be needed as well to access the Buttons on the modules. Make sure your computer recognizes your TX module as a <code>USB to UART Bridge</code>. Windows drivers are linked in the Flashing Guides.</p> <p>For the NamimnoRC Flash and Voyager TX Modules without an OLED screen (Gen 1 STM-based), make sure you're able to access the Backpack Web Update page (see Flashing Guide) via WiFi.</p> <p>For the Happymodel TX modules, connect to your computer via USB. As stated above, the module should be detected as a <code>USB to UART Bridge</code> and the jumper/DIP switches are set in the correct position (middle pins/switches should be On).</p> <p>Button Dance: A few buttons are needed to be pressed on the module while the firmware is compiling. Press and Hold the <code>GPI0</code> button then the <code>RST</code> button (GPIO is still pressed) then release the <code>RST</code> button and then the <code>GPIO</code> button.</p> <p></p> Module Buttons <ul> <li>In the Configurator, select the <code>UART</code> option under <code>Flashing Method</code>.</li> <li>Ensure you have completed the steps in the Setup section above, then click <code>Flash</code> on the ExpressLRS Configurator.</li> <li>Wait for the process to complete and you should see the green <code>Success</code> notification.</li> <li>Unplug the USB and change the position of the jumpers/DIP switches for the <code>Normal Operation</code> (refer back to the module's Flashing Guide page for the correct position).</li> <li>Put back the cover of the module and attach it to your module bay.</li> </ul>"},{"location":"hardware/backpack/backpack-tx-setup/#flashing-via-passthrough","title":"Flashing via Passthrough","text":"<p>Applies to: Newer TX modules that do NOT have DIP switches / jumper pins, e.g. <code>Radiomaster Ranger Series</code></p> <ul> <li>Plug a USB Data Cable into the TX module.</li> <li>In the Configurator, select the <code>Passthrough</code> option under <code>Flashing Method</code>.</li> <li>Ensure you have completed the steps in the Setup section above, then click <code>Flash</code> on the ExpressLRS Configurator.</li> <li>Wait for the process to complete and you should see the green <code>Success</code> notification.</li> </ul>"},{"location":"hardware/backpack/backpack-tx-setup/#flashing-via-wifi","title":"Flashing via WiFi","text":"<p>Applies to: All TX modules that have a Backpack (this method assumes that the Backpack firmware has been flashed in the past and is functional).</p> <ul> <li>Using the ExpressLRS Lua script, navigate to <code>WiFi Connectivity</code> and select <code>Enable Backpack WiFi</code>.</li> <li>The LUA script will briefly show <code>Sending</code>, then return to the WiFi menu.</li> <li>The Backpack WiFi Access Point (or Home WiFi, if you enabled it) will activate.</li> </ul> <p>Home WiFi</p> <p>With your Home Network SSID and Password set, when you activate the WiFi mode via the Lua script (<code>WiFi Connectivity</code> -&gt; <code>Enabled Backpack WiFi</code>), the Backpack will try to connect to your Home WiFi Network. Once connected, you can access the Web Update page via http://elrs_txbp.local/ and upload your firmware there.</p> <ul> <li>If you are NOT using Home WiFi, connect to the <code>ExpressLRS TX Backpack</code> WiFi access point (password is <code>expresslrs</code>) and navigate your browser to http://10.0.0.1/.</li> <li>If you ARE using Home WiFi, navigate your browser to http://elrs_txbp.local/.</li> <li>In the Configurator, select the <code>WIFI</code> option under <code>Flashing Method</code>.</li> <li>Ensure you have completed the steps in the Setup section above, then click <code>Flash</code> on the ExpressLRS Configurator.</li> <li> <p>Wait for the process to complete and you should see the green <code>Success</code> notification.</p> </li> <li> <p>Alternatively, you can build the firmware file, then drag it to the WebUI. To do this, ensure you have completed the steps in the Setup section above, then click <code>Build</code> on the ExpressLRS Configurator.</p> </li> <li>Grab the built <code>firmware.bin.gz</code> (do NOT extract it) and drag-and-drop it into the File Upload section of the webpage. If you are using an ESP32 based Backpack, the filename may be <code>firmware.bin</code>. Drag-and-drop it into the File Upload section of the webpage.</li> <li>Click <code>Update</code>. Wait a bit (~10s) for the \"Update Success! Rebooting...\". The AP should automatically disappear and disconnect.</li> </ul> <p></p> WiFi ESP"},{"location":"hardware/backpack/backpack-tx-setup/#flashing-via-wifi-older-namimnorc-gen1-tx-modules","title":"Flashing via WiFi (older NamimnoRC Gen1 TX Modules)","text":"<p>For the First Generation NamimnoRC TX modules (No OLED), you will have to first <code>Build</code> the Backpack firmware. Once built, grab the <code>backpack.bin</code> file from the folder that the ExpressLRS Configurator opened. Open the URL http://elrs_tx.local on your browser and scroll down to where the WiFi Backpack Firmware Update section is (shown in the image below). If the page isn't loading, make sure you have followed the Wifi Flashing guide for these modules (see Flashing Guide).</p> <p></p> Wifi Backpack <p>Wait for a bit (~10s) after the message \"Update Success! Rebooting...\" appears before you power-cycle the module. Your TX Backpack should now be ready.</p>"},{"location":"hardware/backpack/backpack-tx-setup/#flashing-via-etx-passthrough","title":"Flashing via ETX Passthrough","text":"<p>Applies to: Internal ExpressLRS TX modules, e.g. <code>RadioMaster Zorro TX Backpack</code>, <code>RadioMaster TX16S Backpack</code>, etc.</p> <p>FYI</p> <p>This method is the result of the collaborative effort between EdgeTX, RadioMaster, and ExpressLRS.</p> <ul> <li>With your handset turned on, connect a USB data cable to the USB data port of the Radio.</li> <li>Select <code>USB Serial(Debug)</code> or <code>USB Serial(VCP)</code> in the options window that pops up.</li> </ul> <p></p> <p></p> <ul> <li>In the Configurator, select the <code>EdgeTXPassthrough</code> option under <code>Flashing Method</code>.</li> <li>Ensure you have completed the steps in the Setup section above, then click <code>Flash</code> on the ExpressLRS Configurator.</li> <li>Wait for the process to complete and you should see the green <code>Success</code> notification.</li> <li>Unplug the USB from the handset and you're set!</li> </ul>"},{"location":"hardware/backpack/backpack-tx-setup/#how-to-check-you-have-updated-the-tx-backpack-firmware","title":"How to check you have updated the TX Backpack Firmware?","text":"<p>Make sure you set the jumpers or DIP switches on your modules (if required, e.g. the Happymodel TX Modules) to the <code>Normal Operation</code> position (refer to the top of this page). This allows the main ESP32 chip to talk to the Backpack chip. The Backpack will NOT work properly if the DIP switches or jumper pins are not in the <code>Normal Operation</code> position.</p> <p>Attention</p> <p>Change the position of the DIP switches or jumper pins to <code>Normal Operation</code> if required for your module (e.g. Happymodel TX modules).</p> <p>Navigate to the <code>WiFi Connectivity</code> folder of the ExpressLRS Lua script and select <code>Enable Backpack WiFi</code>. Scan for Access Points, and ExpressLRS TX Backpack should appear. Connect to it and point your browser to http://10.0.0.1/.</p> <p>If you have set your Home Network SSID and Password, point your browser to http://elrs_txbp.local/.</p> <p>The main banner will show you what kind of device it is and the firmware version that's flashed into it.</p>"},{"location":"hardware/backpack/backpack-tx-setup/#setup-your-vrx-backpack","title":"Setup your VRX Backpack","text":"<p>Proceed to the VRX Backpack Setup section to setup your VRX Backpack, if desired.</p>"},{"location":"hardware/backpack/backpack-tx-setup/#operation","title":"Operation","text":"<p>The Backpack Usage section provides further details on ExpressLRS Backpack Operation, including Binding, LED Status codes, and more.</p>"},{"location":"hardware/backpack/backpack-vrx-setup/","title":"VRx Backpack Setup","text":""},{"location":"hardware/backpack/backpack-vrx-setup/#flashing-methods-for-backpack-device","title":"Flashing Methods for Backpack Device:","text":"<p>Before wiring up your VRX Backpack into your VRX Module, you MUST first flash the VRX Backpack firmware, either via WiFi or UART/FTDI.</p> <p>Good VRX Backpack candidates are the EP1 or EP2 receivers from Happymodel as these have Boot pads instead of Boot buttons. The Boot pad will be repurposed for the SPI Clock signal from the VRX module.</p> <p>The VRX firmware you will flash into your Backpack Device will depend on what VRX module you want to connect it to. If you do not flash the correct firmware, it will not work properly.</p>"},{"location":"hardware/backpack/backpack-vrx-setup/#flashing-via-wifi-esp-based-expresslrs-receivers","title":"Flashing via WiFi (ESP-based ExpressLRS Receivers)","text":"<p>Power up your selected VRX Backpack device (connect 5v and GND pads to any 5v power source). Let it go into WiFi Update mode (fast blinking LED) and load up the WiFi Update page. In the Address bar of your browser, add <code>?force=true</code> to ensure it will accept the VRX Backpack firmware. The resulting URL should read <code>http://10.0.0.1/?force=true</code> (if you connected via Access Point) or <code>http://elrs_rx.local/?force=true</code> (if your device has connected to your local WiFi network).</p> <p>Note</p> <p>The <code>?force=true</code> is not needed for ESP-based receivers with factory firmware. It is only required if you have previously flashed the receiver and want to repurpose it as a VRX Backpack.</p> <p>Go to the Assets section of the Backpack Release on GitHub, <code>Download</code> the binary suited for your VRX module. Upload this binary into the VRX device using the Web Update page. Wait (~30s) until the LED on the VRX device has turned on again.</p> <p>Alternatively, you can use the ExpressLRS Configurator to create your binaries for you. Build your binary, with the set <code>binding phrase</code> (Optional) as well as Home Network SSID and Password (Optional; available starting 0.2.0). Upload the resulting binary on the WiFi Update page as outlined above.</p>"},{"location":"hardware/backpack/backpack-vrx-setup/#flashing-via-uartftdi","title":"Flashing via UART/FTDI","text":"<p>Note</p> <p>This method is best used for the DIY ESP01F VRX Backpacks, as these devices do not have any firmware from the factory. </p> <p>Connect your FTDI RX pin into the TX pad of your VRX Device, and the FTDI TX pin into the RX pad of the VRX Device; then the 5V and GND pads. The Boot pad needs to be bridged with the Ground pad. Connect your FTDI, with the connected VRX device, into a free USB port (VRX Device's LED should light up SOLID). Using the ExpressLRS Configurator, select your VRX module, select the <code>via UART</code> method and set your <code>binding phrase</code> (Optional) and the Home Network SSID and Password (Optional; Available starting 0.2.0). Click Build and Flash and the compiling and flashing should commence. If done right, the Success bar should appear and your VRX Backpack should now be ready for wiring into your selected VRX Module.</p>"},{"location":"hardware/backpack/backpack-vrx-setup/#flashing-tbs-fusion-for-the-first-time","title":"Flashing TBS Fusion for the First Time","text":"<p>You will need an FTDI dongle (USB to UART Bridge) to flash the VRX Backpack firmware into your TBS Fusion module for the first time. You will also have to follow the TBS Fusion WiFi Module Unbricking Guide but instead of uploading the WiFi Firmware file from TBS, you will upload the VRX Backpack Firmware that the ExpressLRS Configurator compiled from Build.</p> <p>Any subsequent firmware updates can be done via WiFi.</p>"},{"location":"hardware/backpack/backpack-vrx-setup/#starting-with-020-you-can-also-update-via-your-home-wifi","title":"Starting with 0.2.0, you can also Update via your Home WiFi","text":"<p>With your Home Network SSID and Password set, when you activate the WiFi mode via the Lua script (<code>WiFi Connectivity</code> -&gt; <code>Enabled VRX WiFi</code>), the Backpack will try to connect to your Home WiFi Network. Once connected, you can access the Web Update page via http://elrs_vrx.local/ and upload your firmware there.</p> <p>The ExpressLRS Configurator will also detect the device after it has been connected. It will be listed in the \"Device List\" section, and you can press <code>SELECT</code>, so that the correct target is automatically selected for Build.</p> <p>Alternatively, you can also Build and Flash via the Configurator through WiFi without having to access the Web Update page (just like any ESP-based ExpressLRS receiver).</p>"},{"location":"hardware/backpack/backpack-vrx-setup/#vrx-module-setup-before-wiring-it-all-up","title":"VRX Module Setup Before Wiring It All Up","text":"<p>IMPORTANT: You will need to set your VRX module to the highest band and channel it can go, usually Race 8 (5917MHz) before wiring up any VRX Backpack. This is to ensure the VRX Backpack knows \"where it is\" in the selectable channels.</p>"},{"location":"hardware/backpack/backpack-vrx-setup/#connecting-the-vrx-backpack-to-your-vrx-module","title":"Connecting the VRX Backpack to Your VRX Module","text":"<p>Currently supported VRX Modules include:</p> <ul> <li>ImmersionRC Rapidfire  </li> <li>SkyZone SteadyView</li> <li>Generic RX5808 Module</li> <li>FENIX Module</li> <li>Shark Byte RX5.1 HDZero Module</li> </ul> <p>VRX Backpacks communicate with these modules via SPI, and require 3 signal lines: <code>CLK</code>, <code>DATA</code>, <code>CS</code>. Additionally, depending on your VRX Backpack, they will either need <code>5v</code> (ExpressLRS ESP-based Receiver) or <code>3.3v</code> (ESP01F module) and of course the <code>GND</code> line.</p> <p></p> <p></p> <p>For the ESP01F Module, you will have to source out a voltage regulator such as an <code>AMS1117</code> (1A Low Drop-out Voltage Regulator) which will lower the 5V voltage from the VRX module to the needed <code>3.3v</code>.</p> <p></p> <p></p>"},{"location":"hardware/backpack/backpack-vrx-setup/#rapidfire-backpack-connection","title":"Rapidfire Backpack Connection","text":"<p>Follow the wiring guide below for the Rapidfire module. Make sure that the VRX module is set to R8 (5917) for this to work properly.</p> <p></p> <p></p> <p>The VRX Backpack fits snugly in the module bay. No further modding is needed.</p> <p></p> <p></p>"},{"location":"hardware/backpack/backpack-vrx-setup/#steadyview-backpack-connection","title":"SteadyView Backpack Connection","text":"<p>You will need to desolder 3 pins from the module, or cut them off. </p> <p>Follow the wiring shown in the image below:</p> <p></p> <ul> <li>The blue wire is the CLK pin (Pin 1; connected to Boot pad, if using an ExpressLRS Receiver).</li> <li>The green wire is the DATA pin (Pin 2; connected to the RX pad, if using an ExpressLRS Receiver).</li> <li>The yellow wire is the CS pin (Pin 3; connected to the TX pad, if using an ExpressLRS Receiver).</li> </ul> <p>The power supply wires are connected as follows:</p> <ul> <li>The black wire is GND and connected to Pin 7 of the VRX module.</li> <li>The red wire is the 5V supply and is connected to the last Pin of the module (Pin 9).</li> </ul> <p></p> <p></p>"},{"location":"hardware/backpack/backpack-vrx-setup/#shark-byte-rx51-hdzero-module-connection","title":"Shark Byte RX5.1 HDZero Module Connection","text":"<p>The VRX has an easily accessible UART on the main board, which is accessed by removing the 4 screws which secure the back plate. Use the goggle mount to pull the back plate from the housing.</p> <p>Solder your VRX backpack as shown below:</p> <p></p> <p>It is unlikely that you can close the back plate with the backpack module between the plate and the main board. There are two solutions:</p> <ul> <li>Route the wires out of the cooling vents and mount them externally</li> <li>Mount the backpack in the front patch, routing the wires through the goggle mount as shown below:</li> </ul> <p></p>"},{"location":"hardware/backpack/backpack-vrx-setup/#generic-rx5808-connection","title":"Generic RX5808 Connection","text":"<p>Make sure that your RX5808 is running in SPI mode. Then wire it up as shown below:</p> <p></p>"},{"location":"hardware/backpack/backpack-vrx-setup/#how-to-check-you-have-updated-the-vrx-backpack-firmware","title":"How to check you have updated the VRX Backpack Firmware?","text":"<p>Navigate to the <code>WiFi Connectivity</code> folder of the ExpressLRS v3 Lua script and select <code>Enable VRX WiFi</code>. The LED will begin blinking rapidly. Scan for Access Points and ExpressLRS VRX Backpack should appear. Connect to it and point your browser to http://10.0.0.1/.</p> <p>If you have set your Home Network SSID and Password, point your browser to http://elrs_vrx.local/.</p> <p>The main banner will show you what kind of device it is and the firmware version that's flashed into it.</p>"},{"location":"hardware/backpack/backpack-vrx-setup/#setup-your-tx-backpack","title":"Setup your TX Backpack","text":"<p>Proceed to the TX Backpack Setup section to setup your TX Backpack.</p>"},{"location":"hardware/backpack/backpack-vrx-setup/#operation","title":"Operation","text":"<p>The Backpack Usage section provides further details on ExpressLRS Backpack Operation, including Binding, LED Status codes, and more.</p>"},{"location":"hardware/backpack/esp-backpack/","title":"Backpack Info","text":""},{"location":"hardware/backpack/esp-backpack/#what-is-a-backpack","title":"What is a Backpack?","text":"<p>A Backpack is an add-on device that facilitates wireless communication between an ExpressLRS module and another device (e.g. a Video Receiver on your goggles) using the ESPnow protocol.</p> <p></p> Communication between an ExpressLRS module and a Video Receiver"},{"location":"hardware/backpack/esp-backpack/#usage-scenario","title":"Usage Scenario","text":"<p>You are setting up to fly with others, and your favorite video channel is already in use. You're asked to use R2 as that's the vacant one. Using the ExpressLRS Lua script, you change the setting into R2 (this while your aircraft is still unpowered). You power up your goggles equipped with a VRX Backpack. Then plug in your aircraft. Upon the establishment of the connection, the VTX and the VRX are automatically set to R2. You're now ready to fly. No fiddling with channels on the OSD or your goggles.</p>"},{"location":"hardware/backpack/esp-backpack/#okay-im-sold-what-do-i-need-to-get-this-working","title":"Okay, I'm sold. What do I need to get this working?","text":"<p>You already have the majority of the hardware needed. Most of the ESP-based ExpressLRS modules come with the TX Backpack. For the VRX Backpack, you can reuse any ESP-based ExpressLRS receiver (recommended are the EP1/EP2 receivers as they have boot pads, instead of boot buttons), or for a complete DIY route, you'll need an ESP-01F module.</p> <p>An off-the-shelf VRX Backpack has also appeared from Happymodel: the EP82</p> <p>See the tables below for a partial list of supported devices:</p> <p>Backpack Requirement</p> <p>All new ExpressLRS TX releases after October 10<sup>th</sup>, 2023 require a TX backpack to be integrated into the hardware</p>"},{"location":"hardware/backpack/esp-backpack/#supported-tx-backpack-targets","title":"Supported TX-Backpack Targets","text":"TX Module Support Happymodel ES24TX Pro \u2714\ufe0f Fully supported Happymodel ES24TX \u2714\ufe0f Fully supported Happymodel Slim Pro \u2714\ufe0f Fully supported Happymodel Slim Ironman \u2714\ufe0f Fully supported Happymodel Slim T-Lite \u2714\ufe0f Fully supported Happymodel ES900TX \u2714\ufe0f Fully supported Happymodel ES915TX (STM32 version) \u274c Not compatible FrSky R9M \u2714\ufe0f Supported with the addition of an ESP8285 FrSky R9 (all others) \u274c Not compatible NamimnoRC Flash (STM32 version) \u2714\ufe0f Fully supported NamimnoRC Flash OLED(ESP version) \u2714\ufe0f Fully supported NamimnoRC Voyager (STM32 version) \u2714\ufe0f Fully supported NamimnoRC Voyager OLED(ESP version) \u2714\ufe0f Fully supported Axis Flying THOR \u2714\ufe0f Fully supported HGLRC Hermes \u274c Not compatible BETAFPV 2.4 Micro TX 1W \u2714\ufe0f Fully supported BETAFPV 2.4 Micro TX 500mW \u274c Not compatible BETAFPV 900 Micro TX \u274c Not compatible RadioMaster Zorro \u2714\ufe0f Fully supported RadioMaster Pocket \u2714\ufe0f Fully supported Jumper Aion T-Pro Internal \u274c Not compatible Jumper Aion Nano \u274c Not compatible Vantac Lite \u274c Not compatible ImmersionRC Ghost TX \u274c Not compatible QuadKopters 2.4 TX \u274c Not compatible SIYI FM30 \u274c Not compatible DIY TX \u2714\ufe0f Fully supported with the addition of an ESP8285"},{"location":"hardware/backpack/esp-backpack/#supported-vrx-backpack-targets","title":"Supported VRX-Backpack Targets","text":"Backpack Target Compatibility Tested? Happymodel EP1/EP2 \u2714\ufe0f Compatible Yes Happymodel ES900RX \u2714\ufe0f Compatible Yes Happymodel EP82 \u2714\ufe0f Compatible Yes BETAFPV Nano 2.4 \u2714\ufe0f Compatible No Flywoo EL24E \u2714\ufe0f Compatible No Flywoo EL24P \u2714\ufe0f Compatible No Ghost ATTO \u274c Not compatible N/A HappyModel PP \u274c Not compatible N/A HGLRC 2400RX \u2714\ufe0f Compatible No JHEMCU / HiYOUNGER EP24S \u2714\ufe0f Compatible No JHEMCU / HiYOUNGER SP24S \u2714\ufe0f Compatible No JHEMCU / HiYOUNGER RX24T \u2753 Unsure No Matek R24-S \u2714\ufe0f Compatible No Matek R24-D \u2714\ufe0f Compatible No Jumper Aion RX \u2714\ufe0f Compatible No Vantac 2.4GHz RX \u2714\ufe0f Compatible No Namimno Flash (ESP) \u2714\ufe0f Compatible No QuadKopters Nano \u2714\ufe0f Compatible No SIYI FR Mini \u274c Not compatible N/A"},{"location":"hardware/backpack/esp-backpack/#video-receivers-currently-supported-include","title":"Video Receivers currently supported include:","text":"VRX Module Support ImmersionRC Rapidfire \u2714\ufe0f Fully supported (Versions 1.2.5 of the rapidFIRE firmware and later) SkyZone SteadyView \u2714\ufe0f Fully supported TBS Fusion \u2714\ufe0f Fully supported (FTDI needed) Generic RX5808 Module (some) \u2714\ufe0f Fully supported FENIX Module \u2714\ufe0f Fully supported HDZero VRX4 \u2714\ufe0f Fully supported HDZero Goggles (built-in, no mods required) \u2714\ufe0f Fully supported"},{"location":"hardware/backpack/esp-backpack/#im-ready-to-proceed-what-do-i-do-next","title":"I'm Ready to Proceed. What do I do next?","text":"<p>If your TX module is already equipped with a TX backpack (see list above), your next step is to update the firmware of the backpack. Proceed to the TX Backpack Setup page for more details.</p> <p>If you're using a DIY TX module and want to add a backpack to it, proceed to the Backpack Wiki.</p> <p>For the VRX Backpack, you will need to first update the firmware on the ESP device. The firmware will highly depend on which VRX module you will use it on. Proceed to VRX Backpack Setup page for more info.</p>"},{"location":"hardware/backpack/esp-backpack/#backpack-usage","title":"Backpack Usage","text":""},{"location":"hardware/backpack/esp-backpack/#led-status-codes","title":"LED Status codes","text":"<ul> <li>Solid - The backpack is powered up and ready to receive packets.</li> <li>Fast Continuous Blinking - WiFi Mode is active, and either the Access Point is ready for connection or the Backpack has connected to your Local WiFi Network (0.2.0; Home Network SSID and Password have been set).</li> <li>Double Blink, Pause - The Backpack is in Binding Mode. Using the ExpressLRS Lua Script, press <code>Bind</code>, and the TX Backpack should bind with the VRX Backpack.</li> </ul>"},{"location":"hardware/backpack/esp-backpack/#button-operation-if-present","title":"Button Operation (If present)","text":"<ul> <li>Pressing and Holding down the button during Power Up puts the device into Bootloader mode. From here, you can flash the firmware via UART using an FTDI dongle (USB to UART Bridge). The LED on the Backpack device will be SOLID when in this mode.</li> <li>A Single Press during Normal or Binding mode will put the device into WiFi Mode.</li> <li>A Single Press during WiFi Mode will put back the device into Normal Mode.</li> </ul>"},{"location":"hardware/backpack/esp-backpack/#binding","title":"Binding","text":"<p>Just like any ExpressLRS device, you can set a Binding Phrase for both the TX Backpack and VRX Backpack so they automatically bind with each other during power up. This Binding Phrase can be the same as what you used with your other ExpressLRS devices or can be entirely different. The concept is the same.</p> <p>Should you choose to bind manually, the procedure is as follows:</p> <ol> <li>Make sure you didn't flash the VRX firmware with a Binding Phrase.</li> <li>Power Cycle the VRX Backpack 3 times every ~30s. This interval gives ample time for your goggles and VRX module to power up and down more gracefully. If your VRX Backpack has a button, it can also be used to power-cycle the device by cycling between WiFi Mode and Normal mode 3x (as WiFi mode reboots the device).</li> <li>The LED on the Backpack should now blink twice followed by a brief pause, then repeats, indicating it is in Binding Mode.</li> <li>Using the ExpressLRS Lua script, navigate into the <code>Bind</code> option. Press it once, and the LED on both Backpacks should blink once and stay SOLID thereafter.</li> <li>Your Backpacks are now bound and connected, and you can now use VTX Administrator on the ExpressLRS Lua script to sync your VTX and VRX modules.</li> </ol>"},{"location":"hardware/backpack/esp-backpack/#timeouts","title":"Timeouts","text":"<p>When in Binding Mode (Double Blink &amp; Pause) and no Bind packets have been received within 120s, the VRX Backpack will switch into WiFi Mode. This provides the users a means to enter WiFi Mode when their VRX Backpack doesn't have a Button.</p>"},{"location":"hardware/backpack/hdzero-goggles/","title":"HDZero Goggle VRx Backpack","text":""},{"location":"hardware/backpack/hdzero-goggles/#flashing-the-hdzero-goggles-backpack","title":"Flashing the HDZero Goggles Backpack:","text":"<p>After building the VRX firmware, copy the following 4 files into a folder named <code>ELRS</code> on the root of the SD card: - firmware.bin - partitions.bin - bootloader.bin - boot_app0.bin</p> <p>Insert the SD card into the goggles and boot the goggles as normal.</p> <p>The first step is to ensure that you have the backpack enabled in the <code>Connections</code> page in the goggles.</p> <p></p> <p>Scroll down to the <code>Firmware</code> page and select the <code>Update ESP32</code> option.</p> <p></p> <p>The 4 firmware files will be flashed to the ESP32 backpack, and you should see a progress bar with the name of the current file being flashed at the start.</p> <p></p> <p>When the upload has completed, the page will display the version (or branch) of backpack firmware that is installed next to the update button.</p> <p></p>"},{"location":"hardware/backpack/hdzero-goggles/#starting-backpack-wifi","title":"Starting Backpack WiFi","text":"<p>To start the WiFi endpoint on the backpack, navigate to the <code>Connections</code> page of the goggles UI and select the <code>Start Backpack WiFi</code> option. If you have configured your backpack with your home WiFi credentials, it will attempt to connect to that and will fallback to creating an access point if it cannot connect, with the name <code>ExpressLRS VRX Backpack</code> and password <code>expresslrs</code>. The web UI will be available as <code>http://elrs_vrx</code> or <code>http://elrs_vrx.local</code>.</p>"},{"location":"hardware/backpack/hdzero-goggles/#binding-to-your-transmitter","title":"Binding to Your Transmitter","text":"<p>Attention</p> <p>Since the goggles have a bind button in the <code>Connections</code> page in the UI, the option to enter binding mode by power-cycling 3x to bind has been disabled.</p> <p>If you entered the same binding phrase as on your TX module and TX backpack when building the goggle backpack firmware, your device will connect automatically. You can validate this looking at the UID next to the <code>Start Backpack Binding</code> button on the <code>Connections</code> page in the goggle UI.</p> <p>If you have NOT entered your binding phrase into ExpressLRS Configurator when building your backpack firmware, you can use the <code>Start Backpack Binding</code> option in the <code>Connections</code> page in the UI. Once you have selected this option, the goggles will wait for a bind message from your transmitter. To perform the bind from the transmitter, load the ExpressLRS Lua Script on your radio handset and select the <code>[Bind]</code> option there. When the message is sent and the goggles have received the bind message, they should display <code>Success</code> in place of the button text. If they do not receive a bind message, they will timeout after 2 minutes and display a <code>Timeout</code> message.</p> <p>You can validate the binding by navigating to the <code>Connections</code> page and verifying that the correct UID is displayed next to the <code>Start Backpack Binding</code> button.</p>"},{"location":"hardware/special-targets/diy-rx/","title":"DIY Receiver","text":""},{"location":"hardware/special-targets/diy-rx/#custom-hardware","title":"Custom Hardware","text":"<p>Possibly one of the biggest benefits of using <code>ExpressLRS</code> is custom hardware!</p> <ul> <li>\ud83d\udcf6 Custom ESP 2.4 GHz RX</li> <li>\ud83d\udce1 Custom ESP 900 MHz RX</li> <li>\u26a1 Flashing ESP Based RX</li> </ul>"},{"location":"hardware/special-targets/diy-rx/#custom-esp-24-ghz-rx","title":"Custom ESP 2.4 GHz RX","text":"<p>20x20 RX</p> <ul> <li>20x20 footprint and uses 0805 size SMD components. SMD components have been positioned on the PCB in a soldering iron friendly way. \ud83d\udeb8 </li> </ul> <p></p> <p>ELRS Nano</p> <ul> <li>The <code>ELRS Nano</code> RX is 18mm x 11mm and uses the same pinout as the <code>Crossfire Nano</code> RX. This allows for direct mounting to compatible flight controllers. \u26a0\ufe0f This PCB uses 0402 SMD components and will require a hot air rework station and probably a microscope. \ud83d\udd2c </li> </ul>"},{"location":"hardware/special-targets/diy-rx/#custom-esp-900-mhz-rx","title":"Custom ESP 900 MHz RX","text":"<ul> <li>Uses the <code>ESP-01F</code> for WiFi and a <code>RFM95</code> for our business \ud83d\udd74\ufe0f</li> <li>Requires ordering PCBs from Gerber files, a regulator chip, a few passives, a <code>ESP-01F</code> and a <code>RFM95</code> (915/868MHz)</li> <li>Multiple RX PCB designs are available \u2705    <ul> <li><code>20x20 RX</code> <ul> <li>discrete SMD antenna for Wifi and RF directly soldered to PCB</li> <li>Target DIY_900_RX_ESP8285_SX127x_via_UART</li> </ul> </li> <li><code>20x20 RX 0805</code> - easier to build due to bigger SMD parts. PCB antenna for Wifi and <code>u.fl</code> connector for RF</li> <li><code>Mini RX</code> - the smallest form factor, lightest weight and lowest cost per PCB</li> </ul> </li> <li>If you need help soldering, please check out this video</li> </ul>"},{"location":"hardware/special-targets/diy-rx/#flashing-custom-rx","title":"Flashing Custom RX","text":""},{"location":"hardware/special-targets/diy-rx/#before-you-start","title":"Before you start","text":"<ul> <li>The steps for building are in each individual <code>README.md</code> for the RX of your choice</li> <li>If you are using an <code>ESP-12F</code> instead of <code>ESP-01F</code> it is recommended to follow this tutorial but use the appropriate RX target \ud83e\uddd1\u200d\ud83c\udfeb </li> </ul>"},{"location":"hardware/special-targets/diy-rx/#get-it-flashed","title":"Get it flashed","text":"<ul> <li>Connect the serial adapter to <code>GND</code>, <code>TX</code>, <code>RX</code>, and the appropriate <code>3V3</code> or <code>5V</code>.</li> <li>Additionally, connect <code>IO0</code> to <code>GND</code> to activate the bootloader and enable flashing</li> <li>Quite some serial adapters have <code>TX</code> and <code>RX</code> swapped, mislabeled, or both \ud83d\ude38. Please double-check!</li> <li>Finally, select the appropriate RX target, make sure your user defines are correct, and press <code>Upload</code> in PlatformIO</li> </ul>"},{"location":"hardware/special-targets/diy-tx/","title":"DIY Transmitter","text":""},{"location":"hardware/special-targets/diy-tx/#custom-hardware","title":"Custom Hardware","text":"<p>Possibly one of the biggest benefits of using <code>ExpressLRS</code> is custom hardware!</p> <ul> <li>\ud83d\udcf6 Custom ESP 2.4 GHz TX</li> <li>\ud83d\udce1 Custom Super Slim ESP 2.4 GHz TX</li> <li>\u26a1 Custom 900 MHz TX</li> </ul>"},{"location":"hardware/special-targets/diy-tx/#custom-esp-24-ghz-tx-for-jr-module-bay","title":"Custom ESP 2.4 GHz TX (for JR module bay)","text":"<p>All of the info on this topic can be found here</p> <p></p>"},{"location":"hardware/special-targets/diy-tx/#custom-super-slim-esp-24-ghz-tx-for-lite-module-bay","title":"Custom Super Slim ESP 2.4 GHz TX (for lite module bay)","text":"<p>The super slim is an evolution of the slim. It uses the same base hardware as the JR size one. It's the same size as an R9M Lite, and fits in all handsets with a lite module bay such as the X-Lite, X9 Lite, and Tango 2 (with the proper adapter). The rest of the info can be found here</p> <p></p>"},{"location":"hardware/special-targets/diy-tx/#custom-900-mhz-tx-not-built-anymore","title":"Custom 900 MHz TX (not built anymore)","text":"<p>In the beginning, 900 MHz transmitters were sometimes built DIY. Today they're not. If you have one, the max output power defaults to 100mW, but with <code>UNLOCK_HIGHER_POWER</code>, that can be increased to 250mW.</p>"},{"location":"hardware/special-targets/diy-tx/#custom-hardwares-firmware-guide","title":"Custom Hardware's Firmware Guide","text":"<p>PlatformIO is a prerequisite for developing custom hardware.</p> <p>The hardware pinouts for ExpressLRS are kept at ExpressLRS/targets. Clone this repo within <code>src/</code> of your <code>ExpressLRS/ExpressLRS</code> repo - or, if you run a build, it'll happen automatically.</p> <p>In the <code>RX</code> and <code>TX</code> directories, you can find the pinouts and configuration for different layouts stored as JSON files.</p> <p>Within <code>targets.json</code>, there are listed all the possible build targets for ExpressLRS.</p> <p>To access your target's configuration, you must add a new entry to the <code>targets.json</code> file - mimic the closest existing one and change the values to match your hardware. It's critical the <code>firmware</code> field match your processor.</p> <p></p> <p>Select the matching build target from PlatformIO:</p> <p></p> <p>After you run a build, you should be met with a hardware configuration selector and your new configuration!</p> <p></p>"},{"location":"hardware/special-targets/nuclear-hardware/","title":"Nuclear Targets","text":""},{"location":"hardware/special-targets/nuclear-hardware/#nuclear-rx","title":"Nuclear RX","text":""},{"location":"hardware/special-targets/nuclear-hardware/#overview","title":"Overview","text":"<p>The Nuclear RX is designed to be as small as possible, using the same software target as the DIY Nano RX, and assembled by JLCPCB. It uses the 2400MHz band and the ExpressLRS firmware.</p>"},{"location":"hardware/special-targets/nuclear-hardware/#features","title":"Features","text":"<ul> <li>20x20 stack mounting with break-off tabs for compact applications  </li> <li>SMD Antenna</li> <li>WiFi updating</li> <li>Up to 500Hz packet rate  </li> </ul> <p>When you get your Nuclear RX, it will likely be on the latest release firmware. You'll probably have to update it to work with your TX. To update, follow the steps in the WiFi updating page. Alternatively, you can use betaflight passthrough should work, but the boot jumper must be bridged while applying power to the RX.</p> <p>When building, use one of the <code>DIY_2400_RX_ESP8285_SX1280_via_X</code> targets. To use <code>via_wifi</code>, put your RX in binding mode, connect your computer to the RX WiFi, and hit upload.</p> LED Status Blinking Slowly Waiting for Connection Fast Double Blink Binding Mode Super Fast Blink WiFi Updating Mode Solid On Connected <p>If for some reason the RX needs to be in boot mode, bridge the jumpers as shown here:</p> <p></p>"},{"location":"hardware/special-targets/nuclear-hardware/#nuclear-tx","title":"Nuclear TX","text":""},{"location":"hardware/special-targets/nuclear-hardware/#overview_1","title":"Overview","text":"<p>The Nuclear TX is designed to be the same size as a FrSky slim module and use the same software target as the DIY Slim TX. It uses the 2400MHz band and the ExpressLRS firmware. There is also a case that fits a full size JR module bay with the same PCB.</p>"},{"location":"hardware/special-targets/nuclear-hardware/#before-flight","title":"Before Flight","text":"<p>If you ordered a Nuclear TX that wasn't fully assembled, these steps should help you finish it.</p>"},{"location":"hardware/special-targets/nuclear-hardware/#print-a-case","title":"Print a case","text":"<p>The latest version of the Nuclear TX STL files can be found here. Print the pieces in the orientation in the image and use support. Tree support in Cura works great. Keep in mind that PLA may melt if left in a hot car or in direct sunlight.  </p> <p></p>"},{"location":"hardware/special-targets/nuclear-hardware/#assemble","title":"Assemble","text":"<p>Slap it together as seen below. Solder the wires to the pin header in the order in the picture, then slide it in from the outside. The header should press in with a little force. Add some glue on the inside to keep it from sliding out when removing it from your handset. Put the SMA pigtail in the hole in the top and screw it down. Use a wrench to make sure it doesn't come loose when you screw on your antenna. Plug the U.FL into the module and route it under, and loop up around the side.  </p> <p></p>"},{"location":"hardware/special-targets/nuclear-hardware/#upload-firmware","title":"Upload firmware","text":"<p>When you get your Nuclear RX, it will likely be on the latest release firmware. You'll probably have to update it to work with the RX you have. To update, follow the steps in the WiFi updating page. If your transmitter module ever becomes bricked from a bad upload, connect it with a serial adapter as shown here. MAKE SURE THE ADAPTER IS SET TO 3.3V; 5V WILL KILL THE MODULE! Use tweezers or solder to bridge the boot jumper while you power on the module to put it in boot mode. Use the target <code>DIY_2400_TX_ESP32_SX1280_E28_via_UART</code>.  </p> <p></p> <p>Note</p> <p>The version of the boards with the 6-pad layout for programming has the TX and RX named backward. The actual order of the pins is TX, RX, 3V3, GND, GND.</p>"},{"location":"info/advance-technical-info/","title":"Advance Technical Info","text":"<p>This page explain the more technical side for debugging things yourself.</p>"},{"location":"info/advance-technical-info/#lua-status","title":"LUA Status","text":"<p>In normal state, the top right corner of the LUA will display <code>-</code> or <code>C</code> for RX connection status. in Warning or Critical Warning, the top right corner of the LUA will display a number to debug. As the LUA title will only show the current most critical warning only.</p> <p>Converting the number on the top right corner to bits, you can decode the on going warnings.</p> Bit Status Solution 0 RX connection status connect a RX with TLM ratio other than <code>Off</code> 1 Reserved Status 2 Model Mismatch Warning set ModelMatch to Off or Select/Set the correct Model ID 3 Armed Status LUA should be closed to maximize sent Stick Command 4 Reserved Warning 5 Not While Connected Do not change this parameter when connected to a RX 6 Reserved Critical Warning 7 Reserved Critical Warning"},{"location":"info/advance-technical-info/#debug-logging","title":"DEBUG Logging","text":"Defines Description <code>-DDEBUG_LOG</code> Turn on debug messages, if disabled then all debugging options (starting with DEBUG_) are disabled <code>-DDEBUG_LOG_VERBOSE</code> Use DEBUG_LOG_VERBOSE instead (or both) to see verbose debug logging (spammy stuff) <code>-DDEBUG_RX_SCOREBOARD</code> Print a letter for each packet received or missed (RX debugging) <code>-DDEBUG_CRSF_NO_OUTPUT</code> Don't send RC messages over UART <code>-DDEBUG_BF_LINK_STATS</code> These debugging options send extra information to Betaflight in the LinkStatistics packet"},{"location":"info/glossary/","title":"Glossary","text":""},{"location":"info/glossary/#technical-words-with-explanations","title":"Technical words with explanations","text":"<p>Below you can find a list of terms you might not be sure about, as well as some common abbreviations:</p> <ul> <li><code>BL</code>: Bootloader, loads the FW</li> <li><code>CRSF</code>: TBS Crossfire, more specifically in our case most often referring to the communication protocol between TX and TX module and RX and FC respectively</li> <li><code>ESC</code>: Electronic Speed Controller</li> <li><code>FC</code>: Flight Controller</li> <li><code>FW</code>: Firmware</li> <li><code>LQ</code>: Link Quality, percentage of expected packets received. Our preferred method of measuring the quality of the control link</li> <li><code>Lua</code>: Means \"Moon\" in Portuguese. As such, Lua is the correct way to write and not all uppercase. The ExpressLRS Lua script can be installed on a OpenTX radio, to easily alter TX parameters like Packet rate, Telemetry ratio and Output power. But also shows if the radio (OpenTX) is communicating correctly with the module. ( e.g. 0:50, 0:150, 0:200 and so on.)</li> <li><code>MCU</code>: Micro Controller Unit, generally denotes an embedded system controller as opposed to big iron CPU</li> <li><code>OSD</code>: On Screen Display, refer to this page for instructions for setup in BF</li> <li><code>OTA</code>: Update your device <code>Over The Air</code> (WiFi)</li> <li><code>OTX</code>: OpenTX</li> <li><code>RSSI</code>: Received Signal Strength Indicator, \"arbitrary\" scaled version of <code>RSSI dBm</code> or LQ. Signal Health: LQI and RSSI Explained</li> <li><code>RSSI dBm</code>: Measure of power level measured in dBm. Basically, how strong the signal being received is</li> <li><code>S.Port</code>: SmartPort, sometimes referred to as <code>sport</code>. FrSky \"telemetry\" protocol. The <code>S.Port</code> also gets used for updating FrSky receivers.</li> <li><code>DVDA</code>: Deja Vu Diversity Aid, also referred to as D-mode. This mode sends the same packet multiple times consecutively (2 times for D-250 and 4 for D-500). It increases LQ at the cost of range and latency. </li> <li><code>FLRC</code>: Fast Long Range Communication, also known as F-mode. It is a term that combines a few signal processing techniques (demodulation, forwarding error correction and interleaving) to enable high data rates. This results in lower latency and comparable (or shorter) range.</li> </ul> <p>To be continued.</p>"},{"location":"info/init-rate/","title":"Init Rate","text":""},{"location":"info/init-rate/#what-happened-to-the-lua-init-rate-option","title":"What happened to the Lua Init Rate option?","text":"<p>The <code>Init Rate</code> receiver Lua option was removed in ExpressLRS 3.4 in favor of automatic Init rate storage.</p>"},{"location":"info/init-rate/#what-is-init-rate","title":"What is Init Rate?","text":"<p>On boot, the receiver will listen for the Sync Packet starting with the fastest RF Mode or Packet Rate, down to the slowest, then cycles, until it finally Syncs and Binds.  The <code>Initialization Rate</code> controls the packet rate that the receiver will start checking for the Sync Packet which can allow for near-instant connection when the receiver is powered up.</p> <p>However, when the receiver is connected, it can not save its configuration without failsafing, which leads to a problem of how to store the connected rate as the Init Rate for use next power up. Unfortunately, this means you must failsafe the receiver once to configure its Init Rate.</p>"},{"location":"info/init-rate/#setting-init-rate","title":"Setting Init Rate","text":""},{"location":"info/init-rate/#method-1-switch-to-rate","title":"Method 1: Switch To Rate","text":"<ul> <li>Power on both a receiver and transmitter and wait for them to connect on any packet rate.</li> <li>On the transmitter, select the packet rate to set the receiver's Init Rate to.</li> <li>NOTE the packet rate must actually change for the setting to be sent. This means changing away from, then back to the desired packet rate if already connected at the desired rate.</li> <li>The receiver briefly failsafes when changing packet modes and will save the target rate.</li> </ul> <p>The receiver will now boot at the selected rate on next boot.</p>"},{"location":"info/init-rate/#method-2-transmitter-power-off","title":"Method 2: Transmitter Power Off","text":"<ul> <li>Power on the transmitter and select the packet rate to set the receiver's Init Rate to.</li> <li>Power on the receiver and wait for it to connect. The LED on the receiver should be on solid / not blinking.</li> <li>Power off the transmitter with the receiver still connected, bypassing any EdgeTX warnings along the way.</li> <li>The receiver should failsafe and the LED will start blinking again.</li> </ul> <p>The receiver will now boot at the selected rate on next boot.</p>"},{"location":"info/long-range/","title":"Long Range Competition","text":"<p>One of the most frequently asked questions that are asked by people who are interested in, but haven't yet tried ELRS is \"How far does it go, and at what power level?\"</p> <p>The following table is a leaderboard of the current record holder for each packet rate, and the longest distance from home. Note that not every flight resulted in a failsafe at max range, so the link could go further in some cases. The leaderboard is separated into two different tables: 2.4GHz, and 900MHz. A leaderboard entry will only stay if it is the \"best\" for any specific packet rate, be it via power, range, or craft type.</p> <p>To enter, press the pencil in the upper right corner of this page, and enter your record's info into the table, sorted by distance, and then PR it into the docs repository,</p>"},{"location":"info/long-range/#rules","title":"Rules","text":"<p>Anyone can add an entry to the table, and entries should include the:</p> <ul> <li>Max distance from home</li> <li>RF freq (900MHz / 2.4GHz)</li> <li>Packet rate</li> <li>Power level</li> <li>If the link failsafed at max range</li> <li>The pilot name</li> <li>A link to your DVR on youtube</li> </ul> 2.4 GHz Rankings900 MHz Rankings Max Dist. (km) Packet Rate (Hz) TX Power (mW) Type Failsafe at Max Range? Pilot Handle Link to DVR 101.3 50 2000 Wing No Snipes Link 43.7 150 250 Wing No Slickshot Link 40.6 50 25 Wing No Shawn U Link 35.0 250 100 Wing No Snipes Link 20.0 150 100 Wing Yes Pairan Link 18.9 150 50 Wing yes TitanDynamics Link 17.1 50 10 Wing No Denks Link 12.2 500 250 Wing No B\u00f6rner Link 10.2 500 10 Quad Yes mrscythe Link 10.0 50 250 Quad No Disnator Link 7.1 500 100 Wing No Bri'ish Link 7.0 150 50 Quad No Taufik Link 5.0 250 500 Quad No ZoFPV Link 4.6 50 25 Quad No febbyeka Link 3.0 150 25 Quad No Taufik Link Max Dist. (km) Packet Rate (Hz) TX Power (mW) Type Failsafe at Max Range? Pilot Handle Link to DVR 50.1 25 500 Wing No Yarillo Link 40.7 50 10 Wing No Leslie Yagin Link 13.1 50 100 Quad No Taufik Link 10.0 100 100 Wing No Flight Cub Link 6.0 100 50 Wing No Snipes Link 5.0 200 50 Quad No S0L4R Link 2.2 50 10 Quad No Mike Malagoli Link"},{"location":"info/signal-health/","title":"Signal Health","text":"<p>RSSI has become somewhat a generic term for how good a signal is, and every manufacturer can have their own scale, with most agreeing that \"100\" is the best, less than that is bad, and expect have RXLOSS at ???. This is an explanation of the signal metrics provided by ExpressLRS and how to understand their values.</p>"},{"location":"info/signal-health/#two-types-of-signal-health","title":"Two Types of Signal Health","text":"<p>There are two main types of signal information available from ExpressLRS: RSSI and LQI</p> <ul> <li>RSSI - Received Signal Strength Indicator, this value indicates how loud \ud83c\udfba the reception is. RSSI must be above the sensitivity level to be understood. Units are dBm and start from 0 and go down as the volume gets lower (-130dBm hard limit).</li> <li>LQI - Link Quality Indicator, this value indicates how much of the conversation is being understood and ultimately all that matters. Units are percent, with 100% being every packet is received, and 0% means no packets are being received.</li> </ul> <p>Consider you're having a conversation in a quiet room. Your partner speaks loudly enough for you to hear, so the RSSI of their voice is above the sensitivity of your ears. You're going to understand the conversation because you're hearing every word. That's a 100% LQI-- you're receiving 100% of the words. Now imagine someone blows an air horn right in the middle of a sentence. The RSSI is still the same level, you still hear what you could make out at the same volume, you missed a word so the LQI is lower. The closer the volume of the conversation is to the background noise level in the room, the greater the chance is that you'll miss a word due to it getting mixed in with the background noise and lowering your LQI. Remember, LQI is all that matters. Your partner could shout as loud as they want but if you could hear every word anyway, the volume doesn't matter, you always heard every word.</p>"},{"location":"info/signal-health/#which-do-i-care-about","title":"Which do I care about?","text":"<p>Both really. LQI is most important because you can't fly if you're not getting packets. RSSI is important because it tells you how close you are to the radio receiver not being able to receive packets at all. I'd say if you have just one, pick LQI, because that tells you what percentage of packets are getting through and you get to make the decision if it isn't enough. What you can't tell from LQI alone is when that number is going to drop off a cliff, and it could happen extremely fast because you hit the RSSI sensitivity limit.</p>"},{"location":"info/signal-health/#rssi-sensitivity-limit","title":"RSSI Sensitivity Limit","text":"<p>This is the lowest theoretical RSSI value that can be distinguished by the radio receiver. It is displayed next to the packet rate in the ELRS.lua script, as different packet rates and frequency bands have different sensitivity limits. Lower rates are more sensitive, -123dBm for 25Hz 915MHz up to -105dBm for 500Hz 2400MHz. This gives you the limit you know you can't fly below. </p> <p>A sensible warning value is 5-10dBm higher than the sensitivity limit shown in the RF Mode Indexes (e.g. 250Hz=-108dBm, so -103dBm to -98dBm for the alarm).</p>"},{"location":"info/signal-health/#rssi-channel","title":"RSSI Channel","text":"<p>RSSI and LQI are included already in the protocol used to communicate to the flight controller, so the \"RSSI Channel\" on the Receiver tab should be set to Disabled. RSSI_ADC  / \"Analog RSSI input\" on the Configuration tab should also be disabled.</p>"},{"location":"info/signal-health/#available-rssi-osd-fields","title":"Available RSSI OSD Fields","text":"<ul> <li>RSSI dBm - This is the true RSSI value we've talked about here, and is available on Betaflight after 4.1 (?) and iNav after 2.6 (?)</li> <li>Link Quality - This is LQI discussed here, and has the same version requirements. Betaflight and iNav (LQ TYPE2 option) display add the RF Mode to this as well, e.g. <code>7:100</code> means mode 7 = 250Hz and 100% LQI.</li> <li>RSSI Value - Or sometimes just RSSI. This is the old undefined units of Signal Strength value that everyone is used to with no idea what value is good or what value is too bad. What value you'll actually see here varies, even on ExpressLRS, and is covered in the RSSI Value OSD field section. It is not recommended to use this field unless you have to (e.g. DJI).</li> </ul>"},{"location":"info/signal-health/#rssi-value-osd-field","title":"RSSI Value OSD field","text":"<p>What appears in the RSSI Value field is based on what is selected as the RSSI Channel as ExpressLRS also sends LQI and RSSI as channels (AUX11/ch15 and AUX12/ch16 respectively). It is better to use the dBm or LQ OSD fields instead of this one if you can. DJI users are forced to use this due to it being the only field supported by their OSD. Changes to RSSI Channel in Betaflight requires a reboot to take effect.</p> <ul> <li>Disabled is set as the \"RSSI Channel\" field in Betaflight - Displays RSSI dBm scaled as a percentage from -130dBm to 0dBm. Not recommended since what percentage of 130 is the Sensitivity Limit for your selected rate? Math!</li> <li>AUX11/ch15 is set as the \"RSSI Channel\" - Simply LQI although the value might be slightly off due to rounding.</li> <li>AUX12/ch16 is set as the \"RSSI Channel\" - Displays the RSSI dBm scaled as a percentage from the current Sensitivity Limit to -50dBm and is a decent indicator of how much range is left before the LQI cliff (0 here = Sensitivity Limit).</li> </ul> <p>In iNav, the RSSI Value on the OSD is called RSSI (Signal Strength), and will always display 0. To show a filtered (by iNav) LQI in that field, set the rssi_source to protocol using the CLI with <code>set rssi_source = PROTOCOL</code>.</p>"},{"location":"info/signal-health/#rf-mode-indexes-rfmd","title":"RF Mode Indexes (RFMD)","text":"<p>OSDs report the packet rate using an index instead of the actual rate, either as a <code>RATE:LQ%</code> or with rate in the hundreds digit such as <code>799</code> where 7 is the RATE and 99 is the LQ%. Handsets display the rate using the RFMD telemetry item.</p> <p></p> RFMD Lua Packet Rate Sensitivity Limit TX Duration (us) TX Interval (us) 14 D50 50Hz -112dBm 4640.0 5000 13 F1000 1000Hz -104dBm 388.8 1000 12 F500 500Hz -104dBm 388.8 2000 11 D500 500Hz -104dBm 388.8 1000 10 D250 250Hz -104dBm 388.8 1000 9 500Hz 500Hz -105dBm 1507.4 2000 8 333Hz Full 333Hz -105dBm 2374.4 3003 7 250Hz 250Hz -108dBm 3330.0 4000 6 200Hz 200Hz -112dBm 4640.0 5000 5 150Hz 150Hz -112dBm 5891.9 6666 4 100Hz Full 100Hz -112dBm 6690.0 (900) /7605.9 (2.4) 10000 3 100Hz 100Hz -117dBm 9280.0 10000 2 50Hz 50Hz -120dBm (900) / -115dBm (2.4) 19580 (900) / 10798 (2.4) 20000 1 25Hz 25Hz -123dBm 30980 40000"},{"location":"info/signal-health/#what-about-snr","title":"What about SNR?","text":"<p>SNR stands for Signal to Noise ratio and compares RSSI dBm to the RF background noise level and is in dB units (not dBm), higher is better. Notice it compares the background noise level and not the Sensitivity Limit. The reported value changes quite a bit from packet to packet and what values are good depend on what packet rate is being used. The RF chip can only approximate the noise level and only registers a value so high above the noise floor leading to this value getting clipped. Add to that, LoRa modulation can actually receive data below the noise floor to some degree.</p> <ul> <li>All FLRC modes (F1000, F500, D500, D250) always report 0 for SNR.</li> <li>TBS Crossfire I believe reports <code>SNR * 4</code>-- their values can be much higher.</li> </ul> <p>ExpressLRS uses an averaged SNR to control dynamic power, with the following low/high values. The lowest possible SNR a packet can still be received is 5-10dB lower than the \"Raise Power\" limit.</p>"},{"location":"info/signal-health/#team24","title":"Team2.4","text":"Packet Rate \"Raise Power\" (bad) SNR \"Lower Power\" (good) SNR 500Hz 5.0dB 9.5dB 333Hz Full 5.0dB 9.5dB 250Hz 3.0dB 8.5dB 150Hz 0.0dB 8.5dB 100Hz Full 0.0dB 8.5dB 50Hz -1.0dB 6.5dB"},{"location":"info/signal-health/#team900","title":"Team900","text":"Packet Rate \"Raise Power\" (bad) SNR \"Lower Power\" (good) SNR 200Hz 1.0dB 3.0dB 100Hz Full 1.0dB 3.0dB 100Hz 1.0dB 2.5dB 50Hz 1.0dB 1.5dB D50 1.0dB 3.0dB 25Hz -3.0dB 0.5dB"},{"location":"info/signal-health/#how-far-can-i-go-on-x-mw","title":"How far can I go on X mW?","text":"<p>Very far? This question is usually used in place of the actual question \"Will I get good signal where I fly?\" which is impossible to answer.</p> <p>ExpressLRS 2.4GHz can go over 40km at 250Hz 100mW on omnidirectional antennas with excellent LQI, or it can go 400m with less stellar LQI. By far the biggest factor in determining maximum range is direct line of sight. Blocking line of sight reduces RSSI dBm. A few trees or a building isn't going to keep you from flying due to ExpressLRS's excellent sensitivity even when line of sight isn't available, but range is reduced a bit for every physical object between you and the receiver. Piloting from an elevated position can eliminate some ground obstacles and provide a measurable boost in range.</p> <p>The second largest factor is interference. Interference is the clobbering of our packets by outside sources, such as WiFi on 2.4GHz or other ISM transmissions on 868/915MHz, and is seen as a drop in LQI well before the sensitivity limit. Increasing TX power output is usually not the solution you'd expect, where each doubling in output power only might only add 10% to the usable range due to interference.</p>"},{"location":"info/signal-health/#team868team915-or-team24","title":"#Team868/#Team915 or #Team2.4","text":"<p>Unfortunately, there is a misconception about the 2.4GHz range thanks to other radio protocols on the market. ExpressLRS uses LoRa, which has had some amazing results on 2.4GHz. Again, 40km on 100mW 250Hz on 2.4GHz. The advantages of 2.4GHz is that the antennas are 2.5x smaller than 915MHz antennas, and there's more spectrum for ExpressLRS to hop around in, opening up the air for more pilots at once. 868/915MHz does have increased penetration and is the ultimate king of long range flying, but penetration difference may not be as great as you think. The high sensitivity of ExpressLRS receivers allows them to fly places you wouldn't dream of flying FSK-based 2.4 receivers such as FrSky ACCST/ACCESS, FlySky AFHDS2A, Spektrum DMX, or Redpine.</p>"},{"location":"info/signal-health/#rf-noise","title":"RF noise","text":"<p>We have all heard the stories of racers powering up his TBS crossfire full module at 2W and causing people to fail-safe during a race. This happens because the 868/915MHz band has limited bandwidth. The solution for this is to use a low power mode during races, so you do not blast anyone out of the sky. 2.4GHz does not have this issue. Flite Test has a world record of having 179 RC airplanes in the sky using 2.4 GHz.</p> <p>2.4GHz LoRa can also handle WiFi noise very well. Studies have been conducted with the coexistence of WiFi and LoRa bands. </p> <p>868/915 does not have to worry about WiFi signal but it does have to worry about cell towers and other RF noise. You are fighting against thermostats, fire systems, burglar systems and any other device running on that band.</p>"},{"location":"info/telem-bandwidth/","title":"Telemetry Bandwidth","text":"<p>Telemetry Burst describes the allocation of telemetry packets in ExpressLRS added in #472. There are two types of packets, LINK and DATA. LINK is the standard link statistics and is always available, and DATA is \"Advanced Telemetry\" which is telemetry coming from the flight controller and shares bandwidth with MSP transfers. Burst mode attempts to maintain a minimum rate of LINK packets and use the rest of the available telemetry slots for DATA.</p> <p>The LINK rate chosen was one every 512ms, roughly 2 per second but slightly higher to allow more rates to have an additional burst packet at lower ratios.</p> Air Rate Telem Ratio Telem Interval (ms) Packets/second Burst Count Bandwidth (no Burst) Bandwidth (Burst) 500 1:128 256 3.9 1 78bps 78bps 500 1:64 128 7.8 3 156bps 234bps 500 1:32 64 15.6 7 312bps 547bps 500 1:16 32 31.2 15 625bps 1172bps 500 1:8 16 62.5 31 1250bps 2422bps 500 1:4 8 125.0 63 2500bps 4922bps 500 1:2 4 250.0 127 5000bps 9922bps Air Rate Telem Ratio Telem Interval (ms) Packets/second Burst Count Bandwidth (no Burst) Bandwidth (Burst) 250 1:128 512 2.0 1 39bps 39bps 250 1:64 256 3.9 1 78bps 78bps 250 1:32 128 7.8 3 156bps 234bps 250 1:16 64 15.6 7 312bps 547bps 250 1:8 32 31.2 15 625bps 1172bps 250 1:4 16 62.5 31 1250bps 2422bps 250 1:2 8 125.0 63 2500bps 4922bps Air Rate Telem Ratio Telem Interval (ms) Packets/second Burst Count Bandwidth (no Burst) Bandwidth (Burst) 200 1:128 640 1.6 1 31bps 31bps 200 1:64 320 3.1 1 62bps 62bps 200 1:32 160 6.2 2 125bps 167bps 200 1:16 80 12.5 5 250bps 417bps 200 1:8 40 25.0 11 500bps 917bps 200 1:4 20 50.0 24 1000bps 1920bps 200 1:2 10 100.0 50 2000bps 3922bps Air Rate Telem Ratio Telem Interval (ms) Packets/second Burst Count Bandwidth (no Burst) Bandwidth (Burst) 150 1:128 853 1.2 1 23bps 23bps 150 1:64 426 2.3 1 47bps 47bps 150 1:32 213 4.7 1 94bps 94bps 150 1:16 106 9.4 3 188bps 281bps 150 1:8 53 18.8 8 375bps 667bps 150 1:4 26 37.5 18 750bps 1421bps 150 1:2 13 75.0 37 1500bps 2921bps Air Rate Telem Ratio Telem Interval (ms) Packets/second Burst Count Bandwidth (no Burst) Bandwidth (Burst) 100 1:128 1280 0.8 1 16bps 16bps 100 1:64 640 1.6 1 31bps 31bps 100 1:32 320 3.1 1 62bps 62bps 100 1:16 160 6.2 2 125bps 167bps 100 1:8 80 12.5 5 250bps 417bps 100 1:4 40 25.0 11 500bps 917bps 100 1:2 20 50.0 24 1000bps 1920bps Air Rate Telem Ratio Telem Interval (ms) Packets/second Burst Count Bandwidth (no Burst) Bandwidth (Burst) 50 1:128 2560 0.4 1 8bps 8bps 50 1:64 1280 0.8 1 16bps 16bps 50 1:32 640 1.6 1 31bps 31bps 50 1:16 320 3.1 1 62bps 62bps 50 1:8 160 6.2 2 125bps 167bps 50 1:4 80 12.5 5 250bps 417bps 50 1:2 40 25.0 11 500bps 917bps Air Rate Telem Ratio Telem Interval (ms) Packets/second Burst Count Bandwidth (no Burst) Bandwidth (Burst) 25 1:128 5120 0.2 1 4bps 4bps 25 1:64 2560 0.4 1 8bps 8bps 25 1:32 1280 0.8 1 16bps 16bps 25 1:16 640 1.6 1 31bps 31bps 25 1:8 320 3.1 1 62bps 62bps 25 1:4 160 6.2 2 125bps 167bps 25 1:2 80 12.5 5 250bps 417bps <pre><code>// Source code for table generator\nint main(void)\n{\n  for (uint8_t rate=RATE_500HZ; rate&lt;RATE_4HZ; ++rate)\n  {\n    uint32_t hz = RateEnumToHz((expresslrs_RFrates_e)rate);\n    printf(\"| Air Rate | Telem Ratio | Telem Interval (ms) | Packets/second | Bandwidth (no Burst) | Bandwidth (Burst)\\n\");\n    if (rate == RATE_500HZ) printf(\"|---|---|---|---|---|---|\\n\");\n    for (uint8_t ratio=TLM_RATIO_1_128; ratio&lt;TLM_RATIO_ENUM_MAX; ++ratio)\n    {\n      uint32_t tlmRatio = TLMratioEnumToValue((expresslrs_tlm_ratio_e)ratio);\n      float telemPps = (float)hz / tlmRatio;\n      uint32_t telemInterval = 1000 * tlmRatio / hz;\n      uint32_t tlmBurst = TELEM_MIN_LINK_INTERVAL * hz / tlmRatio / 1000;\n      // Reserve one slot for LINK telemetry \n      if (tlmBurst &gt; 1)\n        --tlmBurst;\n      else\n        tlmBurst = 1;\n\n      printf(\"%u | 1:%u | %u | %.1f | %u | %.0fbps | %.0fbps\\n\",\n        hz, tlmRatio, telemInterval, telemPps, tlmBurst, telemPps*1/2*5*8,\n        5*8*telemPps*tlmBurst/(tlmBurst+1));\n    }\n  }\n\n  return 0;\n}\n</code></pre>"},{"location":"quick-start/ardupilot-setup/","title":"Ardupilot Setup","text":""},{"location":"quick-start/ardupilot-setup/#ardupilot-serial-setup","title":"ArduPilot Serial Setup","text":"<p>ArduPilot Firmware must be 4.1 or higher to run CRSF protocol. As with any serial-based receiver, you need to attach the TX/RX pads to a UART on your flight controller, then enable Serial RX in the corresponding UART in ArduPilot. In mission planner, you will need to go to the <code>config tab -&gt; parameter tree</code> <pre><code>SERIALx_PROTOCOL = 23 (RCIN)\nRSSI_TYPE = 3 (ReceiverProtocol)\n</code></pre> Our packet rate is different from the ArduPilot CRSF packet rate, and ArduPilot will keep on reporting the mismatch, but recently they have an option to suppress the report. Currently ArduPilot provide a way to suppress this notification with the parameter below. (this will not cause any effect to RC link or telemetry Link.) <pre><code>RC_OPTIONS turn on Bit 9th which is  \"Suppress CRSF mode/rate message for ELRS systems\".\n</code></pre> Another bit you should enable on RC_Options is the use of 420K baud rate. ExpressLRS receivers use 420K Baudrate to talk to flight controllers.</p> <p></p> <p>Once you have set the parameter above, power-cycle the flight controller by disconnecting and reconnecting your battery and USB. ArduPilot should automatically run with ELRS, but if it fails, set <code>RC_PROTOCOL</code> parameter 9<sup>th</sup> bit to 1 (CRSF option)  and set the other parameter as below: <pre><code>SERIALx_PROTOCOL = 23 (RCIN)\nSERIALx_BAUD = 115\nRSSI_TYPE = 3 (ReceiverProtocol)\n</code></pre></p>"},{"location":"quick-start/ardupilot-setup/#ardupilot-flight-modes","title":"ArduPilot Flight Modes","text":"<p>ArduPilot default flight modes channel is channel 8, but ELRS 8 position channel is on channel 12 (in hybrid switch mode). you will need to set your handset to use channel 12 as flight modes and set ArduPilot parameter: <pre><code>FLTMODE_CH=12\n</code></pre> if you are using Wide Switch mode (only available in ELRS V2 and above), you can use any channel for your 8 flight mode selection (beside channel 15 which is LQ and channel 16 which is RSSI).</p>"},{"location":"quick-start/ardupilot-setup/#ardupilot-rssi-and-link-quality","title":"ArduPilot RSSI and Link Quality","text":"<p>To get RSSI and LQ shown in OSD (in %) set: <pre><code>RSSI_TYPE = 3 (ReceiverProtocol)\n</code></pre></p> <p>and go to your OSD tab, and place your RSSI and LQ element where you want them to be.</p> <p>If you feel any delay or lag in the control, check the RX connection to the Flight Controller. On some Flight Controllers you have to use full DMA supported input pin.</p> <p>Happy Flying! </p>"},{"location":"quick-start/binding/","title":"Binding ExpressLRS","text":""},{"location":"quick-start/binding/#compatibility-check","title":"Compatibility Check","text":"<p>The first number in the Version string should match between a TX Module and a Receiver. </p> <p>Examples:</p> <ul> <li>a TX Module with version string of 3.1.2 will sync and work with a Receiver with firmware version 3.0.1</li> <li>a TX Module with version string of 3.2.0 will NOT sync or bind with a Receiver with firmware version 2.4.0</li> <li>a Receiver with version string of 3.1.2 will sync and work with a TX Module with firmware version 3.0.1</li> <li>a Receiver with version string of 3.2.0 will NOT sync or bind with a TX Module with firmware version 2.4.0</li> <li>SPI-based Receivers on (official) Betaflight 4.3.1 and older will only sync or bind with ExpressLRS 2.x firmware</li> <li>SPI-based Receivers on Betaflight 4.4.0 and newer will only sync or bind with ExpressLRS 3.x firmware</li> </ul> <p>If your firmware versions are incompatible, NONE of the methods below will work. </p> <p>See these pages on how to check the firmware version on your ExpressLRS devices:</p> <ul> <li>TX Modules</li> <li>Receivers</li> <li>SPI Receivers</li> </ul>"},{"location":"quick-start/binding/#how-to-bind-expresslrs-devices-together","title":"How to Bind ExpressLRS Devices Together","text":"<p>There are TWO methods to Bind/Sync an ExpressLRS TX Module and a Receiver:</p> <ol> <li>Using a unique Binding Phrase</li> <li>The Traditional Binding Method</li> </ol> <p>If you'll be updating or reflashing your ExpressLRS firmware into your device anyway, using a Binding Phrase is a no-brainer. </p> <p>With the release of ExpressLRS v3.0, updating your Binding Phrase via the WebUI is an even more compelling reason to use a Binding Phrase.</p> <p>Below are the different Binding Procedures for ExpressLRS.</p>"},{"location":"quick-start/binding/#unique-phrase","title":"Unique Phrase","text":"<p>You can select a short and simple Binding Phrase for your devices before flashing or updating using the field in the ExpressLRS Configurator.</p> <p></p> Binding Phrase Field <p>Alternatively, you can also change the Binding Phrase via the WebUI if your device has WiFi capabilities and is already updated to ExpressLRS 3.0 or newer. See this page for the WebUI User's Guide.</p> <p></p> Binding Phrase Field in the WebUI <p>We recommend using a unique phrase with at least 8 alpha-numeric characters. The best candidate is your Pilot Handle. This phrase need not be complicated or super-secret as it isn't a password or encryption key. </p> Is my binding phrase a secret? (click/tap to expand) <p>No, just like what channel your VTX is on is not a secret. The binding phrase is not for security, it is for anti-collision. If everyone kept their VTX channel a secret, the chances of you blasting someone out of the sky accidentally are pretty high. To provide the best chance of not interfering with other pilots and them not interfering with you, be sure you're not using the same dumb bind phrase as someone else. Express your style and some creativity with a hilarious or saucy bind phrase.</p>"},{"location":"quick-start/binding/#traditional-binding","title":"Traditional Binding","text":"<p>For traditional binding to work, a Binding Phrase must not be set, at least for the Receiver.</p> <p>Updated on 3.4.0</p> <p>Any Receiver flashed with 3.4.0 or newer can be put into Bind Mode, even with a set Binding UID.</p> <p>Notice</p> <p>A Receiver flashed or set with a Binding Phrase WILL NOT initiate Manual Binding mode, however many times you try the procedure below. You must first reflash the receiver with the Binding Phrase field disabled and/or unset. Why would you not use a bind phrase though if you're already having to flash the RX anyway? </p> <p>The Receiver LED should also be blinking when powered up.</p> <p></p> Receiver LED doesn't Blink (click/tap to expand) <p>Here are the things you can do if the Receiver is in Bootloader Mode:</p> <ol> <li> <p>Check if the Boot button on the Receiver is being pressed or if it's damaged.</p> <ul> <li>If the button is being pressed or pinched, remove the cause of the pressing or pinching. Heatshrink can sometimes press a button on the receiver.</li> <li>If the button is damaged, remove the button or replace the receiver with a better one. Consider asking the seller for a replacement.</li> </ul> </li> <li> <p>If the receiver doesn't have a Boot button and instead has a Boot pad, check if the Boot pad is not connected to a Ground pad. </p> <ul> <li>If the Boot pad is connected to a Ground pad, disconnect or remove the connection.</li> </ul> </li> <li> <p>Disconnect the RX and TX wires of the Receiver from the Flight Controller. Reconnect power to the drone or aircraft. Observe the LED on the Receiver once again.</p> <ul> <li>If it starts Blinking Slowly (500ms Blink Pattern), you will need to move the receiver wiring to a different UART.</li> <li>If the other UART is occupied by another peripheral, disconnect it and swap places with the Receiver.</li> <li>If there is no other Full UART, you can try wiring a Pull-up Resistor: Connect a Resistor (300 Ohm to 1k Ohm value; a lower value is more effective) between this UART's RX pad and either a 5v or 3.3v pad as shown below:        </li> </ul> <p> </p> </li> <li> <p>If you are using any of the Digital FPV systems like the DJI FPV Air Unit, Caddx Vista or DJI O3 Air Unit, and you wired or connected all six wires to your Flight Controller, you will need to remove the SBUS/DJI HDL wire.</p> </li> </ol> <p>The procedure is as follows:</p> <ol> <li>Power off your transmitter/radio.</li> <li> <p>Power-cycle the receiver 3 times. </p> <ul> <li>Supply power to the receiver.</li> <li>The receiver LED lights up.</li> <li>Turn it off within 2 seconds.</li> <li>Repeat 2 more times.</li> </ul> <p>Caution</p> <p>This step is best done using a LiPo flight pack, so make sure you've wired your flight controller properly and checked for any shorts. You don't want to let out the blue smoke!</p> </li> <li> <p>Make sure the LED is doing a quick double-blink, which indicates the receiver is in bind mode.</p> <p> </p> </li> <li> <p>Power up your transmitter/radio and use the [BIND] button on the ExpressLRS Lua script, which sends out a binding pulse. The Popup will briefly show up and then disappear.</p> <p> </p> </li> <li> <p>If the receiver LED turned into a solid light, it's bound!</p> <p> </p> </li> </ol>"},{"location":"quick-start/binding/#updated-binding-procedure-since-expresslrs-340","title":"Updated Binding Procedure since ExpressLRS 3.4.0","text":"<p>With PR#2542 being part of the 3.4.0 update, users now have the following methods to bind an ExpressLRS receiver with a TX module:</p> <ol> <li>Binding Phrase, flashed or set (via the WebUI) into both devices.</li> <li>3x Power Cycle.</li> <li><code>Bind Receiver</code> button in Betaflight Configurator 10.10 (or newer) Receiver Tab (<code>bind_rx</code> CLI command also works). This will ONLY work if your flight controller is flashed with Betaflight 4.5.0 or newer. </li> <li>1.5s Button Press on the Receiver itself (or Boot pad shorting to Ground).</li> </ol> <p>With the last 3 methods, the Receiver LED will blink twice, pause then repeats, until the Bind is established indicated by a solid LED light. Pressing <code>[Bind]</code> in the ExpressLRS Lua Script should establish the Bind, per the Traditional Binding Procedure above.</p> <p></p> <p>After a Receiver is bound using any of the methods above, users can put the Receiver back into Bind Mode anytime following any of the last 3 methods above. The Bind will persist or stay with the receiver until another Binding Procedure is initiated, with any of the methods above.</p> <p>To cancel Bind Mode, a reboot or power-cycle is needed, or Binding the receiver with a Transmitter. The old Binding Info will be used if the receiver is rebooted without the new Bind.</p> <p>A Lua Script or WebUI option can be toggled to make the Bind volatile upon power-cycle or reboot. Volatile Bind means that the Bind is only valid while the receiver is powered up. Once the receiver is power-cycled or rebooted, the Bind information is wiped and the receiver will boot up in Bind Mode. </p>"},{"location":"quick-start/binding/#connection-check","title":"Connection Check","text":"<p>Using the ExpressLRS Lua Script, look for a <code>C</code> in the top-right corner of the screen which indicates TX module and Receiver are Connected and Communicating.</p> <ol> <li> <p>Press the SYS Key on your Radio.</p> <ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, go back to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>A <code>C</code> in the top-right corner should be visible indicating TX module and Receiver are connected and Communicating.</p> <p> </p> </li> </ol> Model Mismatch (click/tap to expand) <p>If the ExpressLRS Lua Script is showing a <code>C</code> in the top-right corner alright, but then that line disappears and is replaced with a line saying \"Model Mismatch\", do not worry. ExpressLRS has detected that the set Model ID in the Receiver is different from the Receiver ID set in the current Model in your Radio Model Configuration.</p> <p>This is also indicated by the Receiver LED as 3 fast blinks then a pause:</p> <p> </p> <p>If you've deliberately set up Model Matching following this page, make sure your settings are correct.</p> <p>If the Model Match item in the ExpressLRS Lua is set to On, and you do want to use the Model Matching Feature, briefly set it to Off, then set it back to On to assign the current Receiver and Model ID to the Receiver.</p> <p>Otherwise, simply set the Model Match item to Off.</p> <p>If Model Match is set to Off, briefly set it to On and after a second or so, set it back to Off. This should clear the Model Match ID in the receiver.</p> <p>This must be done while the TX module and Receiver are both powered up and connected/bound.</p>"},{"location":"quick-start/firmware-options/","title":"Firmware Options","text":"<p>This page aims to explain only the key options in ExpressLRS Configurator you may need for your initial setup. For a full description of all the options available, see the User Defines page.</p> <p>Some of these options are present on both the TX and RX Targets. It is important that these options match to both the TX module and receiver in order for them to bind. <code>team2400</code> and <code>team900</code> also share a few options and some options are unique to that frequency band. Shown below are common options available on <code>team2400</code> and <code>team900</code> TXes respectively.</p> <p></p> <p></p>"},{"location":"quick-start/firmware-options/#regulatory-domains","title":"Regulatory Domains","text":"<p><pre><code>Regulatory_Domain_AU_915\nRegulatory_Domain_EU_868\nRegulatory_Domain_IN_866\nRegulatory_Domain_FCC_915\n\nRegulatory_Domain_ISM_2400\nRegulatory_Domain_EU_CE_2400\n</code></pre> This is a relatively simple one - enable whatever regulatory domain you are in to select the frequency range to be used.</p> <p>EU Regulatory domains are now LBT compliant!</p>"},{"location":"quick-start/firmware-options/#binding-phrase","title":"Binding Phrase","text":"<p>Entering a binding phrase allows you to skip the binding step with your receivers-- you want this set. Any transmitter using the same binding phrase will connect to any receiver with the same binding phrase, so be unique. Limit to alphanumeric phrases conforming to the Latin alphabet. Receivers flashed with firmware builds that do not have binding phrase enabled will require binding with the traditional binding method.</p>"},{"location":"quick-start/firmware-options/#network-options","title":"Network Options","text":"<p><pre><code>HOME_WIFI_SSID\nHOME_WIFI_PASSWORD\n</code></pre> Set these to have the \"WiFi Update\" mode try to connect to an existing WiFi network using these credentials. Configure them with the WiFi settings for where you'll be flashing your firmware, to save the step of switching WiFi networks on your computer or phone during the flashing process. If the device is unable to connect to this network, it will create its own network.</p>"},{"location":"quick-start/firmware-options/#other-options","title":"Other Options","text":"<p><pre><code>UNLOCK_HIGHER_POWER \n</code></pre> Enables higher output power for devices that support it but will possibly melt themselves to give it to you. Do not enable it without first updating your cooling setup or verifying the device isn't overheating when running at your chosen power.</p> <p><pre><code>UART_INVERTED\n</code></pre> This only works with ESP32 based TXes. Almost all handsets require <code>UART_INVERTED</code> on, such as the FrSky QX7, TBS Tango 2, and RadioMaster TX16S. For T8SG V2 or Deviation firmware turn this setting off.</p>"},{"location":"quick-start/firmware-options/#receiver-only-options","title":"Receiver Only Options","text":"<p>Note</p> <p>Configuration of Receivers should match the configuration of the Transmitter Module for Sync/Binding to happen between devices.</p> <p>Most of the options listed above for the Transmitter Modules also apply to Receivers. The following are options specific to receivers that you might need.</p>"},{"location":"quick-start/firmware-options/#output-inverting","title":"Output Inverting","text":"<p><pre><code>RCVR_INVERT_TX\n</code></pre> If using an a flight controller that only has an RXI / SBUS (RX inverted) pad, turn on this option to invert the CRSF output from the receiver to be able to use that pad. This does not convert the output to SBUS, it is inverted CRSF, so CRSF should still be the receiver protocol selected in the flight controller software. ESP-based receivers only.</p> <p><pre><code>USE_R9MM_R9MINI_SBUS\n</code></pre> On the R9MM/R9Mini only, this changes the pin used to output CRSF from the receiver the two side pins (A9 and A10) to the pin labeled \"SBUS\" on the RX, which is inverted. Similar to <code>RCVR_INVERT_TX</code> this does not convert the output to SBUS protocol, so CRSF should still be the receiver protocol selected in the flight controller software.</p>"},{"location":"quick-start/firmware-options/#should-i-turn-these-offon","title":"Should I turn these off/on?","text":"<p><pre><code>NO_SYNC_ON_ARM\n</code></pre> Sync packets are one packet out of every 5 seconds when armed. Leave this off unless running telemetry ratio Off because you won't be able to reconnect after a failsafe while armed if this is on.</p> <p><pre><code>LOCK_ON_FIRST_CONNECTION\n</code></pre> Keeps the receiver on the last packet rate it was on if it failsafes, instead of trying every packet rate to reconnect. Should be left on.</p>"},{"location":"quick-start/firmware-options/#full-list","title":"Full List","text":"<p>For a complete list of User Defines, head over to the User Defines page.</p> <p>Done! It's time to flash the firmware on your transmitter</p>"},{"location":"quick-start/getting-started/","title":"Getting Started","text":"<p>Be informed!</p> <p>The ExpressLRS team works closely with manufacturers to review and test hardware.  It isn't until after testing that a specific ExpressLRS Configurator Target is added.</p> <p>Hardware not found in the ExpressLRS Configurator means the hardware did not pass requirements, or the manufacturer has chosen not to collaborate.  In this case, the manufacturer should be contacted for tech support.</p> <p>Generic targets are meant for pre-production or DIY hardware. Off-the-shelf Hardware should be using Hardware-specific targets.</p> <p>TL;DR: Check the Configurator before purchasing, and support manufacturers that support open source and the ExpressLRS project. </p>"},{"location":"quick-start/getting-started/#welcome-to-the-quick-start-guide","title":"Welcome to the Quick Start Guide","text":""},{"location":"quick-start/getting-started/#prerequisites","title":"Prerequisites","text":"<p>You should be comfortable navigating through your Radio Handset firmware (OpenTX/EdgeTX) and setting up models, as the guide on this website mainly covers setting up your radio for you to be able to use ExpressLRS.</p> <p>Likewise, you should also be comfortable with your Flight Controller firmware (Betaflight, INAV, etc), as the guide only covers setting up your ExpressLRS receiver to work with your flight controller firmware.</p>"},{"location":"quick-start/getting-started/#what-should-i-do-first","title":"What should I do first?","text":"<p>So you got your ExpressLRS Hardware, be it a new Radio Handset with an Internal ExpressLRS module, or an External ExpressLRS Module; and a set of ExpressLRS Receivers in a bundle or a Bind-and-Fly drone with the Receiver already wired up. Where do you start?</p> <p>Here's our recommendation:</p> Transmitter SideReceiver Side <ol> <li>Setup your Radio</li> <li>Check the TX Firmware Version</li> <li>Update the TX Module</li> </ol> <ol> <li>Wire your Receiver</li> <li>Configure your Flight Controller</li> <li>Check the Receiver Firmware Version</li> <li>Update the Receiver Firmware</li> </ol> <p>After both of these, you can then proceed with the following:</p> <ul> <li>Bind</li> <li>Do the Bench Test</li> <li>Other Radio and Flight Controller Configuration</li> <li>Fly!</li> </ul>"},{"location":"quick-start/getting-started/#how-to-use-or-navigate-through-the-guide","title":"How to Use or Navigate through the Guide","text":"<p> This User Guide is organized to cater to both new and seasoned users of the system. The navigation menu on the left is arranged to start with getting the ExpressLRS Configurator installed, an Explanation of the Options available, Steps concerning the Radio and TX module, FC and Receiver setup, a \"Before you Fly\" page and a Troubleshooting page.</p> <p></p> <p>You can also use the Footer Navigation shown below to go through these steps:</p> <p></p> <p>For a specific hardware flashing guide, the pages are either in the Updating Receivers or Updating Transmitters sections organized semi-alphabetically. </p> <p></p> <p></p> <p>You can also use the Search Bar for any topic or info you are after:</p> <p></p> <p>Longer pages have a Table of Contents menu found on the right-hand side of the page.</p> <p></p> <p></p> <p>Each Updating Method available for a device can be accessed by clicking on their respective Tab.</p> <p></p> <p>We hope these pages will help you get started with ExpressLRS and experience one of the best and most innovative RC links in the hobby.</p> <p>If you have other questions or concerns, or maybe you need further help that isn't covered by this Guide, head over to our Discord Channel!</p> <p>ExpressLRS Discord </p>"},{"location":"quick-start/getting-started/#where-are-the-video-guides","title":"Where are the Video Guides?","text":"<p>Due to the current fast pace of development, video guides often end up outdated faster than intended. Specific hardware guides sometimes use pre-release firmware targets or targets intended for different hardware which can confuse when specific firmware targets are added. </p> <p>We will be adding a separate videos section soon, but for now, until we find high-quality, relevant and applicable guides, you are on your own. Please take note of the publication date for these videos to make sure they are still relevant.</p>"},{"location":"quick-start/installing-configurator/","title":"Installing the Configurator","text":"<p>There are two ways to build and flash ExpressLRS:</p> <ol> <li>ExpressLRS Configurator (Recommended)</li> <li>Development toolchain setup (For advanced users) </li> </ol>"},{"location":"quick-start/installing-configurator/#configurator-setup","title":"Configurator Setup","text":"<p>Download the latest ExpressLRS Configurator application for your platform, following the instructions written by jurgelenas.</p> <p></p> ExpressLRS Configurator <p>The targets for each of the supported hardware can be seen on the individual device pages. Use the navigation menu on the left to get to the specific hardware page.</p> <p>On the next page, you will find the different Firmware Options you can set along with their explanations.</p>"},{"location":"quick-start/led-status/","title":"LED Status","text":""},{"location":"quick-start/led-status/#receivertransmitter-led-status","title":"Receiver/Transmitter LED Status","text":"<p>ExpressLRS uses the LED to communicate the status of the transmitter/receiver.</p> <p>The conditions and status LED are as follows:</p> Receiver Single Color LEDReceiver RGB LEDTransmitter RGB LED LED Indication Status Solid on Connected to a transmitter, or bootloader mode enabled Double blink then pause Binding mode enabled Slow blink 500ms on/off Waiting for connection from transmitter Triple blink then pause Connected to transmitter but mismatched model-match configuration Medium speed blink 100ms on/off Radio chip not detected Fast blinking 25ms on/off WiFi mode enabled LED Indication Status Rainbow fade effect Starting Up Green heartbeat Web update mode enabled Slow blink 500ms on/off Waiting for connection from transmitter Red flashing 100ms on/off Radio chip not detected Orange Double blink then pause Binding mode enabled Orange Triple blink then pause Connected to transmitter but mismatched model-match configuration Solid single color Connected to a transmitter, color indicates packet rate No Light Off or in Bootloader Mode LED Color 2.4GHz Packet rate (Hz) 915/868MHz Packet rate (Hz) Red F1000 200 Yellow F500 Yellow-Green D500 100 Full Green D250 100 Cyan 333 Full Light Blue 500 50 Blue 250 25 Blue-Purple 150 Purple 100 Full D50 Magenta 50 LED Indication Status Rainbow fade effect Starting Up Green heartbeat Web update mode enabled Blue heartbeat Bluetooth joystick enabled Red flashing 100ms on/off Radio chip not detected One Orange flash every second No handset connection Solid single color Connected to receiver, color indicates packet rate Fading single color No connection to receiver, color indicates packet rate LED Color 2.4GHz Packet rate (Hz) 915/868MHz Packet rate (Hz) Red F1000 200 Yellow F500 Yellow-Green D500 100 Full Green D250 100 Cyan 333 Full Light Blue 500 50 Blue 250 25 Blue-Purple 150 Purple 100 Full D50 Magenta 50"},{"location":"quick-start/pre-1stflight/","title":"Before First Flight","text":"<p>Prior to your first ExpressLRS flight, you may want to do a few tweaks to your setup to ensure a fun and trouble-free ExpressLRS experience!</p>"},{"location":"quick-start/pre-1stflight/#modes","title":"Modes","text":"<p>By default, ExpressLRS uses limited bits for AUX switches (1-bit for AUX1, and 3-4 bits for other AUX channels), which results in very coarse resolutions up to 8 or 16 positions to Betaflight/INAV on the AUX channels. In most cases, it is enough (especially on a multirotor), but if you need finer resolution, enabling the Wide Switch Mode option expands the resolution of AUX2-AUX8 up to 128 positions. For more information, read the switch modes page.</p> <p>One important thing to keep in mind is that Aux1 should be used as your Arming switch, with LOW (~1000us) as <code>disarmed</code> and HIGH (~2000us) as <code>armed</code>. AUX1 is the low-latency switch, sent with every packet, and only supports on/off (2-position) operation. ExpressLRS uses AUX1 to determine if your model is armed and this is the most reliable way to be able to tell your model to disarm. If your arm switch is in another aux channel, it may be several packets before that switch is transmitted, and there's no guarantee that the Receiver will receive that packet.</p> <p>WARNING</p> <p>Please make sure your ARM mode is on the AUX1 channel, and the armed state is set ~2000.</p> <p></p>"},{"location":"quick-start/pre-1stflight/#rssi-and-link-quality","title":"RSSI and Link Quality","text":"<p>To get RSSI and Link Quality displayed in the OSD, set both RSSI Channel and RSSI_ADC to Disabled. Both settings can be found in the Receiver Tab.</p> <p></p> <p></p> <p>On the OSD Tab, use the Link Quality and RSSI dBm value elements (not \"RSSI Value\"). INAV has put this in the <code>CRSF RX Statistics</code> section.</p> <p></p> <p>If you wish to enable the RSSI dBm warning, you'll have to change the alarm level using <code>set osd_rssi_dbm_alarm = -100</code> in CLI. A sensible value is 5-10 higher than the sensitivity shown in the ELRS.lua for the packet rate (e.g. 250Hz=-108, so -103 to -98 for the alarm).</p> <p>Likewise, if you want to change the LQ Alarm level, you can use the CLI command <code>set osd_link_quality_alarm = x</code> with <code>x</code> as your LQ Alarm level. <code>60</code> is a good value to start with.</p> <p>If you're using DJI Goggles V1 or V2 (unrooted/unmodded), you're required to use \"RSSI Value\" as the OSD element. Therefore you have to decide between LQ or RSSI, by selecting either AUX11 (LQ) or AUX12 (RSSI) as RSSI Channel on the Receiver tab (see images above).</p> <p>For digital FPV systems with \"Canvas Mode\" or full native OSD support via MSP DisplayPort (Walksnail Avatar, HDZero, DJI O3), you can treat the config as any analog FPV setup. Therefore, you do NOT have to set RSSI Channel (leave it at disabled). </p> <p>More information about signal metrics can be found in this great article on signal health.</p>"},{"location":"quick-start/pre-1stflight/#bench-test","title":"Bench Test","text":"ExpressLRS Bench Test <p>Shown above is a Bench Test to determine if you're getting a good signal from your radio. This aims to provide you with information on whether you should check your antennas (particularly the R9's Super 8) or if you have good hardware overall. </p> <ul> <li>Set your ExpressLRS module to the lowest power level using the Lua script. The packet rate doesn't matter much here.</li> <li>Put your radio 1m (3ft) from your receiver and power it up. Make sure the receiver and TX module antennas are oriented in the same way. (You might want to disconnect your VTX/Air Unit temporarily, put VTX in pit mode, or have a fan blowing on it).</li> <li>Using your OSD or the Telemetry Page of your radio, take note of the RSSI dBm or the 1RSS telemetry data.</li> </ul> <p>On the 900MHz hardware, a value of -20dBm or thereabouts is a good indication your hardware is in working order. On the 2.4GHz hardware, around -40dBm up to -25dBm should be good. If you're getting lower numbers than these (closer to 0 is higher and better), here are a few things you could check:</p> <ul> <li>The ExpressLRS module antenna could be loose. On some 3D printed module cases, the print may be too thick at the part where the pigtail's RP-SMA/SMA end would be attached; if so, tighten the nut on the RP-SMA/SMA to give the antenna some more space to get tightened up.</li> <li>The antenna pigtail may be damaged or not connected properly to the module's mainboard.</li> <li>On receivers using SMD antennas, expect lower values than those equipped with wire antennas. If the receiver with the SMD antenna has heat shrink, enclosed in a whoop canopy, surrounded with carbon parts or buried inside a plane/fixed wing, expect some more attenuation of the signal.</li> <li>The Super 8 antenna from FrSky, which most of the R9Ms came with is notorious for being faulty or would degrade from just a few weeks of use. Replace it or as a temporary fix, solder all around the junction where the coax shielding and the RP-SMA meet. Another failure point is the connection of the coax to the active elements itself. It would seem okay, but due to the twisting of the antenna, the connection could be severed.</li> </ul> <p></p> <p></p> Super8 Antenna's common points of failure <ul> <li>Check if there aren't any missing components in your receivers, like the RF filter (can be found near the antenna or UFL). Also check if the SMD antenna is not broken or damaged and it's soldered in properly.</li> </ul> <p></p> <ul> <li>Most DIY modules require moving the 0-ohm resistor on the E28 from the PCB antenna side towards the UFL side. A solder bridge will work just fine as well, but make sure it is on the correct pads.</li> <li>Swap out antennas on the receiver and/or the TX module; Most ExpressLRS receiver antennas use IPEX 1/UFL connectors and as long as the frequency tuning of the antenna is appropriate for the frequency you're in, it should work. You can also use old 2.4GHz WiFi Router antennas for your 2.4GHz modules, but avoid those that are dual-band. Also, make sure that the connector on the antenna is the appropriate one (RP-SMA on R9 modules; SMA on most off-the-shelf ExpressLRS modules)</li> </ul>"},{"location":"quick-start/pre-1stflight/#blackbox","title":"Blackbox","text":"<p>Blackbox is handy for evaluating the performance of the RF link for a flight. Set your BB to debug mode <code>RC_SMOOTHING_RATE</code>, which will capture the rate that Betaflight is receiving RC Packets from the RX.</p>"},{"location":"quick-start/pre-1stflight/#telemetry","title":"Telemetry","text":"<p>The RX transmits a subset of telemetry it receives from the flight controller. Disabling certain messages only works if the flight controller firmware does support it. For Betaflight this is possible with the telemetry_disabled_* CLI settings:</p> <pre><code># Disable Attitude telemetry item\nset telemetry_disabled_pitch = ON\nset telemetry_disabled_roll = ON\nset telemetry_disabled_heading = ON\n# Disable Battery telemetry item\nset telemetry_disabled_voltage = ON\nset telemetry_disabled_current = ON\nset telemetry_disabled_fuel = ON\n# Disable GPS telemetry item\nset telemetry_disabled_altitude = ON\nset telemetry_disabled_lat_long = ON\nset telemetry_disabled_ground_speed = ON\nset telemetry_disabled_heading = ON\n# Disable Flight Mode telemetry item (BF &gt;4.2.9)\nset telemetry_disabled_mode = ON \n</code></pre> <p>Since telemetry messages are sent with low priority it may take some time to transmit the data. The telemetry rate in the Lua settings script controls how often a telemetry message should be sent. So a ratio of 1:2 means that every second message is a telemetry message, so the telemetry data is transferred very fast. A ratio of 1:64 means that only one of 64 messages is a telemetry message and so the transfer happens much slower.</p> <p>The refresh rate also impacts the transfer speed. 50 Hz is slower compared to 200 Hz. So if you need a fast telemetry update rate choose a high refresh rate, and a ratio that favors telemetry messages e.g. 200 Hz and 1:16 usually works well. For detailed information on telemetry bandwidth at different rates and ratios, see this page on telemetry bandwidth.</p> <p>To finish the telemetry setup open the telemetry page on your transmitter and select \"Discover new sensors\" and wait for the list to fill. </p> <p>* Indication</p> <p>Notice, that there is a * sign for each row. This star indicates that this telemetry sensor was just updated.  </p> <p>[ ] Indication</p> <p>If you see a row that does not change, and the name of the row is in square brackets it means that this sensor was not updated for some time.</p> <p>The first values (including RSSI and link quality) should always be updated (flashing stars). If this does not happen multiple times per second the transmitter will issue a \"telemetry warning\". To prevent this warning use the setting TLM_REPORT_INTERVAL_MS.</p> <p>It should look like this (and if it does not there is something wrong with your setup):</p> <p></p> <p>The remaining values are updated at a different rate (depending on refresh rate and telemetry ratio). So if you use 50 Hz and 1:64 it will happen slowly, and the update takes multiple seconds for each sensor:</p> <p></p> <p>If you use 200Hz and 1:2 Tlm ratio the stars will not even blink because the update happens so fast:</p> <p></p>"},{"location":"quick-start/pre-1stflight/#msp","title":"MSP","text":"<p>To configure Betaflight from your transmitter it's possible to use the Betaflight lua scripts.  This requires the telemetry feature enabled for the RX+TX. If the telemetry page of OpenTX does not show regular updates for all sensors the LUA script will also not work.</p> <p>To get a responsive UI configure ExpressLRS for fast data transfer so make sure to use something like <code>200Hz/500Hz</code> with <code>1:2</code> Tlm and a serial baud rate of <code>400000</code>. Currently, MSP is limited to <code>50Hz</code> on <code>115200</code> Baud and does not work with a <code>500`` Hz</code> refresh rate. The initial VTX tables download does take some time - but is cached after that. </p> <p>If you get a \"retrying\" message while saving changes it means that the Lua script did not receive a response fast enough. But the change usually still goes through so try reloading the page to check if the change was saved. With the recommended settings this does not happen but with slower settings, it could happen.</p>"},{"location":"quick-start/pre-1stflight/#mavlink","title":"MAVLINK","text":"<p>See Airport.</p> <p>Done. Go Fly!</p>"},{"location":"quick-start/troubleshooting/","title":"Troubleshooting","text":""},{"location":"quick-start/troubleshooting/#general-troubleshooting","title":"General Troubleshooting","text":""},{"location":"quick-start/troubleshooting/#my-rx-and-tx-are-bound-but-fc-is-not-responding-to-inputs-and-i-can-only-see-10-telemetry-sensors","title":"My RX and TX are bound, but FC is not responding to inputs, and I can only see 10 Telemetry sensors","text":"My RX and TX are bound, but FC is not responding to inputs, and I can only see 10 Telemetry sensors <p>Check whether you have wired the receiver correctly and that RX and TX wires aren't swapped.</p> <p>Also, check that you have the correct SerialRX configuration. You might want to revisit the FC Preparation page for the Flight Controller setup.</p> <p>Also, make sure that the UART where you connected the receiver doesn't have inversion and it's in full duplex mode. You can also try a different UART.</p>"},{"location":"quick-start/troubleshooting/#my-rx-and-tx-are-bound-and-im-getting-more-than-10-telemetry-sensors-on-my-radio-but-im-not-getting-stick-inputs","title":"My RX and TX are bound, and I'm getting more than 10 Telemetry sensors on my Radio, but I'm not getting stick inputs","text":"My RX and TX are bound, and I'm getting more than 10 Telemetry sensors on my Radio, but I'm not getting stick inputs <p>This is due to a model mismatch between the receiver and the TX module. The LED on the receiver will have 3 short blinks and then a 1s pause indicating the mismatch.</p> <p>To \"fix\" this, you might want to turn On Model Matching. Please see Model Matching for more notes.</p> <p>Another thing to check is whether you have enabled RCVR_INVERT_TX option for your receiver firmware. This option is intended for FCs that don't have any other UARTs available (e.g. AIOs) other than an SBUS pad. See this section for more details: Output Inverting.</p> <p>For the R9mm/mini receivers, make sure you didn't enable USE_R9MM_R9MINI_SBUS in your firmware option. See Output Inverting for what this option do.</p>"},{"location":"quick-start/troubleshooting/#my-rx-and-tx-are-bound-and-im-getting-stick-inputs-but-i-can-only-get-10-telemetry-sensors","title":"My RX and TX are bound, and I'm getting stick inputs, but I can only get 10 Telemetry sensors","text":"My RX and TX are bound, and I'm getting stick inputs, but I can only get 10 Telemetry sensors <p>Check if you have Telemetry Feature enabled in your FC Configuration.</p> <p>Also, verify the RX pad from the receiver is connected properly to a TX pad in the FC in the same UART as the TX wire from the receiver.</p> <p>Also, make sure you have deleted and rediscovered the sensors. It's good to increase the TLM Ratio so the acquisition of the sensors will be faster.</p> <p>This could also mean you'll have to update your FC Firmware to a more recent version that supports at least the CRSFv2 protocol.</p>"},{"location":"quick-start/troubleshooting/#i-think-my-receiver-and-transmitter-are-bound-as-the-led-on-the-receiver-is-solid-but-i-do-not-have-stick-inputs-or-rssi-on-the-radio","title":"I think my Receiver and Transmitter are bound, as the LED on the Receiver is solid. But I do not have stick inputs or RSSI on the radio.","text":"I think my Receiver and Transmitter are bound, as the LED on the Receiver is solid. But I do not have stick inputs or RSSI on the radio. <p>You are not bound. Your Receiver is probably in bootloader mode.</p> <ul> <li> <p>Make sure you have unbridged the boot pads if you flashed it via passthrough.</p> </li> <li> <p>Turn off your Radio and if the LED is still solid, but boot pads aren't bridged, the UART where the receiver is on is putting it into bootloader mode unintentionally. This is primarily caused by pull-down resistor on the RX pad to aid with SBUS line inversion. To verify it is the case with the UART, disconnect the RX and TX wires from the FC UART, and it should start blinking slowly then after the set interval (20s - 30s by default), it will blink fast indicating it's on WiFi Mode. To \"fix\" the issue, you have two options:</p> <ul> <li>Move the receiver into another free UART.</li> <li>If there's no other UART, wire up a resistor with a value between 300 Ohm to 1k Ohm between a 3.3v pad and the FC's RX pad (where the TX from the receiver connects to).</li> </ul> </li> <li> <p>If, however, despite unsoldering the TX and RX wires, the LED is still solid, you probably have a soft-bricked receiver due to a failed WiFi flash as a result of not letting the receiver reboot normally. Follow the unbricking procedure to recover the receiver.</p> </li> </ul>"},{"location":"quick-start/troubleshooting/#my-osd-is-showing-lq-00-and-rssi-dbm-at-130-dbm-but-i-have-stick-inputs-and-more-than-10-telemetry-sensors","title":"My OSD is showing LQ 0:0 and RSSI dBm at -130 dBm, but I have stick inputs and more than 10 Telemetry sensors","text":"My OSD is showing LQ 0:0 and RSSI dBm at -130 dBm, but I have stick inputs and more than 10 Telemetry sensors <p>Check whether you have RSSI Channel set to either Aux11 or Aux12. If you do, set it to disabled.</p> <p>If it's still not fixed with that, check if you have RSSI ADC enabled. If so, set it to disabled.</p>"},{"location":"quick-start/troubleshooting/#my-osd-is-showing-lq-31-sometimes-lq-39","title":"My OSD is showing LQ 3:1 sometimes LQ 3:9","text":"My OSD is showing LQ 3:1 sometimes LQ 3:9 <p>Move your LQ OSD element around as it could be being obstructed by another element or it's too far to the right of the preview.</p>"},{"location":"quick-start/troubleshooting/#i-am-getting-telemetry-lostrecovered-and-is-getting-annoying","title":"I am getting Telemetry Lost/Recovered and is getting annoying","text":"I am getting Telemetry Lost/Recovered and is getting annoying <p>There's a handful of reasons why this is occurring, and if you have newer handset/radio, it shouldn't happen at all unless you're flying very far away using a receiver without an amplifier for its Telemetry signal (e.g. the EP receivers).</p> <ul> <li>You're on an X9D(+) or a QX7 with subpar inverter chips. Check this page on how to remedy it.</li> <li>You're on an early version of the Happymodel Slim Pro. Check this FB post for the fix from manufacturer.</li> <li>You're using a 2018 ACCST R9M, while also using a Radio with 400k or higher Baud rate. You will either have to lower the Baud rate on your radio to 115200 (QX7) or do the Resistor mod on the module as described here.</li> <li>Your module is getting loose inside its enclosure, most common on the first batches of the Happymodel ES24TX (white 3D-Printed enclosure; although the black one is only marginally better having 4 screw points instead of 2). You either have to print your enclosure (search Thingiverse for \"expresslrs\") or find a way to tighten or snug the enclosure with the module board.</li> <li>Check the S.Port pin and connection in your module and module bay, and make sure they have a solid physical connection. On the DIY modules, particularly the full size module, the round hole/via for the Molex connector's flat pin might not be getting a good connection due to cold solder joint, or insufficient solder.</li> </ul>"},{"location":"quick-start/troubleshooting/#i-need-to-plug-my-fc-a-secondthird-time-before-i-get-a-bind-the-led-on-the-receiver-is-dim-when-i-power-it-up","title":"I need to plug my FC a second/third time before I get a bind. The LED on the receiver is dim when I power it up","text":"I need to plug my FC a second/third time before I get a bind. The LED on the receiver is dim when I power it up <p>Update to the latest firmware as soon as you can. A batch of HM receivers have reached the market with Voltage regulators (marked SDG) that were insufficient and weren't able to handle the higher current draw during boot up. To learn more about this issue and the fix, please check out this PR.</p>"},{"location":"quick-start/troubleshooting/#my-blackbox-log-has-stepping-on-the-rc-trace","title":"My Blackbox Log has stepping on the RC trace","text":"My Blackbox Log has stepping on the RC trace <p>Make sure you have disabled ADC Filter in your Radio Hardware settings.</p>"},{"location":"quick-start/troubleshooting/#troubleshooting-the-lua-script","title":"Troubleshooting the Lua Script","text":""},{"location":"quick-start/troubleshooting/#expresslrs-lua-script-is-stuck-at-loading","title":"ExpressLRS Lua Script is stuck at <code>Loading...</code>","text":"ExpressLRS Lua Script is stuck at <code>Loading...</code> <p>Go back to the Radio Setup Guide and make sure your radio is prepped up for ExpressLRS.</p> <p>Also, make sure your module has been flashed with v3.0 firmware. V3 Lua for V3.0-flashed modules, V2 Lua for v2.x-flashed modules (including some modules fresh from the factory).</p> <p>For newly-acquired ExpressLRS modules, flashing via USB is the recommended update method.</p>"},{"location":"quick-start/troubleshooting/#betaflight-lua-is-stuck-at-initializing","title":"Betaflight Lua is stuck at <code>Initializing</code>","text":"Betaflight Lua is stuck at <code>Initializing</code> <p>Increase the TLM Ratio via the ExpressLRS Lua script to values like 1:4 or even 1:2 and retry the Betaflight Lua script.</p> <p>Also, you have to make sure you're getting more than ten (10) Telemetry sensors prior to launching the script.</p> <p>See MSP Section for more info.</p>"},{"location":"quick-start/troubleshooting/#i-cannot-change-the-switch-mode","title":"I cannot change the Switch Mode!","text":"I cannot change the Switch Mode! <p>Changing switch modes requires that the TX module and Receiver aren't connected to each other (no C in the top right corner of the Lua Script). Power off the receiver first, change the Switch Mode from the Lua script, then power up the receiver. The Switch Mode should then apply.</p>"},{"location":"quick-start/troubleshooting/#i-cannot-change-my-packet-rate-to-f1000","title":"I cannot change my Packet Rate to F1000!","text":"I cannot change my Packet Rate to F1000! <p>F1000 requires higher than 400K baud rates. First update your baud rate setting either in the Model Setup menu or in the System Menu -&gt; Hardware, reboot your radio to ensure that the baud rate setting got applied and then change the Packet Rate.</p> <p>Do note that not every handset is capable of higher than 400K baud rates. See the Radio Setup Guide for the details.</p>"},{"location":"quick-start/troubleshooting/#i-cannot-change-to-full-resolution-rates","title":"I cannot change to Full Resolution Rates!","text":"I cannot change to Full Resolution Rates! <p>As Full Resolution Rates call for an entirely different Switch Modes, you need to first disconnect the Receiver and the TX module from each other, like how you would change Switch Modes. Power down the receiver, change the Packet Rate to the Full Resolution modes, select your Switch Mode scheme and then power up the receiver or the aircraft.</p>"},{"location":"quick-start/troubleshooting/#vtx-admin-is-not-working-but-i-can-change-vtx-channels-via-osd-menu","title":"VTX Admin is not working but I can change VTX channels via OSD Menu.","text":"VTX Admin is not working but I can change VTX channels via OSD Menu. <p>As VTX Admin depends on MSP which then depends on Telemetry, ensure that you have Telemetry enabled on your FC Configuration and that you are getting more than 10 Telemetry Sensors on your Radio (Model Setup -&gt; Telemetry page; Delete and Discover New sensors to refresh the sensor list.) Also, make sure Telem Ratio is not Off.</p>"},{"location":"quick-start/troubleshooting/#there-is-no-c-on-the-top-right-corner-and-im-not-getting-telemetry-in-my-radio","title":"There is no C on the top right corner, and I'm not getting Telemetry in my radio!","text":"There is no C on the top right corner, and I'm not getting Telemetry in my radio! <p>Make sure Telem Ratio is not set to <code>Off</code>. Set it to <code>Std</code>, or to any other value other than <code>Off</code>.</p>"},{"location":"quick-start/troubleshooting/#on-v1x-i-can-choose-2w-on-the-lua-but-i-cannot-do-that-anymore-what-gives","title":"On v1.x, I can choose 2W on the Lua, but I cannot do that anymore. What gives?","text":"On v1.x, I can choose 2W on the Lua, but I cannot do that anymore. What gives? <p>This means your module cannot go that high or that low. The power levels you can select on the new Lua script are based on the power levels your module supports. This also applies to other options like <code>Enable Backpack WiFi</code> or <code>BLE Joystick</code>. If your module doesn't support any of these features, it won't show up on the Lua Script.</p>"},{"location":"quick-start/troubleshooting/#flashingupdating","title":"Flashing/Updating","text":"<p>Attention</p> <p>Individual hardware Flashing and Updating guide can be found by using the menu on the left sidebar. You can also use the Search Bar on the top of the page to get to your device's Flashing Guide faster.</p>"},{"location":"quick-start/troubleshooting/#invalid-serial-rx-configuration-detected","title":"Invalid serial RX configuration detected","text":"Invalid serial RX configuration detected <p>This is often caused by incorrect Serial RX protocol (should be CRSF), or <code>serialrx_inverted = on</code> (should be off) or <code>serialrx_halfduplex=on</code> (should be off). The Passthrough Init section of the log will show you which setting should be corrected. See the FC Preparation Guide for the correct settings.</p>"},{"location":"quick-start/troubleshooting/#rx-serial-not-found","title":"RX Serial not found !!","text":"RX Serial not found !! <p>Make sure your Serial RX on the Ports Tab of your FC Firmware configurator is set to the correct UART. See the FC Preparation Guide for the correct settings.</p>"},{"location":"quick-start/troubleshooting/#no-cli-available","title":"No CLI Available","text":"No CLI Available <p>This message can be seen on the ExpressLRS Configurator Log while using the Passthrough method and can be caused by a busy Com Port. Make sure any other Configurator Apps were closed and unplug-replug your FC to USB. You might also want to use a different USB port or cable.</p> <p>This could also mean that the FC cannot be detected by the script. This could also due to the FC being in DFU mode, which for passthrough flashing, is not needed.</p> <p>Some apps are running in the background that could cause this. One of which is Cura Slicer. If there are such apps, close them first before attempting another Build and Flash. </p> <p>Unplug-replug the FC's USB before another attempt.</p>"},{"location":"quick-start/troubleshooting/#10-retries-but-no-success","title":"10 Retries but no Success","text":"10 Retries but no Success <p>This can be due to several things:</p> <ul> <li>Incorrect bootloader is flashed or it's not flashed properly. This mainly happens on the R9 receivers. Go checkout Bootloader Flashing Guide.</li> <li>Incorrect wiring. Make sure that RX in the Receiver is connected to a TX pad in the FC and the TX in the Receiver is connected to an RX pad in the FC. Also, make sure the receiver is getting enough voltage (min 4v5) from the FC or voltage supply. Wiring guide is here</li> <li>Receiver is OFF. Check whether the LED on the receiver is lit, indicating it's powered and in a working state.</li> <li>The UART has hardware inversion. Make sure that the UART you've connected the receiver to is not an SBUS UART that usually has hardware inversion (most common among F4 Flight Controllers). There are Flight controllers that require you to bridge a pair of pads to enable or disable the Hardware inversion of an RX pad. You can simply try a different UART.</li> <li>The LED on the receiver is SOLID, while the radio is off, which could only mean that the RX pad in the FC is being pulled LOW, putting the ESP-based receiver (EPs, ES900RX, etc.) into Bootloader mode unintentionally, which will hinder normal passthrough operations. Feel free to try a different UART.</li> </ul>"},{"location":"quick-start/troubleshooting/#failed-to-connect-to-esp8266-timed-out-waiting-for-packet-header","title":"Failed to connect to ESP8266: Timed out waiting for packet header.","text":"Failed to connect to ESP8266: Timed out waiting for packet header. <p>This can be due to several things:</p> <ul> <li>Receiver is wired incorrectly. Please check if the RX and TX wires aren't swapped and connected RX to RX and TX to TX on the FC. Revisit the Receiver Wiring Guide here.</li> <li>The receiver's \"boot\" pads aren't bridged (or the button wasn't pressed and held during power up) for passthrough flashing. This is required for Passthrough flashing if the receiver is fresh from the packet and has a firmware version before 1.0.0-RC6.</li> <li>The receiver UART is putting it in Bootloader mode and is interfering with passthrough flashing. Move it into another UART.</li> </ul> <p>You can also attempt the update via UART using an FTDI Adapter (or a USB to UART Bridge).</p> <p>Please see the Flashing guide for your particular receiver using the Sidebar on the Left.</p>"},{"location":"quick-start/troubleshooting/#i-updated-via-wifi-but-now-the-receiver-wont-work-and-has-solid-led","title":"I updated via WiFi but now the receiver won't work and has SOLID LED","text":"I updated via WiFi but now the receiver won't work and has SOLID LED <p>This is a sign that the WiFi flashing didn't go through properly due to a premature power cycle. To fix this, you will have to bridge the boot pads (see here) and reflash using the Passthrough method (Telemetry option on Betaflight/iNav set to <code>OFF</code>. This is important!) or using an FTDI adapter.</p> <p>This video shows the steps albeit using a VSCode development environment but the ExpressLRS Configurator will work just fine. </p> <p></p> <p>To ensure that the WiFi flashing is finished properly, wait until the LED on the receiver blinks slowly (indicating it's looking for a TX bind) before pulling off power.</p> <p>If you have other questions or concerns, or maybe you need further help that is not covered by this Guide, head over to our Discord Channel or Facebook Group!</p> <p>ExpressLRS Discord  ExpressLRS Facebook </p>"},{"location":"quick-start/unbricking/","title":"Unbricking","text":""},{"location":"quick-start/unbricking/#help-i-bricked-my-rx","title":"HELP I BRICKED MY RX!","text":"<p>Take a breath, calm down, relax.</p> <p>ALL the ESP-based Receivers have a factory-installed bootloader onboard which CANNOT be damaged or tampered with. You can completely screw up the upgrade and always get it back using this default bootloader.</p> <p>So technically, your receiver is not bricked unless you have damaged the hardware itself.</p> <p>But for argument's sake, let's use the word \"bricked\" or \"soft-bricked\" for a receiver that is not in working order and is not behaving as expected.</p> <p>Follow the steps below very closely to recover your \"bricked\" Receiver.</p> <ol> <li> <p>Make sure your Receiver only powers up with a LiPo Connected.</p> <ul> <li>If your receiver powers up with just USB connected, move the 5v wire of the receiver into a 5v pad that only powers up with LiPo connected.<ul> <li>Take a multi-meter in DC Voltmeter mode.</li> <li>Plug in USB into your Flight Controller. Disconnect LiPo.</li> <li>Probe/check each of the 5v pads in the Flight Controller.</li> <li>The 5v pads that read 0v on the multi-meter are pads that will only power up when a LiPo is connected.</li> <li>Solder your Receiver 5v into this pad.</li> </ul> </li> <li>If in the above steps, you're not able to find a 5v pad suitable for this procedure, follow the following:<ul> <li>Disconnect the 5v wire of the Receiver from the 5v pad on the Flight Controller.</li> <li>Solder a different length of wire into any of the 5v pads on the Flight Controller.</li> <li>Expose a suitable length of conductor of this wire that you can connect with the Receiver's 5v wire LATER.</li> </ul> </li> </ul> </li> <li> <p>If you've connected a LiPo from the previous step, disconnect it. Also, unplug the Flight Controller from your computer.</p> </li> <li> <p>Prepare the receiver for bootloader mode.</p> <ul> <li>If your Receiver have boot pads, bridge them together with solder.</li> <li>If your Receiver has a button, use an alligator clip to keep the button pressed.</li> <li>If your Receiver only has one Boot pad, connect it to a Ground pad.</li> </ul> <p> Example Receiver with Boot Pad </p> <p> Example Receiver with Boot Button </p> <p>Notice</p> <p>Even if your Receiver LED is only lighting up solid, DO NOT skip this step to ensure the receiver is indeed in its Bootloader State.</p> </li> <li> <p>Connect to Betaflight or INAV Configurator and make sure you've properly configured your FC for ExpressLRS use. Set <code>Telemetry</code> to disabled for now.</p> </li> <li> <p>Save &amp; Reboot. Close Betaflight Configurator. Also, close any other App that's potentially using COM Ports.</p> <p>Cura Slicer</p> <p>We found Cura Slicer and possibly others like it would keep a COM port open or busy preventing successful flashing/recovery via Passthrough.</p> </li> <li> <p>Unplug and replug the USB cable. This will ensure the Flight Controller has a fresh connection to the computer and that the COM port is not busy or in use.</p> </li> <li> <p>On the ExpressLRS Configurator, select the Firmware Version you're trying to recover. Select your Device Category and Device Target as well, along with your usual Firmware Options.</p> </li> <li> <p>Set the Flashing Method to <code>Betaflight Passthrough</code>.</p> <p> </p> </li> <li> <p>Click the <code>Flash</code> button. Wait for the Line PASSTHROUGH DONE to appear in the Build Log and power up the receiver. </p> <p> </p> Not Seeing PASSTHROUGH DONE? (click/tap to expand) <p>You've probably skipped some of the steps above or you've misconfigured your flight controller. Go back and make sure to follow EVERY step.</p> <ul> <li>Plug in LiPo or twist the 5v Wires together to power up the receiver (see Step 1). The receiver LED should be Solid.</li> </ul> <p> </p> </li> <li> <p>Wait for the process to finish, hopefully with the Success Message. Otherwise, repeat the procedure above or try a different approach (like reflashing via FTDI/UART Adapter).</p> </li> <li> <p>You can now power down the flight controller, and disconnect LiPo and/or USB.</p> </li> <li> <p>Remove the boot pads bridging or connection to Ground, or, if your Receiver has a button, remove the alligator clip used to press the button.</p> </li> <li> <p>Re-power up the receiver to verify it is back in its normal working state.</p> <p> </p> </li> </ol>"},{"location":"quick-start/unbricking/#wall-of-text-heres-a-video","title":"Wall of Text? Here's a video!","text":""},{"location":"quick-start/unbricking/#what-about-the-tx","title":"What about the TX?","text":"<p>Most ESP-based ExpressLRS TX Modules either have the via UART Flashing Procedure or the via ETX Passthrough Flashing method available to them. Use any of these other methods to recover your ESP-based TX Module. </p> <p>For STM-based ExpressLRS TX Modules, there's via STLink Flashing method.</p> <p>ExpressLRS TX Modules are much harder to screw up during updates, more so if you're following the official Flashing Guides on this website.</p>"},{"location":"quick-start/webui/","title":"The Web UI","text":""},{"location":"quick-start/webui/#the-expresslrs-web-ui","title":"The ExpressLRS Web UI","text":"<p>The ExpressLRS Web UI is an essential part of the ExpressLRS ecosystem. In earlier versions of the project, its main use is for updating the ExpressLRS firmware and logging or debugging (on select hardware).</p> <p>ExpressLRS 3.0 has further expanded the capabilities of the ExpressLRS Web UI. It is now capable of changing Firmware Parameters, including the Binding Phrase, Regulatory Domain  (for the 900MHz devices), UART Inversion and more.</p>"},{"location":"quick-start/webui/#the-banner","title":"The Banner","text":"The ExpressLRS Web UI Banner"},{"location":"quick-start/webui/#the-options-tab","title":"The Options Tab","text":"<p>This tab allows users to change firmware options without reflashing their devices. It also allows the import and export of the Configuration from one device to another, useful for setting up backup equipment.</p> <p>Options common to both Receivers and TX Modules:</p> <ul> <li> <p>Binding Phrase: Type in your Binding Phrase here if you want to update it from either the factory setting or from an earlier flashed setting.</p> <p>It's Blank!</p> <p>This field doesn't store the plain text Binding Phrase. If you see it blank like shown, do not worry. The next field, UID, has the information.</p> </li> <li> <p>UID: As you type in your Binding Phrase in the field above, this read-only field will update with the UID translation. This is what actually gets saved in your device.</p> </li> <li> <p>Regulatory Domain: This only applies to the 900MHz system. This field allows users to change the Regulatory Domain for their device.</p> <p>What about 2.4GHz?</p> <p>The EU_CE Regulatory Domain setting is a Compile-time option and the LBT code needs to be baked in for it to work properly.</p> </li> <li> <p>WiFi \"Auto On\" Interval (in seconds): This field allows you to change how soon WiFi automatically activates when the device is powered up and it's not getting a valid CRSF signal (for TX Modules) or sync packets (for Receivers).</p> </li> </ul> Receiver OptionsTX Module Options <p> ExpressLRS Receiver Options Tab </p> <ul> <li> <p>UART Baud: The baud rate to which the receiver will send and receive signals to or from a Flight Controller or other serially connected device. Under normal circumstances, this setting should be left at the default 420000 baud.</p> <ul> <li>Exception: If you are running KISS/Kiss Ultra firmware set the receiver's UART baud rate to 400000, as KISS uses this baud rate for CRSF.</li> </ul> </li> <li> <p>Invert TX Pin: This setting should also be left disabled or unchecked under normal circumstances. It inverts the CRSF signal coming out of the TX pin of the receiver.</p> <ul> <li>Receivers that will be connected to an SBUS pad on Flight Controllers without extra uninverted RX pads should enable this setting. Additionally the command <code>set serialrx_inverted = on</code> will be needed in the Flight Controller configuration.</li> </ul> </li> <li> <p>Lock on First Connection: This setting speeds up the reconnection of a Receiver and TX Module if you don't ever change your RF Mode/Packet Rate.</p> </li> </ul> <p> ExpressLRS TX Module Options Tab </p> <ul> <li> <p>TLM Report Interval: This setting controls how often Telemetry packets are sent back to the radio. 240LU is the default setting and is already fast for EdgeTX or OpenTX.</p> </li> <li> <p>UART Inverted: Keep this enabled or checked if you're using your TX module on an OpenTX or EdgeTX Radio. The S.Port pins in External Module bays are inverted bidirectional pins.</p> </li> <li> <p>Fan Runtime (in seconds): This setting controls how long the fan on the TX Module will keep spinning even after the current Transmit Power of the module is already Lower than the Fan Threshold Lua Script setting.</p> </li> </ul>"},{"location":"quick-start/webui/#the-wifi-tab","title":"The WiFi Tab","text":"ExpressLRS WebUI WiFi Tab"},{"location":"quick-start/webui/#the-model-tab","title":"The Model Tab","text":"ExpressLRS Receiver Model Tab ExpressLRS PWM Receiver Output Settings"},{"location":"quick-start/webui/#the-buttons-tab","title":"The Buttons Tab","text":"<p>This section is currently only available for the RadioMaster Ranger module.</p> <p></p> ExpressLRS TX Module Buttons Tab"},{"location":"quick-start/webui/#the-update-tab","title":"The Update Tab","text":"Receiver Update TabTX Module Update Tab <p> ExpressLRS Receiver Update Tab </p> <p> ExpressLRS TX Module Update Tab </p>"},{"location":"quick-start/webui/#how-to-get-to-the-web-ui","title":"How to get to the Web UI","text":"ReceiversTX Modules <ol> <li> <p>Put your Receiver into WiFi Mode.</p> Auto WiFi Onvia Lua Scriptvia Button <ol> <li> <p>Make sure your Radio with your TX Module is Off.</p> </li> <li> <p>Power-cycle your receiver (turn it Off then turn it back On). The Receiver LED should be blinking slowly as shown below. </p> <p> </p> Receiver LED not Blinking! (click/tap to expand) <p>If it has a Solid LED light, it may be in bootloader mode if you've only just wired it up. Rewire your receiver into a different uart. If you have attempted to update it before, then it could be soft-bricked. Follow the Unbricking procedure to get it back into normal working condition.</p> </li> <li> <p>Wait for about 60 seconds or until the Receiver LED blinks rapidly indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> <ol> <li> <p>Make sure the Receiver and TX Module are in sync and bound. RSSI indicators on your Radio Home screen should be visible and the Receiver LED should be Solid as shown.</p> <p> </p> </li> <li> <p>Press the SYS Key on your Radio.</p> <ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, go back to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> <li>there should be a C in the top right corner of the Lua Script indicating TX Module and Receiver are Connected.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will briefly show up. Your Receiver is now in WiFi mode as indicated by the rapidly blinking LED.</p> <p> </p> <p>Note</p> <p>It is normal for the receiver will disconnect from the TX Module once it is in WiFi Mode. You will hear your radio announce \"Telemetry Lost\" if you have the sound pack on your Radio SD Card.</p> </li> </ol> <ol> <li> <ul> <li>Locate the boot button on your receiver:</li> </ul> <p>If your receiver is equipped with a boot button, you can use this to put the receiver into WiFi mode. </p> <p> Example Receiver with Boot Button </p> </li> <li> <p>Press and hold the boot button on the receiver for 5 seconds. The LED should begin blinking rapidly indicating the receiver is in WiFi mode.</p> <p> </p> </li> </ol> </li> <li> <p>Scan for the <code>ExpressLRS RX</code> Access Point.      </p> <ul> <li>If your Receiver is previously flashed with your Home WiFi SSID and Password, and it can connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> <p></p> </li> <li> <p>Load the Web UI on your browser using these addresses:</p> <ul> <li> <p>http://10.0.0.1/ - If you have connected to the <code>ExpressLRS RX</code> Access Point</p> <p>Note</p> <p>This IP address is also often used by some routers. Computers with an ethernet connection to their routers will find that this page doesn't load the ExpressLRS Web UI and instead loads their router or ISP modem configuration dashboards.</p> <p>We recommend disconnecting from the network first or trying a different device instead, e.g. smartphone or tablet.</p> <p>Note</p> <p>On some devices a network login prompt might pop up. Clicking this will often show an incomplete version of the webui that won't behave as expected. Please navigate to http://10.0.0.1/ manually in your browser instead.</p> </li> <li> <p>http://elrs_rx.local - If you have previously set your Home WiFi SSID and Password into your Receiver when you flashed it.</p> <p>Note</p> <p>If your browser cannot resolve this address, chances are MDNS is not set up and working on your computer or network.</p> Use the IP Address instead! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code> which will list all the devices in the Network.</li> <li>Try each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in to your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> </ul> </li> </ol> <ol> <li> <p>Put your module into wifi mode.</p> via ExpressLRS Lua ScriptExternal Module detached from Radio <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, go back to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>If the Script stopped and is showing a Syntax Error, do not worry. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware or both. It could also be due to the fact your TX module is on an earlier firmware version and you're using a more recent Lua Script.</li> </ul> </li> </ol> <ol> <li>With your TX module disconnected from your Radio module bay, power it up either via an external power source (2S) or by plugging in a USB cable into its USB Port.</li> <li>Let it be for 60s and the RGB LED will turn into a Green Breathing LED pattern indicating it is now in WiFi Mode.<ul> <li>TX Modules with an OLED Screen will also show a message regarding WiFi mode.</li> </ul> </li> </ol> </li> <li> <p>Scan for the <code>ExpressLRS TX</code> Access Point.      </p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it can connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> <p></p> </li> <li> <p>Load the Web UI on your browser using these addresses:</p> <ul> <li> <p>http://10.0.0.1/ - If you have connected to the <code>ExpressLRS TX</code> Access Point</p> <p>Note</p> <p>This IP address is also often used by some routers. Computers with an ethernet connection to their routers will find that this page doesn't load the ExpressLRS Web UI and instead loads their router or ISP modem configuration dashboards.</p> <p>We recommend disconnecting from the network first or trying a different device instead, e.g. smartphone or tablet.</p> <p>Note</p> <p>On some devices a network login prompt might pop up. Clicking this will often show an incomplete version of the webui that won't behave as expected. Please navigate to http://10.0.0.1/ manually in your browser instead.</p> </li> <li> <p>http://elrs_tx.local - If you have previously set your Home WiFi SSID and Password into your TX Module when you flashed it.</p> <p>Note</p> <p>If your browser cannot resolve this address, chances are MDNS is not set up and working on your computer or network.</p> Use the IP Address instead! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code> which will list all the devices in the Network.</li> <li>Try each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in to your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> </ul> </li> </ol>"},{"location":"quick-start/receivers/axisflying-thor/","title":"Axisflying Thor","text":"<p>Advisory</p> <p>If this is the first time you're flashing/updating your receiver or you're updating it from a previous 2.x firmware via WiFi, first ensure that it has version 2.5.2. Once it has the 2.5.2 flashed, you can then update it to 3.x via WiFi.</p> <p>If you're flashing it straight to 3.x and you're getting \"Not Enough Space\" popup during WiFi flashing, flash the receiver to 2.5.2 first, and then flash it to 3.x.</p> <p>If receiver firmware is already 3.x, and you're still getting the \"Not Enough Space\" error when flashing via WiFi, make sure you are selecting the correct method in the Configurator(via WiFi, in this case). See the steps outlined below.</p> <p>You can update straight to 3.x via Passthrough or via UART.</p> <p>The Repartitioner is for TX only.</p>"},{"location":"quick-start/receivers/axisflying-thor/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. A solid LED light on these receivers even with the TX module off is a sign they are in Bootloader Mode. If this is the case, rewire the receiver to a different UART.</p> <p></p> Axis Thor <p>The image above shows the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p>"},{"location":"quick-start/receivers/axisflying-thor/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/axisflying-thor/#updating-your-receiver-firmware","title":"Updating your Receiver Firmware","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Axisflying 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>AXIS Thor 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>Locate the Boot button on your receiver, press and hold it.</p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer. Release/de-press the Boot button.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Axisflying 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>AXIS Thor 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Axisflying 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>AXIS Thor 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Axisflying 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>AXIS Thor 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Axisflying 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>AXIS Thor 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/betafpv-superd/","title":"BetaFPV SuperD 2.4GHz","text":""},{"location":"quick-start/receivers/betafpv-superd/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. As this receiver uses an RGB LED as indicator, it will appear as if the receiver is OFF when in Bootloader mode. The firmware that drives the RGB LED is inactive when the ESP Chip is in Bootloader mode, thus the RGB LED will not function when in this state.</p> <p></p> BetaFPV SuperD Diversity Receiver, ESP-based <p>The image above shows the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p>"},{"location":"quick-start/receivers/betafpv-superd/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have connected the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/betafpv-superd/#updating-your-receiver-firmware","title":"Updating your Receiver Firmware","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>BETAFPV SuperD 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>Locate the Boot button on your receiver, press and hold it.</p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer. Release/de-press the Boot button.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>BETAFPV SuperD 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>BETAFPV SuperD 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>BETAFPV SuperD 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>BETAFPV SuperD 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/betafpv-superd900/","title":"BetaFPV SuperD 900MHz","text":""},{"location":"quick-start/receivers/betafpv-superd900/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. As this receiver uses an RGB LED as indicator, it will appear as if the receiver is OFF when in Bootloader mode. The firmware that drives the RGB LED is inactive when the ESP Chip is in Bootloader mode, thus the RGB LED will not function when in this state.</p> <p></p> BetaFPV SuperD Diversity Receiver, ESP-based <p>The image above shows the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p>"},{"location":"quick-start/receivers/betafpv-superd900/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have connected the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/betafpv-superd900/#updating-your-receiver-firmware","title":"Updating your Receiver Firmware","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 900 MHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>BETAFPV SuperD 900MHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>Locate the Boot button on your receiver, press and hold it.</p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer. Release/de-press the Boot button.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 900 MHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>BETAFPV SuperD 900MHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 900 MHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>BETAFPV SuperD 900MHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 900 MHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>BETAFPV SuperD 900MHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 900 MHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>BETAFPV SuperD 900MHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/betafpv2400/","title":"BetaFPV Lite/Nano/AIO 2.4GHz","text":"<p>Advisory</p> <p>If this is the first time you're flashing/updating your receiver or you're updating it from a previous 2.x firmware via WiFi, first ensure that it has version 2.5.2. Once it has the 2.5.2 flashed, you can then update it to 3.x via WiFi.</p> <p>If you're flashing it straight to 3.x and you're getting \"Not Enough Space\" popup during WiFi flashing, flash the receiver to 2.5.2 first, and then flash it to 3.x.</p> <p>If receiver firmware is already 3.x, and you're still getting the \"Not Enough Space\" error when flashing via WiFi, make sure you are selecting the correct method in the Configurator(via WiFi, in this case). See the steps outlined below.</p> <p>You can update straight to 3.x via Passthrough or via UART.</p> <p>The Repartitioner is for TX only.</p>"},{"location":"quick-start/receivers/betafpv2400/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. A solid LED light on these receivers even with the TX module off is a sign they are in Bootloader Mode. If this is the case, rewire the receiver to a different UART.</p> <p></p> BetaFPV Nano <p></p> BetaFPV Lite (Flat &amp; Tower) <p>The images above show the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p>"},{"location":"quick-start/receivers/betafpv2400/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/betafpv2400/#updating-your-receiver-firmware","title":"Updating your Receiver Firmware","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>BETAFPV 2.4GHz Nano RX</code> (Nano)</li> <li><code>BETAFPV 2.4GHz Lite RX</code> (Tower &amp; Flat)</li> <li><code>BETAFPV 2.4GHz AIO RX</code> (AIOs with UART-based Receivers)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>If your Receiver has Boot Pads instead of a Boot Button, solder the Boot Pads together or connect it to Ground. If your Receiver has a Boot Button, locate it then press &amp; hold it. </p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> <li>Once the LED on the Receiver is lit up Solid, release/de-press the button on the receiver if it has one.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>BETAFPV 2.4GHz Nano RX</code> (Nano)</li> <li><code>BETAFPV 2.4GHz Lite RX</code> (Tower &amp; Flat)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>If your receiver has a boot pad instead of a boot button, make sure to disconnect it from ground or remove the solder bridge you made on step 2.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>BETAFPV 2.4GHz Nano RX</code> (Nano)</li> <li><code>BETAFPV 2.4GHz Lite RX</code> (Tower &amp; Flat)</li> <li><code>BETAFPV 2.4GHz AIO RX</code> (AIOs with UART-based Receivers)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>BETAFPV 2.4GHz Nano RX</code> (Nano)</li> <li><code>BETAFPV 2.4GHz Lite RX</code> (Tower &amp; Flat)</li> <li><code>BETAFPV 2.4GHz AIO RX</code> (AIOs with UART-based Receivers)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>BETAFPV 2.4GHz Nano RX</code> (Nano)</li> <li><code>BETAFPV 2.4GHz Lite RX</code> (Tower &amp; Flat)</li> <li><code>BETAFPV 2.4GHz AIO RX</code> (AIOs with UART-based Receivers)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/betafpv900/","title":"BetaFPV Nano 900MHz","text":"<p>Advisory</p> <p>If this is the first time you're flashing/updating your receiver or you're updating it from a previous 2.x firmware via WiFi, first ensure that it has version 2.5.2. Once it has the 2.5.2 flashed, you can then update it to 3.x via WiFi.</p> <p>If you're flashing it straight to 3.x and you're getting \"Not Enough Space\" popup during WiFi flashing, flash the receiver to 2.5.2 first, and then flash it to 3.x.</p> <p>If receiver firmware is already 3.x, and you're still getting the \"Not Enough Space\" error when flashing via WiFi, make sure you are selecting the correct method in the Configurator(via WiFi, in this case). See the steps outlined below.</p> <p>You can update straight to 3.x via Passthrough or via UART.</p> <p>The Repartitioner is for TX only.</p>"},{"location":"quick-start/receivers/betafpv900/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. A solid LED light on these receivers even with the TX module off is a sign they are in Bootloader Mode. If this is the case, rewire the receiver to a different UART.</p> <p></p> BetaFPV Nano <p>The image above shows the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p>"},{"location":"quick-start/receivers/betafpv900/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/betafpv900/#updating-your-receiver-firmware","title":"Updating your Receiver Firmware","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>BETAFPV 900MHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>Locate the Boot button on your receiver, press and hold it.</p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer. Release/de-press the Boot button.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>BETAFPV 900MHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>BETAFPV 900MHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>BETAFPV 900MHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>BETAFPV 900MHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/configuring-fc/","title":"Configuring FC","text":""},{"location":"quick-start/receivers/configuring-fc/#serial-rx-setup","title":"Serial RX Setup","text":"<p>Once you've wired up your Receiver to your Flight Controller, you need to setup the UART for Serial RX. This is usually done on the Ports Tab of your Flight Controller Configurator.</p> <p>In the example below, the Receiver is wired to UART1 (TX1 and RX1 pads), and so the Serial RX column should be enabled on UART1 in the Ports Tab.</p> <p>NOTE</p> <p>This is ONLY an example. Set your Ports according to how your peripherals, including the Receiver, are wired up.</p> <p></p> Example Betaflight Serial RX Configuration <p></p> Example INAV Serial RX Configuration"},{"location":"quick-start/receivers/configuring-fc/#serial-receiver-protocol","title":"Serial Receiver Protocol","text":"<p>UART-based ExpressLRS Receivers use the CRSF Serial Protocol to communicate with a Flight Controller.</p> <p>Follow the steps below to set up your Serial Receiver Protocol:</p> <ol> <li> <p>Navigate to Receiver Tab on your Flight Controller Configurator.</p> </li> <li> <p>Set <code>Receiver Mode</code> or <code>Receiver Type</code> to Serial.</p> </li> <li> <p>Set <code>Serial Receiver Provider</code> to CRSF.</p> </li> <li> <p>Set <code>Telemetry</code> to Enabled.</p> <ul> <li>On INAV, <code>Telemetry</code> can be found under the Configuration Tab.</li> </ul> </li> <li> <p>Make sure you set <code>RSSI Channel</code> to Disabled if you are using an Analog FPV System, or any FPV System with MSP DisplayPort or \"Canvas Mode\" support.</p> <ul> <li>Also make sure <code>RSSI ADC</code> is Disabled.</li> </ul> </li> </ol> <p>Note</p> <p>The Location or Labels of these settings can change from version to version of your Flight Controller Configurator. Please consult your Flight Controller Configurator User Guides.</p> <p></p> <p></p> <p></p>"},{"location":"quick-start/receivers/configuring-fc/#software-inversion-and-duplex-modes","title":"Software Inversion and Duplex Modes","text":"<p>The CRSF Protocol requires a full UART pair, uninverted and in full-duplex mode. To check for these settings, use the CLI Tab of your Flight Controller Configurator and execute <code>get serialrx</code>.</p> <ul> <li><code>serialrx_inverted</code> should be OFF; configure it with <code>set serialrx_inverted = off</code>.</li> <li><code>serialrx_halfduplex</code> should be OFF; configure it with <code>set serialrx_halfduplex = off</code>.</li> <li>Don't forget to use <code>save</code> once you're done setting these up.</li> </ul>"},{"location":"quick-start/receivers/configuring-fc/#rc-link-preset-betaflight-only","title":"RC Link Preset (BETAFLIGHT ONLY)","text":"<p>For flight controllers based on Betaflight, there are 'RC Link Presets' available that configure feedforward smoothing and associated link settings based on your packet rate and usage case.</p> <p>Warning</p> <p>Using no link preset, or using the incorrect one for your packet rate, can result in unwanted noise and jitter in feedforward, which can affect setpoint tracking and thus flight characteristics.</p> <p>To install the correct 'RC Link Preset', follow these steps in Betaflight Configurator:</p> <ol> <li>Select the Preset tab</li> <li>In the preset tab, select Save Backup and save a backup to a safe location before applying any preset.</li> <li> <p>Search for 'ExpressLRS' and select the Link Preset that matches your Packet Rate. If no direct match is available, choose the closest preset below your packet rate.</p> <p></p> </li> <li> <p>Read through the options by selecting the dropdown list. NOTE: These are all optional, if none of them apply to your circumstances, it is OK to leave everything unticked.</p> </li> <li> <p>Select 'Pick' to stage the preset:</p> <p></p> </li> <li> <p>Select Save and Reboot to apply the preset:</p> <p></p> </li> </ol> <p>Important</p> <p>Close your Flight Controller Configurator once you've set it up for ExpressLRS. Keeping it open could prevent the next steps from completing properly, particularly flashing via Passthrough. You must also unplug the FC from USB before proceeding to the next steps to refresh the connection.</p> <p>With your Flight Controller configured, you can now proceed to the next step: Checking RX Firmware Version.</p>"},{"location":"quick-start/receivers/diy2400/","title":"DIY 2400RX","text":""},{"location":"quick-start/receivers/diy2400/#flashing-via-passthrough","title":"Flashing via Passthrough","text":"<ul> <li>Targets: <ul> <li><code>DIY_2400_RX_ESP8285_SX1280_via_BetaflightPassthrough</code></li> <li><code>DIY_2400_RX_STM32_CCG_Nano_v0_5_via_BetaflightPassthrough</code></li> </ul> </li> </ul>"},{"location":"quick-start/receivers/diy2400/#flashing-via-stlink","title":"Flashing via STLink","text":"<ul> <li>Target: <code>DIY_2400_RX_STM32_CCG_Nano_v0_5_via_STLINK</code></li> </ul>"},{"location":"quick-start/receivers/diy2400/#flashing-via-wifi","title":"Flashing via WiFi","text":"<ul> <li>Target: <code>DIY_2400_RX_ESP8285_SX1280_via_WIFI</code></li> </ul>"},{"location":"quick-start/receivers/diy2400/#flashing-via-ftdi","title":"Flashing via FTDI","text":"<ul> <li>Target: <code>DIY_2400_RX_ESP8285_SX1280_via_UART</code></li> </ul> <p>Please consult the Hardware Repository for your particular receiver.</p>"},{"location":"quick-start/receivers/diy900/","title":"DIY 900RX","text":""},{"location":"quick-start/receivers/diy900/#flashing-via-passthrough","title":"Flashing via Passthrough","text":"<ul> <li>Target: <code>DIY_900_RX_ESP8285_SX127x_via_BetaflightPassthrough</code></li> </ul>"},{"location":"quick-start/receivers/diy900/#flashing-via-ftdi","title":"Flashing via FTDI","text":"<ul> <li>Target: <code>DIY_900_RX_ESP8285_SX127x_via_UART</code></li> </ul> <p>Please consult the Hardware Repository for your particular receiver.</p>"},{"location":"quick-start/receivers/firmware-version/","title":"Checking FW Version","text":""},{"location":"quick-start/receivers/firmware-version/#why-do-you-have-to-know-the-firmware-version","title":"Why do you have to know the Firmware Version?","text":"<p>Knowing the ExpressLRS Firmware Version that's currently in your devices will determine whether there is a need to update to a newer version or whether you can simply get your devices bound together without updating. For newcomers in the hobby, or for those just starting with ExpressLRS, it can be a bit daunting to flash a new device. </p> <p>It is still recommended that you update your gear to the latest firmware version to ensure you have all the bugfixes and latest features.</p>"},{"location":"quick-start/receivers/firmware-version/#receiver-firmware-version","title":"Receiver Firmware Version","text":"via Web UIvia Lua Script <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the previous step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in sync with a TX Module, power Off the Radio &amp; TX Module first then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, go back to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> </li> <li> <p>Scan for the <code>ExpressLRS RX</code> Access Point.      </p> <ul> <li>If your Receiver is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also, try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Load the Web UI on your browser using these addresses:</p> <ul> <li> <p>http://10.0.0.1/ -If you have connected to the <code>ExpressLRS RX</code> Access Point</p> <p>Note</p> <p>This IP address is also often used by some routers. Computers with an ethernet connection to their routers will find that this page doesn't load the ExpressLRS Web UI and instead loads their router or ISP modem configuration dashboards.</p> <p>We recommend disconnecting from the network first or trying a different device instead, e.g. smartphone or tablet.</p> </li> <li> <p>http://elrs_rx.local - If you have previously set your Home WiFi SSID and Password into your Receiver when you flashed it.</p> <p>Note</p> <p>If your browser cannot resolve this address, chances are MDNS is not set up and working on your computer or network.</p> Use the IP Address instead! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code> which will list all the devices in the Network.</li> <li>Try each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in to your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> </ul> </li> <li> <p>The Banner of the Web UI should tell you the firmware version flashed into your Receiver.</p> <p> The ExpressLRS Web UI Banner  </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li> <p>Press the SYS Key on your Radio.</p> <ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter Key to activate the Script.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, go back to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll to the bottom of the page and select <code>Other Devices</code>.</p> </li> <li> <p>Press the Enter Key to open the Folder.</p> </li> <li> <p>Select the Receiver Device and Press Enter to query its parameters.</p> </li> <li> <p>The image below shows the Receiver Firmware Version info.</p> <ul> <li>Shows the Happymodel EP Receiver has 3.2.1 Firmware Version with the Git Hash 8dbbdb.</li> </ul> <p> Receiver Version Line on Colored Screen Radio </p> </li> </ol> <p>Once you have determined the firmware version that's currently flashed into your Receiver, you can now decide to whether keep using it as is or update to the latest version.</p> <p>Versioning Scheme</p> <p>The ExpressLRS Firmware Versioning scheme is based on the semantic versioning scheme.</p> <p>A Version is defined or formatted as \"Major.Minor.Patch\"</p> <pre><code>- major = major new feature and/or incompatible changes\n- minor = minor features or enhancements and/or new targets\n- patch = bug-fixes\n</code></pre> <p>That first number in the Version string should match between a TX Module and a Receiver. Examples:</p> <ul> <li>a Receiver with version string of 3.1.2 will sync and work with a TX Module with firmware version 3.0.1</li> <li>a Receiver with version string of 3.2.0 will NOT sync or bind with a TX Module with firmware version 2.4.0</li> </ul> <p>For the latest ExpressLRS firmware version, check the Releases page in Git Hub</p>"},{"location":"quick-start/receivers/firmware-version/#i-know-the-version-what-now","title":"I Know the Version. What Now?","text":"I have an old versionI have a recent one <p>See the next page for the typical updating procedure or expand the <code>Updating Receivers</code> section of the Menu on the left shown below.</p> <p> </p> <p>You can also use the Search Bar on top of this page to search for the specific Updating/Flashing Guide for your Receiver.</p> <p>See the Binding Procedure to sync your Receiver with your TX Module.</p>"},{"location":"quick-start/receivers/flash2400/","title":"NamimnoRC Flash","text":"<p>Advisory</p> <p>If this is the first time you're flashing/updating your receiver or you're updating it from a previous 2.x firmware via WiFi, first ensure that it has version 2.5.2. Once it has the 2.5.2 flashed, you can then update it to 3.x via WiFi.</p> <p>If you're flashing it straight to 3.x and you're getting \"Not Enough Space\" popup during WiFi flashing, flash the receiver to 2.5.2 first, and then flash it to 3.x.</p> <p>If receiver firmware is already 3.x, and you're still getting the \"Not Enough Space\" error when flashing via WiFi, make sure you are selecting the correct method in the Configurator(via WiFi, in this case). See the steps outlined below.</p> <p>You can update straight to 3.x via Passthrough or via UART.</p> <p>The Repartitioner is for TX only.</p>"},{"location":"quick-start/receivers/flash2400/#check-your-target","title":"Check your Target","text":"<p>There are more <code>ESP8285</code> based RXes in the market due to massive shortage of <code>STM32</code> Chips. These support WiFi updating, and can be easily distinguished with a few tricks. The simplest way to tell is if on the rear of the RX (the side without the U.fl/SMD antenna) there is a large white component with the label RainSun (pictured below). If this is not there, you have an STM32 based target, if it is you have an <code>_ESP_</code> target, and can update using Wifi!</p> <p></p> RainSun Antenna <p>Note</p> <p>New versions of the receiver also have the PCB Wifi Antenna, and doesn't have the RainSun SMD Antenna mentioned above. These will use the same ESP-based Target, not the STM-based target.</p>"},{"location":"quick-start/receivers/flash2400/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. A solid LED light on these receivers even with the TX Module off is a sign they are in Bootloader Mode. If this is the case, rewire the receiver to a different UART.</p> <p></p> Flash v1; ESP-based <p></p> Flash V2 SMD; ESP-based <p></p> Flash V2 T-Dipole; ESP-based <p></p> Flash V2 Diversity; ESP-based <p>The images above show the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p>"},{"location":"quick-start/receivers/flash2400/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/flash2400/#updating-your-receiver-firmware-esp-based","title":"Updating your Receiver Firmware (ESP-based)","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>NamimnoRC Flash ESP 2.4GHz RX</code></li> <li><code>NamimnoRC Flash 100mW Diversity 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>If your Receiver has Boot Pads instead of a Boot Button, solder the Boot Pads together or connect it to Ground. If your Receiver has a Boot Button, locate it then press &amp; hold it. </p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> <li>Once the LED on the Receiver is lit up Solid, release/de-press the button on the receiver if it has one.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>NamimnoRC Flash ESP 2.4GHz RX</code></li> <li><code>NamimnoRC Flash 100mW Diversity 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>If your receiver has a boot pad instead of a boot button, make sure to disconnect it from ground or remove the solder bridge you made on step 2.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>NamimnoRC Flash ESP 2.4GHz RX</code></li> <li><code>NamimnoRC Flash 100mW Diversity 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>NamimnoRC Flash ESP 2.4GHz RX</code></li> <li><code>NamimnoRC Flash 100mW Diversity 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>NamimnoRC Flash ESP 2.4GHz RX</code></li> <li><code>NamimnoRC Flash 100mW Diversity 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/flash2400/#updating-your-receiver-firmware-stm-based","title":"Updating your Receiver Firmware (STM-based)","text":"<p>Attention</p> <p>ExpressLRS 3.5.x will be the last version to support STM32-based hardware. This includes the Happymodel PP, ES915 Tx and Rx, early NamimnoRC Flash and Voyager, FrSky R9, SIYI and ImmersionRC hardware.</p> <p>The STM32 platform's limited compute resources and feature gaps (WiFi, Bluetooth, Backpacks) made for an inferior version of ExpressLRS that necessitated disproportionate maintenance burden for the Dev Team.</p> via Passthroughvia STLink <p> </p> <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>If your receiver powers up with just USB connected to your flight controller, unplug it. Press and Hold the boot button on the receiver (not the FC) and then plug in the USB. Release the button right after the LED turn solid.</li> <li>If your receiver only powers up with a LiPo connected to your flight controller, unplug it. Then unplug-replug the USB cable to your flight controller. Do not replug LiPo yet.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>NamimnoRC Flash STM 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the <code>Retry...</code> lines to appear in the Build Log. Connect the LiPo to power up the Receiver if it only powers up with a LiPo connected.</p> <ul> <li><code>Retry...</code> lines will not show up if your receiver is already in bootloader mode and gets powered up by USB.</li> </ul> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Disconnect the Receiver from your Flight Controller.</p> </li> <li> <p>Wire up the Receiver into an STLink V2 dongle. Find the CLK, DIO, 3v3 and Gnd pads and wire them to the corresponding pins of the dongle.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>NamimnoRC Flash STM 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>STLink</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> <li> <p>Rewire your receiver to your Flight Controller.</p> </li> </ol>"},{"location":"quick-start/receivers/foxeer2400/","title":"Foxeer LNA & Lite 2.4GHz","text":"<p>Advisory</p> <p>If this is the first time you're flashing/updating your receiver or you're updating it from a previous 2.x firmware via WiFi, first ensure that it has version 2.5.2. Once it has the 2.5.2 flashed, you can then update it to 3.x via WiFi.</p> <p>If you're flashing it straight to 3.x and you're getting \"Not Enough Space\" popup during WiFi flashing, flash the receiver to 2.5.2 first, and then flash it to 3.x.</p> <p>If receiver firmware is already 3.x, and you're still getting the \"Not Enough Space\" error when flashing via WiFi, make sure you are selecting the correct method in the Configurator(via WiFi, in this case). See the steps outlined below.</p> <p>You can update straight to 3.x via Passthrough or via UART.</p> <p>The Repartitioner is for TX only.</p>"},{"location":"quick-start/receivers/foxeer2400/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. A solid LED light on these receivers even with the TX module off is a sign they are in Bootloader Mode. If this is the case, rewire the receiver to a different UART.</p> <p></p> Foxeer LNA and Lite ELRS 2.4GHz <p>The image above shows the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p>"},{"location":"quick-start/receivers/foxeer2400/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/foxeer2400/#updating-your-receiver-firmware","title":"Updating your Receiver Firmware","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Foxeer 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Foxeer Lite 2.4GHz RX</code></li> <li><code>Foxeer 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>If your Receiver has Boot Pads instead of a Boot Button, solder the Boot Pads together or connect it to Ground. If your Receiver has a Boot Button, locate it then press &amp; hold it. </p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> <li>Once the LED on the Receiver is lit up Solid, release/de-press the button on the receiver if it has one.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Foxeer 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Foxeer Lite 2.4GHz RX</code></li> <li><code>Foxeer 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>If your receiver has a boot pad instead of a boot button, make sure to disconnect it from ground or remove the solder bridge you made on step 2.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Foxeer 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Foxeer Lite 2.4GHz RX</code></li> <li><code>Foxeer 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Foxeer 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Foxeer Lite 2.4GHz RX</code></li> <li><code>Foxeer 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Foxeer 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Foxeer Lite 2.4GHz RX</code></li> <li><code>Foxeer 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/geprc2400/","title":"GEPRC Nano & Dual 2.4GHz","text":"<p>Advisory</p> <p>If this is the first time you're flashing/updating your receiver or you're updating it from a previous 2.x firmware via WiFi, first ensure that it has version 2.5.2. Once it has the 2.5.2 flashed, you can then update it to 3.x via WiFi.</p> <p>If you're flashing it straight to 3.x and you're getting \"Not Enough Space\" popup during WiFi flashing, flash the receiver to 2.5.2 first, and then flash it to 3.x.</p> <p>If receiver firmware is already 3.x, and you're still getting the \"Not Enough Space\" error when flashing via WiFi, make sure you are selecting the correct method in the Configurator(via WiFi, in this case). See the steps outlined below.</p> <p>You can update straight to 3.x via Passthrough or via UART.</p> <p>The Repartitioner is for TX only.</p>"},{"location":"quick-start/receivers/geprc2400/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. A solid LED light on these receivers even with the TX module off is a sign they are in Bootloader Mode. If this is the case, rewire the receiver to a different UART.</p> <p></p> GEPRC Nano <p></p> GEPRC Nano SE <p>The images above show the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p>"},{"location":"quick-start/receivers/geprc2400/#identify-your-receiver-and-flash-the-correct-target","title":"Identify your receiver and flash the correct target","text":"<p>Important Step!</p> <p>You MUST flash the correct firmware target to your receiver in order for it to work properly. Look closely at your receiver and make sure you are select the correct firmware target. Flashing the wrong target will result in extremely poor range or failure to connect.</p> <p> How to identify the correct GEPRC 2.4GHz receiver target </p>"},{"location":"quick-start/receivers/geprc2400/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/geprc2400/#updating-your-receiver-firmware","title":"Updating your Receiver Firmware","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>GEPRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>GEPRC Nano(SE) 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>If your Receiver has Boot Pads instead of a Boot Button, solder the Boot Pads together or connect it to Ground. If your Receiver has a Boot Button, locate it then press &amp; hold it. </p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> <li>Once the LED on the Receiver is lit up Solid, release/de-press the button on the receiver if it has one.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>GEPRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>GEPRC Nano(SE) 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>If your receiver has a boot pad instead of a boot button, make sure to disconnect it from ground or remove the solder bridge you made on step 2.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>GEPRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>GEPRC Nano(SE) 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>GEPRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>GEPRC Nano(SE) 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>GEPRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>GEPRC Nano(SE) 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/geprc900/","title":"GEPRC Nano & Dual 900MHz","text":"<p>Advisory</p> <p>If this is the first time you're flashing/updating your receiver or you're updating it from a previous 2.x firmware via WiFi, first ensure that it has version 2.5.2. Once it has the 2.5.2 flashed, you can then update it to 3.x via WiFi.</p> <p>If you're flashing it straight to 3.x and you're getting \"Not Enough Space\" popup during WiFi flashing, flash the receiver to 2.5.2 first, and then flash it to 3.x.</p> <p>If receiver firmware is already 3.x, and you're still getting the \"Not Enough Space\" error when flashing via WiFi, make sure you are selecting the correct method in the Configurator(via WiFi, in this case). See the steps outlined below.</p> <p>You can update straight to 3.x via Passthrough or via UART.</p> <p>The Repartitioner is for TX only.</p>"},{"location":"quick-start/receivers/geprc900/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. A solid LED light on these receivers even with the TX module off is a sign they are in Bootloader Mode. If this is the case, rewire the receiver to a different UART.</p> <p></p> GEPRC Nano 900MHz <p></p> GEPRC Nano PA500 900MHz and True Diversity 900MHz <p>The image above shows the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p>"},{"location":"quick-start/receivers/geprc900/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/geprc900/#updating-your-receiver-firmware","title":"Updating your Receiver Firmware","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>GEPRC 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>GEPRC Nano 900MHz RX</code></li> <li><code>GEPRC Nano 900MHz PA500 RX</code></li> <li><code>GEPRC True Diversity 900MHz RX</code> </li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>Locate the Boot button on your receiver, press and hold it.</p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer. Release/de-press the Boot button.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>GEPRC 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>GEPRC Nano 900MHz RX</code></li> <li><code>GEPRC Nano 900MHz PA500 RX</code></li> <li><code>GEPRC True Diversity 900MHz RX</code> </li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>GEPRC 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>GEPRC Nano 900MHz RX</code></li> <li><code>GEPRC Nano 900MHz PA500 RX</code></li> <li><code>GEPRC True Diversity 900MHz RX</code> </li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>GEPRC 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>GEPRC Nano 900MHz RX</code></li> <li><code>GEPRC Nano 900MHz PA500 RX</code></li> <li><code>GEPRC True Diversity 900MHz RX</code> </li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>GEPRC 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>GEPRC Nano 900MHz RX</code></li> <li><code>GEPRC Nano 900MHz PA500 RX</code></li> <li><code>GEPRC True Diversity 900MHz RX</code> </li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/ghost2400/","title":"IMRC Ghost","text":"<p>Attention</p> <p>ExpressLRS 3.5.x will be the last version to support STM32-based hardware. This includes the Happymodel PP, ES915 Tx and Rx, early NamimnoRC Flash and Voyager, FrSky R9, SIYI and ImmersionRC hardware.</p> <p>The STM32 platform's limited compute resources and feature gaps (WiFi, Bluetooth, Backpacks) made for an inferior version of ExpressLRS that necessitated disproportionate maintenance burden for the Dev Team.</p>"},{"location":"quick-start/receivers/ghost2400/#flashingupdating-your-receiver-firmware","title":"Flashing/Updating your Receiver Firmware","text":"via STLinkvia Passthrough <p>Note</p> <p>The only way to flash the Ghost Atto/Zepto to ExpressLRS for the first time is by using STLink. This is a one-way process. There is no returning to the factory firmware after flashing.</p> <p> </p> <ol> <li> <p>Disconnect the Receiver from your Flight Controller.</p> </li> <li> <p>Wire up the Receiver into an STLink V2 dongle. Find the CLK, DIO, 3v3 and Gnd pads and wire them to the corresponding pins of the dongle.</p> <p> IMRC Ghost </p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>ImmersionRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Ghost Atto 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>STLink</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> <li> <p>Rewire your receiver to your Flight Controller.</p> </li> </ol> <p>Note</p> <p>This method can only be used to UPDATE the ExpressLRS firmware on a Ghost Atto/Zepto.</p> <p> </p> <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured. Also make sure [bootloaders] are already flashed to your R9 receiver when applicable.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>If your receiver powers up with just USB connected to your flight controller, unplug it. Press and Hold the boot button on the receiver (not the FC) and then plug in the USB. Release the button right after the LED turn solid.</li> <li>If your receiver only powers up with a LiPo connected to your flight controller, unplug it. Then unplug-replug the USB cable to your flight controller. Do not replug LiPo yet.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>ImmersionRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Ghost Atto 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the <code>Retry...</code> lines to appear in the Build Log. Connect the LiPo to power up the Receiver if it only powers up with a LiPo connected.</p> <ul> <li><code>Retry...</code> lines will not show up if your receiver is already in bootloader mode and gets powered up by USB.</li> </ul> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/hglrc-hermes2400/","title":"HGLRC Hermes 2.4GHz","text":"<p>Advisory</p> <p>If this is the first time you're flashing/updating your receiver or you're updating it from a previous 2.x firmware via WiFi, first ensure that it has version 2.5.2. Once it has the 2.5.2 flashed, you can then update it to 3.x via WiFi.</p> <p>If you're flashing it straight to 3.x and you're getting \"Not Enough Space\" popup during WiFi flashing, flash the receiver to 2.5.2 first, and then flash it to 3.x.</p> <p>If receiver firmware is already 3.x, and you're still getting the \"Not Enough Space\" error when flashing via WiFi, make sure you are selecting the correct method in the Configurator(via WiFi, in this case). See the steps outlined below.</p> <p>You can update straight to 3.x via Passthrough or via UART.</p> <p>The Repartitioner is for TX only.</p>"},{"location":"quick-start/receivers/hglrc-hermes2400/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. A solid LED light on these receivers even with the TX module off is a sign they are in Bootloader Mode. If this is the case, rewire the receiver to a different UART.</p> <p></p> HGLRC Hermes 2.4GHz <p>The image above shows the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p>"},{"location":"quick-start/receivers/hglrc-hermes2400/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/hglrc-hermes2400/#updating-your-receiver-firmware","title":"Updating your Receiver Firmware","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>HGLRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HGLRC Hermes 2.4GHz RX</code></li> <li><code>HGLRC Gemini 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>If your Receiver has Boot Pads instead of a Boot Button, solder the Boot Pads together or connect it to Ground. If your Receiver has a Boot Button, locate it then press &amp; hold it. </p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> <li>Once the LED on the Receiver is lit up Solid, release/de-press the button on the receiver if it has one.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>HGLRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HGLRC Hermes 2.4GHz RX</code></li> <li><code>HGLRC Gemini 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>If your receiver has a boot pad instead of a boot button, make sure to disconnect it from ground or remove the solder bridge you made on step 2.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>HGLRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HGLRC Hermes 2.4GHz RX</code></li> <li><code>HGLRC Gemini 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>HGLRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HGLRC Hermes 2.4GHz RX</code></li> <li><code>HGLRC Gemini 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>HGLRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HGLRC Hermes 2.4GHz RX</code></li> <li><code>HGLRC Gemini 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/hglrc-hermes900/","title":"HGLRC Hermes 900MHz","text":"<p>Advisory</p> <p>If this is the first time you're flashing/updating your receiver or you're updating it from a previous 2.x firmware via WiFi, first ensure that it has version 2.5.2. Once it has the 2.5.2 flashed, you can then update it to 3.x via WiFi.</p> <p>If you're flashing it straight to 3.x and you're getting \"Not Enough Space\" popup during WiFi flashing, flash the receiver to 2.5.2 first, and then flash it to 3.x.</p> <p>If receiver firmware is already 3.x, and you're still getting the \"Not Enough Space\" error when flashing via WiFi, make sure you are selecting the correct method in the Configurator(via WiFi, in this case). See the steps outlined below.</p> <p>You can update straight to 3.x via Passthrough or via UART.</p> <p>The Repartitioner is for TX only.</p>"},{"location":"quick-start/receivers/hglrc-hermes900/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. A solid LED light on these receivers even with the TX module off is a sign they are in Bootloader Mode. If this is the case, rewire the receiver to a different UART.</p> <p></p> HGLRC Hermes 900MHz <p>The image above shows the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p>"},{"location":"quick-start/receivers/hglrc-hermes900/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/hglrc-hermes900/#updating-your-receiver-firmware","title":"Updating your Receiver Firmware","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>HGLRC 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HGLRC Hermes 900MHz RX</code></li> <li><code>HGLRC Gemini 900M RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>Locate the Boot button on your receiver, press and hold it.</p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer. Release/de-press the Boot button.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>HGLRC 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HGLRC Hermes 900MHz RX</code></li> <li><code>HGLRC Gemini 900M RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>HGLRC 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HGLRC Hermes 900MHz RX</code></li> <li><code>HGLRC Gemini 900M RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>HGLRC 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HGLRC Hermes 900MHz RX</code></li> <li><code>HGLRC Gemini 900M RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>HGLRC 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HGLRC Hermes 900MHz RX</code></li> <li><code>HGLRC Gemini 900M RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/hmep2400/","title":"Happymodel EP","text":"<p>Advisory</p> <p>If this is the first time you're flashing/updating your receiver or you're updating it from a previous 2.x firmware via WiFi, first ensure that it has version 2.5.2. Once it has the 2.5.2 flashed, you can then update it to 3.x via WiFi.</p> <p>If you're flashing it straight to 3.x and you're getting \"Not Enough Space\" popup during WiFi flashing, flash the receiver to 2.5.2 first, and then flash it to 3.x.</p> <p>If receiver firmware is already 3.x, and you're still getting the \"Not Enough Space\" error when flashing via WiFi, make sure you are selecting the correct method in the Configurator(via WiFi, in this case). See the steps outlined below.</p> <p>You can update straight to 3.x via Passthrough or via UART.</p> <p>The Repartitioner is for TX only.</p>"},{"location":"quick-start/receivers/hmep2400/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. A solid LED light on these receivers even with the TX module off is a sign they are in Bootloader Mode. If this is the case, rewire the receiver to a different UART.</p> <p></p> <p>The image above shows the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p>"},{"location":"quick-start/receivers/hmep2400/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/hmep2400/#updating-your-receiver-firmware","title":"Updating your Receiver Firmware","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel EP1/EP2 2.4GHz RX</code> (EP1 &amp; EP2) </li> <li><code>HappyModel EP Dual 2.4GHz RX</code> (EP Dual)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>If your Receiver has Boot Pads instead of a Boot Button, solder the Boot Pads together or connect it to Ground. If your Receiver has a Boot Button, locate it then press &amp; hold it. </p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> <li>Once the LED on the Receiver is lit up Solid, release/de-press the button on the receiver if it has one.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel EP1/EP2 2.4GHz RX</code> (EP1 &amp; EP2) </li> <li><code>HappyModel EP Dual 2.4GHz RX</code> (EP Dual)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>If your receiver has a boot pad instead of a boot button, make sure to disconnect it from ground or remove the solder bridge you made on step 2.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel EP1/EP2 2.4GHz RX</code> (EP1 &amp; EP2) </li> <li><code>HappyModel EP Dual 2.4GHz RX</code> (EP Dual)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. </p> <ul> <li>The file for the EP1 or EP2 receivers will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</li> <li>The file for the EP Dual will be in bin format (<code>firmware.bin</code>). </li> </ul> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel EP1/EP2 2.4GHz RX</code> (EP1 &amp; EP2) </li> <li><code>HappyModel EP Dual 2.4GHz RX</code> (EP Dual)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. </p> <ul> <li>The file for the EP1 or EP2 receivers will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</li> <li>The file for the EP Dual will be in bin format (<code>firmware.bin</code>). </li> </ul> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel EP1/EP2 2.4GHz RX</code> (EP1 &amp; EP2) </li> <li><code>HappyModel EP Dual 2.4GHz RX</code> (EP Dual)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/hmes900/","title":"Happymodel ES900RX","text":"<p>Advisory</p> <p>If this is the first time you're flashing/updating your receiver or you're updating it from a previous 2.x firmware via WiFi, first ensure that it has version 2.5.2. Once it has the 2.5.2 flashed, you can then update it to 3.x via WiFi.</p> <p>If you're flashing it straight to 3.x and you're getting \"Not Enough Space\" popup during WiFi flashing, flash the receiver to 2.5.2 first, and then flash it to 3.x.</p> <p>If receiver firmware is already 3.x, and you're still getting the \"Not Enough Space\" error when flashing via WiFi, make sure you are selecting the correct method in the Configurator(via WiFi, in this case). See the steps outlined below.</p> <p>You can update straight to 3.x via Passthrough or via UART.</p> <p>The Repartitioner is for TX only.</p>"},{"location":"quick-start/receivers/hmes900/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. A solid LED light on these receivers even with the TX Module off is a sign they are in Bootloader Mode. If this is the case, rewire the receiver to a different UART.</p> <p></p> Happymodel ES900RX <p>The image above shows the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p>"},{"location":"quick-start/receivers/hmes900/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/hmes900/#updating-your-receiver-firmware-es900rx","title":"Updating your Receiver Firmware (ES900RX)","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel ES900 RX</code></li> <li><code>HappyModel ES900 Dual RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>If your Receiver has Boot Pads instead of a Boot Button, solder the Boot Pads together or connect it to Ground. If your Receiver has a Boot Button, locate it then press &amp; hold it. </p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> <li>Once the LED on the Receiver is lit up Solid, release/de-press the button on the receiver if it has one.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel ES900 RX</code></li> <li><code>HappyModel ES900 Dual RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>If your receiver has a boot pad instead of a boot button, make sure to disconnect it from ground or remove the solder bridge you made on step 2.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel ES900 RX</code></li> <li><code>HappyModel ES900 Dual RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. </p> <ul> <li>The file for the ES900 receivers will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</li> <li>The file for the ES900 Dual will be in bin format (<code>firmware.bin</code>). </li> </ul> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel ES900 RX</code></li> <li><code>HappyModel ES900 Dual RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. </p> <ul> <li>The file for the ES900 receivers will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</li> <li>The file for the ES900 Dual will be in bin format (<code>firmware.bin</code>). </li> </ul> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel ES900 RX</code></li> <li><code>HappyModel ES900 Dual RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/hmes900/#updating-your-receiver-firmware-es915rxes868rx","title":"Updating your Receiver Firmware (ES915RX/ES868RX)","text":"<p>Attention</p> <p>ExpressLRS 3.5.x will be the last version to support STM32-based hardware. This includes the Happymodel PP, ES915 Tx and Rx, early NamimnoRC Flash and Voyager, FrSky R9, SIYI and ImmersionRC hardware.</p> <p>The STM32 platform's limited compute resources and feature gaps (WiFi, Bluetooth, Backpacks) made for an inferior version of ExpressLRS that necessitated disproportionate maintenance burden for the Dev Team.</p> via Passthroughvia STLink <p> </p> <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>If your receiver powers up with just USB connected to your flight controller, unplug it. Press and Hold the boot button on the receiver (not the FC) and then plug in the USB. Release the button right after the LED turn solid.</li> <li>If your receiver only powers up with a LiPo connected to your flight controller, unplug it. Then unplug-replug the USB cable to your flight controller. Do not replug LiPo yet.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel ES915 RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the <code>Retry...</code> lines to appear in the Build Log. Connect the LiPo to power up the Receiver if it only powers up with a LiPo connected.</p> <ul> <li><code>Retry...</code> lines will not show up if your receiver is already in bootloader mode and gets powered up by USB.</li> </ul> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Disconnect the Receiver from your Flight Controller.</p> </li> <li> <p>Wire up the Receiver into an STLink V2 dongle. Find the CLK, DIO, 3v3 and Gnd pads and wire them to the corresponding pins of the dongle.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel ES915 RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>STLink</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> <li> <p>Rewire your receiver to your Flight Controller.</p> </li> </ol>"},{"location":"quick-start/receivers/hmpp2400/","title":"Happymodel PP","text":"<p>Attention</p> <p>ExpressLRS 3.5.x will be the last version to support STM32-based hardware. This includes the Happymodel PP, ES915 Tx and Rx, early NamimnoRC Flash and Voyager, FrSky R9, SIYI and ImmersionRC hardware.</p> <p>The STM32 platform's limited compute resources and feature gaps (WiFi, Bluetooth, Backpacks) made for an inferior version of ExpressLRS that necessitated disproportionate maintenance burden for the Dev Team.</p>"},{"location":"quick-start/receivers/hmpp2400/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"Happymodel PP <p>The image above shows the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>Note</p> <p>The PP doesn't have a <code>Boot</code> pad so there's no need to bridge any pads.</p>"},{"location":"quick-start/receivers/hmpp2400/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed smoothly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy (of high importance with the Passthrough Flashing Method).</p>"},{"location":"quick-start/receivers/hmpp2400/#updating-your-receiver-firmware","title":"Updating your Receiver Firmware","text":"via Passthroughvia STLink <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>If your receiver powers up with just USB connected to your flight controller, unplug it. Press and Hold the boot button on the receiver (not the FC) and then plug in the USB. Release the button right after the LED turn solid.</li> <li>If your receiver only powers up with a LiPo connected to your flight controller, unplug it. Then unplug-replug the USB cable to your flight controller. Do not replug LiPo yet.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel PP 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the <code>Retry...</code> lines to appear in the Build Log. Connect the LiPo to power up the Receiver if it only powers up with a LiPo connected.</p> <ul> <li><code>Retry...</code> lines will not show up if your receiver is already in bootloader mode and gets powered up by USB.</li> </ul> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Disconnect the Receiver from your Flight Controller.</p> </li> <li> <p>Wire up the Receiver into an STLink V2 dongle. Find the CLK, DIO, 3v3 and Gnd pads and wire them to the corresponding pins of the dongle.</p> <p> </p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel PP 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>STLink</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> <li> <p>Rewire your receiver to your Flight Controller following the Receiver Wiring guide.</p> </li> </ol>"},{"location":"quick-start/receivers/iflight2400/","title":"iFlight 2.4GHz","text":"<p>Advisory</p> <p>If this is the first time you're flashing/updating your receiver or you're updating it from a previous 2.x firmware via WiFi, first ensure that it has version 2.5.2. Once it has the 2.5.2 flashed, you can then update it to 3.x via WiFi.</p> <p>If you're flashing it straight to 3.x and you're getting \"Not Enough Space\" popup during WiFi flashing, flash the receiver to 2.5.2 first, and then flash it to 3.x.</p> <p>If receiver firmware is already 3.x, and you're still getting the \"Not Enough Space\" error when flashing via WiFi, make sure you are selecting the correct method in the Configurator(via WiFi, in this case). See the steps outlined below.</p> <p>You can update straight to 3.x via Passthrough or via UART.</p> <p>The Repartitioner is for TX only.</p>"},{"location":"quick-start/receivers/iflight2400/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. A solid LED light on these receivers even with the TX module off is a sign they are in Bootloader Mode. If this is the case, rewire the receiver to a different UART.</p> <p></p> IFlight 2.4GHz <p></p> IFlight 2.4GHz <p>The images above show the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p>"},{"location":"quick-start/receivers/iflight2400/#identify-your-receiver-and-flash-the-correct-target","title":"Identify your receiver and flash the correct target","text":"<p>Important Step!</p> <p>You MUST flash the correct firmware target to your receiver in order for it to work properly. Look closely at your receiver and make sure you are select the correct firmware target. Flashing the wrong target will result in extremely poor range or failure to connect.</p> <p> How to identify the correct iFlight 2.4GHz receiver target </p>"},{"location":"quick-start/receivers/iflight2400/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/iflight2400/#updating-your-receiver-firmware","title":"Updating your Receiver Firmware","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>iFlight 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>iFlight 2.4GHz RX</code></li> <li><code>iFlight 2.4GHz Nano RX</code> (smaller)</li> <li><code>iFlight 2.4GHz 500mW RX</code></li> <li><code>iFlight 2.4GHz 250mW Diversity RX</code> (two antennas)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>Locate the Boot button on your receiver, press and hold it.</p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer. Release/de-press the Boot button.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>iFlight 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>iFlight 2.4GHz RX</code></li> <li><code>iFlight 2.4GHz Nano RX</code> (smaller)</li> <li><code>iFlight 2.4GHz 500mW RX</code></li> <li><code>iFlight 2.4GHz 250mW Diversity RX</code> (two antennas)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>iFlight 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>iFlight 2.4GHz RX</code></li> <li><code>iFlight 2.4GHz Nano RX</code> (Smaller)</li> <li><code>iFlight 2.4GHz 500mW RX</code></li> <li><code>iFlight 2.4GHz 250mW Diversity RX</code> (two antennas)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>iFlight 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>iFlight 2.4GHz RX</code></li> <li><code>iFlight 2.4GHz Nano RX</code> (Smaller)</li> <li><code>iFlight 2.4GHz 500mW RX</code></li> <li><code>iFlight 2.4GHz 250mW Diversity RX</code> (two antennas)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>iFlight 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>iFlight 2.4GHz RX</code></li> <li><code>iFlight 2.4GHz Nano RX</code> (Smaller)</li> <li><code>iFlight 2.4GHz 500mW RX</code></li> <li><code>iFlight 2.4GHz 250mW Diversity RX</code> (two antennas)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/iflight900/","title":"iFlight 900MHz","text":"<p>Advisory</p> <p>If this is the first time you're flashing/updating your receiver or you're updating it from a previous 2.x firmware via WiFi, first ensure that it has version 2.5.2. Once it has the 2.5.2 flashed, you can then update it to 3.x via WiFi.</p> <p>If you're flashing it straight to 3.x and you're getting \"Not Enough Space\" popup during WiFi flashing, flash the receiver to 2.5.2 first, and then flash it to 3.x.</p> <p>If receiver firmware is already 3.x, and you're still getting the \"Not Enough Space\" error when flashing via WiFi, make sure you are selecting the correct method in the Configurator(via WiFi, in this case). See the steps outlined below.</p> <p>You can update straight to 3.x via Passthrough or via UART.</p> <p>The Repartitioner is for TX only.</p>"},{"location":"quick-start/receivers/iflight900/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. A solid LED light on these receivers even with the TX module off is a sign they are in Bootloader Mode. If this is the case, rewire the receiver to a different UART.  </p> <p></p> IFlight 900MHz <p>The image above shows the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p>"},{"location":"quick-start/receivers/iflight900/#identify-your-receiver-and-flash-the-correct-target","title":"Identify your receiver and flash the correct target","text":"<p>Important Step!</p> <p>You MUST flash the correct firmware target to your receiver in order for it to work properly. Look closely at your receiver and make sure you are select the correct firmware target. Flashing the wrong target will result in extremely poor range or failure to connect.</p> <p> How to identify the correct iFlight 900MHz receiver target </p>"},{"location":"quick-start/receivers/iflight900/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/iflight900/#updating-your-receiver-firmware","title":"Updating your Receiver Firmware","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>iFlight 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>iFlight 900MHz RX</code></li> <li><code>iFlight 900MHz Nano RX</code> (smaller)</li> <li><code>iFlight 900MHz 500mW RX</code></li> <li><code>iFlight 900MHz 500mW Diversity RX</code> (two antennas)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>Locate the Boot button on your receiver, press and hold it.</p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer. Release/de-press the Boot button.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>iFlight 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>iFlight 900MHz RX</code></li> <li><code>iFlight 900MHz Nano RX</code> (smaller)</li> <li><code>iFlight 900MHz 500mW RX</code></li> <li><code>iFlight 900MHz 500mW Diversity RX</code> (two antennas)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>iFlight 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>iFlight 900MHz RX</code></li> <li><code>iFlight 900MHz Nano RX</code> (smaller)</li> <li><code>iFlight 900MHz 500mW RX</code></li> <li><code>iFlight 900MHz 500mW Diversity RX</code> (two antennas)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>iFlight 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>iFlight 900MHz RX</code></li> <li><code>iFlight 900MHz Nano RX</code> (smaller)</li> <li><code>iFlight 900MHz 500mW RX</code></li> <li><code>iFlight 900MHz 500mW Diversity RX</code> (two antennas)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>iFlight 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>iFlight 900MHz RX</code></li> <li><code>iFlight 900MHz Nano RX</code> (smaller)</li> <li><code>iFlight 900MHz 500mW RX</code></li> <li><code>iFlight 900MHz 500mW Diversity RX</code> (two antennas)</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/jumper-aion/","title":"Jumper Aion Nano","text":"<p>Advisory</p> <p>If this is the first time you're flashing/updating your receiver or you're updating it from a previous 2.x firmware via WiFi, first ensure that it has version 2.5.2. Once it has the 2.5.2 flashed, you can then update it to 3.x via WiFi.</p> <p>If you're flashing it straight to 3.x and you're getting \"Not Enough Space\" popup during WiFi flashing, flash the receiver to 2.5.2 first, and then flash it to 3.x.</p> <p>If receiver firmware is already 3.x, and you're still getting the \"Not Enough Space\" error when flashing via WiFi, make sure you are selecting the correct method in the Configurator(via WiFi, in this case). See the steps outlined below.</p> <p>You can update straight to 3.x via Passthrough or via UART.</p> <p>The Repartitioner is for TX only.</p>"},{"location":"quick-start/receivers/jumper-aion/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. A solid LED light on these receivers even with the TX module off is a sign they are in Bootloader Mode. If this is the case, rewire the receiver to a different UART.</p> <p></p> Jumper Aion Mini/Nano <p>The image above shows the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p> <p>Take Note</p> <p>The Jumper Aion Mini has its antenna near the center, beside the boot button. The Jumper Aion Nano has its antenna near the edge, with another chip beside it.</p>"},{"location":"quick-start/receivers/jumper-aion/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/jumper-aion/#updating-your-receiver-firmware","title":"Updating your Receiver Firmware","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION Mini 2.4GHz RX</code></li> <li><code>Jumper AION Nano 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>Locate the Boot button on your receiver, press and hold it.</p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer. Release/de-press the Boot button.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION Mini 2.4GHz RX</code></li> <li><code>Jumper AION Nano 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION Mini 2.4GHz RX</code></li> <li><code>Jumper AION Nano 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION Mini 2.4GHz RX</code></li> <li><code>Jumper AION Nano 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION Mini 2.4GHz RX</code></li> <li><code>Jumper AION Nano 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/jumper900/","title":"Jumper R9 Mini","text":"<p>Attention</p> <p>ExpressLRS 3.5.x will be the last version to support STM32-based hardware. This includes the Happymodel PP, ES915 Tx and Rx, early NamimnoRC Flash and Voyager, FrSky R9, SIYI and ImmersionRC hardware.</p> <p>The STM32 platform's limited compute resources and feature gaps (WiFi, Bluetooth, Backpacks) made for an inferior version of ExpressLRS that necessitated disproportionate maintenance burden for the Dev Team.</p>"},{"location":"quick-start/receivers/jumper900/#flashingupdating-your-receiver-firmware","title":"Flashing/Updating your Receiver Firmware","text":"via STLinkvia Passthrough <p>Note</p> <p>The only way to flash the Jumper R9 Mini to ExpressLRS for the first time is by using STLink. This is a one-way process. There is no returning to the factory firmware after flashing.</p> <p> </p> <ol> <li> <p>Disconnect the Receiver from your Flight Controller.</p> </li> <li> <p>Wire up the Receiver into an STLink V2 dongle. Connect <code>+ to 3v3</code>, <code>- to GND</code>, <code>C to CLK</code> and <code>D to DIO</code>.</p> <p> Jumper R9 Mini </p> <p>Because those pins are so small one option is to only solder wires on the CLK and DIO then power the receiver with the 5v pin with an external power source. Connect - (Gnd) to both power source and the STLink dongle.</p> </li> <li> <p>Disable 'Readout Protection'. To do this download the ST-LINK Utility and follow this quick how to video. Or alternatively under linux you can use OpenOCD.</p> <p>How to video:</p> <p> </p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper 900 Mini RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>STLink</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> <li> <p>Rewire your receiver to your Flight Controller. Connect RX2 and TX2 (you will need to solder on the STM32 pins; see step 2 above) to a flight controller. Configure your flight controller per the FC Configuration Guide.</p> </li> </ol> <p>Note</p> <p>This method can only be used to UPDATE the ExpressLRS firmware on a Jumper R9 mini.</p> <p> </p> <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured. Also make sure [bootloaders] are already flashed to your R9 receiver when applicable.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>If you have to plug in LiPo to power up your Receiver, make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper 900 Mini RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the <code>Retry...</code> lines to appear in the Build Log. Connect the LiPo to power up the Receiver if it only powers up with a LiPo connected.</p> <ul> <li><code>Retry...</code> lines will not show up if your receiver is already in bootloader mode and gets powered up by USB.</li> </ul> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/matek2400/","title":"Matek R24","text":"<p>Advisory</p> <p>If this is the first time you're flashing/updating your receiver or you're updating it from a previous 2.x firmware via WiFi, first ensure that it has version 2.5.2. Once it has the 2.5.2 flashed, you can then update it to 3.x via WiFi.</p> <p>If you're flashing it straight to 3.x and you're getting \"Not Enough Space\" popup during WiFi flashing, flash the receiver to 2.5.2 first, and then flash it to 3.x.</p> <p>If receiver firmware is already 3.x, and you're still getting the \"Not Enough Space\" error when flashing via WiFi, make sure you are selecting the correct method in the Configurator(via WiFi, in this case). See the steps outlined below.</p> <p>You can update straight to 3.x via Passthrough or via UART.</p> <p>The Repartitioner is for TX only.</p>"},{"location":"quick-start/receivers/matek2400/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. A solid LED light on these receivers even with the TX module off is a sign they are in Bootloader Mode. If this is the case, rewire the receiver to a different UART.</p> <p></p> R24-D Diversity <p></p> R24-S SMD <p>The images above show the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p>"},{"location":"quick-start/receivers/matek2400/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/matek2400/#updating-your-receiver-firmware","title":"Updating your Receiver Firmware","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Matek Systems 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>MATEK R24-S 2.4GHz RX</code></li> <li><code>MATEK R24-D 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>If your Receiver has Boot Pads instead of a Boot Button, solder the Boot Pads together or connect it to Ground. If your Receiver has a Boot Button, locate it then press &amp; hold it. </p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> <li>Once the LED on the Receiver is lit up Solid, release/de-press the button on the receiver if it has one.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Matek Systems 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>MATEK R24-S 2.4GHz RX</code></li> <li><code>MATEK R24-D 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>If your receiver has a boot pad instead of a boot button, make sure to disconnect it from ground or remove the solder bridge you made on step 2.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Matek Systems 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>MATEK R24-S 2.4GHz RX</code></li> <li><code>MATEK R24-D 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Matek Systems 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>MATEK R24-S 2.4GHz RX</code></li> <li><code>MATEK R24-D 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Matek Systems 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>MATEK R24-S 2.4GHz RX</code></li> <li><code>MATEK R24-D 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/r9/","title":"Frsky R9","text":"<p>Attention</p> <p>ExpressLRS 3.5.x will be the last version to support STM32-based hardware. This includes the Happymodel PP, ES915 Tx and Rx, early NamimnoRC Flash and Voyager, FrSky R9, SIYI and ImmersionRC hardware.</p> <p>The STM32 platform's limited compute resources and feature gaps (WiFi, Bluetooth, Backpacks) made for an inferior version of ExpressLRS that necessitated disproportionate maintenance burden for the Dev Team.</p>"},{"location":"quick-start/receivers/r9/#bootloaders","title":"Bootloaders","text":"<p>The R9Mini/R9MM, R9MX and R9Slim+ require ExpressLRS Bootloaders to be flashed before the ExpressLRS firmware. The R9Slim doesn't have a bootloader and first time flash requires STLink.</p> <p>Download the bootloader <code>.frk</code> file for your respective receiver. The files are as follows:</p> <ul> <li>R9mm/mini: <code>r9mm_elrs_bl.frk</code> (14kB) or <code>r9mm_no_btn_elrs_bl.frk</code> (14kB) (no_btn bootloader is only used if your bind/boot button on the receiver is faulty or has gone bad.)</li> <li>R9MX: <code>r9mx_elrs_bl.frk</code> (20kB)</li> <li>R9Slim+ (ACCST): <code>r9slim_plus_elrs_bl.frk</code> (14kB)</li> <li>R9Slim+ (ACCESS/OTA): <code>r9slim_plus_ota_elrs_bl.frk</code> (18kB)</li> </ul> <p>Copy the relevant file to your handset's SD card (You can put it inside <code>/FIRMWARE</code> folder for easy access).</p> <p>Wire the receiver to your radio's Smart Port, as shown:</p> <p></p> <p>Next, flash the <code>.frk</code> via the <code>S.port</code> flashing option in <code>OpenTX</code> or <code>EdgeTX</code>  (It helps if the External RF module is set to <code>PPM</code> mode.) </p> <ul> <li>Open the System Menu on the Radio<ul> <li>For radio handsets with dedicated System Key, press the SYS Key.</li> <li>For radio handsets with a single Menu Key, long-press the Menu Key.</li> </ul> </li> <li>Press the Page Key until you reach the <code>SD-HC Card</code> page.</li> <li>Select the <code>FIRMWARE</code> folder and press Enter.</li> <li>Select the <code>.frk</code> bootloader file then long-press the Enter Key.</li> <li>Select Flash external module and press Enter</li> <li>Press Enter once the Writing is complete.</li> </ul> <p>Once done, unplug the receiver and your bootloader is flashed.</p> <p>FYI</p> <p>You only need to flash the Bootloader ONCE. After it's flashed into the receiver, you don't have to reflash it in every update.</p> <p>R9Slim doesn't have a bootloader. As such, you need to flash it first via STLink.</p>"},{"location":"quick-start/receivers/r9/#troubleshooting-no-sync","title":"Troubleshooting No Sync","text":"<ul> <li>Setting the External RF module to <code>PPM</code> mode helps.</li> <li>Check if the receiver has its LED lit up or if it's powered.</li> <li>Check whether you've set your <code>Max Bauds</code> to <code>115200</code>, especially if you're using a QX7 or an X9D (on OneBit Firmware or EdgeTX). If so, put it back to <code>400000</code> and try again.</li> </ul>"},{"location":"quick-start/receivers/r9/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"Wiring up receiver <p>Note</p> <p>This will be the same wiring you'll use for flying and the subsequent firmware updates (via Passthrough). Forget the factory wiring guide!</p> <p>R9Slim need to be flashed via STLink first before you wire it up to your Flight Controller.</p>"},{"location":"quick-start/receivers/r9/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply on INAV, Betaflight and other flight controller software.</p> <p>Ports Tab should be setup so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p>"},{"location":"quick-start/receivers/r9/#updating-your-receiver-firmware","title":"Updating your Receiver Firmware","text":"via Passthroughvia STLink <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured. Also make sure bootloaders are already flashed to your R9 receiver when applicable.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>If your receiver powers up with just USB connected to your flight controller, unplug it. Press and Hold the boot button on the receiver (not the FC) and then plug in the USB. Release the button once the green and red LEDs blink alternately.</li> <li>If your receiver only powers up with a LiPo connected to your flight controller, unplug it. Then unplug-replug the USB cable to your flight controller. Do not replug LiPo yet.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>FrSky 900 MHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>FrSky R9MM/Mini 900MHz RX</code></li> <li><code>FrSky R9MX 900MHz RX</code></li> <li><code>FrSky R9 Slim 900MHz RX</code> (If already flashed via STLink)</li> <li><code>FrSky R9 Slim Plus 900MHz RX</code></li> <li><code>FrSky R9 Slim Plus OTA 900MHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the <code>Retry...</code> lines to appear in the Build Log. Connect the LiPo to power up the Receiver if it only powers up with a LiPo connected.</p> <ul> <li><code>Retry...</code> lines will not show up if your receiver is already in bootloader mode and gets powered up by USB.</li> </ul> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Disconnect the Receiver from your Flight Controller.</p> </li> <li> <p>Wire up the Receiver into an STLink V2 dongle. Find the CLK, DIO, 3v3 and Gnd pads and wire them to the corresponding pins of the dongle.</p> <p> R9Mini/R9MM <p> R9MX <p> R9Slim/R9Slim+ <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>FrSky 900 MHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>FrSky R9MM/Mini 900MHz RX</code></li> <li><code>FrSky R9MX 900MHz RX</code></li> <li><code>FrSky R9 Slim 900MHz RX</code> (If already flashed via STLink)</li> <li><code>FrSky R9 Slim Plus 900MHz RX</code></li> <li><code>FrSky R9 Slim Plus OTA 900MHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>STLink</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> <li> <p>Rewire your receiver to your Flight Controller.</p> </li>"},{"location":"quick-start/receivers/radiomaster-rp-2400/","title":"RadioMaster RP","text":"<p>Advisory</p> <p>If this is the first time you're flashing/updating your receiver or you're updating it from a previous 2.x firmware via WiFi, first ensure that it has version 2.5.2. Once it has the 2.5.2 flashed, you can then update it to 3.x via WiFi.</p> <p>If you're flashing it straight to 3.x and you're getting \"Not Enough Space\" popup during WiFi flashing, flash the receiver to 2.5.2 first, and then flash it to 3.x.</p> <p>If receiver firmware is already 3.x, and you're still getting the \"Not Enough Space\" error when flashing via WiFi, make sure you are selecting the correct method in the Configurator(via WiFi, in this case). See the steps outlined below.</p> <p>You can update straight to 3.x via Passthrough or via UART.</p> <p>The Repartitioner is for TX only.</p>"},{"location":"quick-start/receivers/radiomaster-rp-2400/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. A solid LED light on these receivers even with the TX module off is a sign they are in Bootloader Mode. If this is the case, rewire the receiver to a different UART.</p> <p></p> RadioMaster RP1 2.4GHz <p></p> RadioMaster RP2 2.4GHz <p></p> RadioMaster RP3 2.4GHz <p>The images above show the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p>"},{"location":"quick-start/receivers/radiomaster-rp-2400/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/radiomaster-rp-2400/#updating-your-receiver-firmware","title":"Updating your Receiver Firmware","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>RadioMaster 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>RadioMaster RP1 2.4GHz RX</code></li> <li><code>RadioMaster RP2 2.4GHz RX</code></li> <li><code>RadioMaster RP3 Diversity 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>If your Receiver has Boot Pads instead of a Boot Button, solder the Boot Pads together or connect it to Ground. If your Receiver has a Boot Button, locate it then press &amp; hold it. </p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> <li>Once the LED on the Receiver is lit up Solid, release/de-press the button on the receiver if it has one.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>RadioMaster 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>RadioMaster RP1 2.4GHz RX</code></li> <li><code>RadioMaster RP2 2.4GHz RX</code></li> <li><code>RadioMaster RP3 Diversity 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>If your receiver has a boot pad instead of a boot button, make sure to disconnect it from ground or remove the solder bridge you made on step 2.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>RadioMaster 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>RadioMaster RP1 2.4GHz RX</code></li> <li><code>RadioMaster RP2 2.4GHz RX</code></li> <li><code>RadioMaster RP3 Diversity 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>RadioMaster 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>RadioMaster RP1 2.4GHz RX</code></li> <li><code>RadioMaster RP2 2.4GHz RX</code></li> <li><code>RadioMaster RP3 Diversity 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>RadioMaster 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>RadioMaster RP1 2.4GHz RX</code></li> <li><code>RadioMaster RP2 2.4GHz RX</code></li> <li><code>RadioMaster RP3 Diversity 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/siyiFRmini/","title":"Siyi FR Mini","text":"<p>Attention</p> <p>ExpressLRS 3.5.x will be the last version to support STM32-based hardware. This includes the Happymodel PP, ES915 Tx and Rx, early NamimnoRC Flash and Voyager, FrSky R9, SIYI and ImmersionRC hardware.</p> <p>The STM32 platform's limited compute resources and feature gaps (WiFi, Bluetooth, Backpacks) made for an inferior version of ExpressLRS that necessitated disproportionate maintenance burden for the Dev Team.</p> <p>Note</p> <p>This is only guaranteed to work on the v3.0 of the receiver.</p>"},{"location":"quick-start/receivers/siyiFRmini/#flashingupdating-your-receiver-firmware","title":"Flashing/Updating your Receiver Firmware","text":"via STLinkvia Passthrough <p>Note</p> <p>The only way to flash the FR Mini to ExpressLRS for the first time is using STLink. This is a one-way process, there is no returning to the stock firmware after flashing.</p> <p> </p> <ol> <li> <p>Disconnect the Receiver from your Flight Controller.</p> </li> <li> <p>Wire up the Receiver into an STLink V2 dongle. Find the CLK, DIO,RST, 3v3(VDD) and Gnd pads and wire them to the corresponding pins of the dongle.</p> <p>NOTICE</p> <p>VDD is 3.3v ONLY! Do not connect 5v here! </p> <p> </p> <p> Siyi FR Mini </p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>SIYI 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>SIYI FM30 Mini 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>STLink</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> <li> <p>Rewire your receiver to your Flight Controller.</p> Flight Controller FR Mini Receiver 5V VDD GND GND RX TX2 TX RX2 <p> </p> <p> </p> </li> </ol> <p>Thank you @JupaCreations for contributing.</p> <p>Note</p> <p>This method can only be used to UPDATE the ExpressLRS firmware on an FRmini.</p> <p> </p> <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured. Also make sure [bootloaders] are already flashed to your R9 receiver when applicable.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>If your receiver powers up with just USB connected to your flight controller, unplug it. Press and Hold the boot button on the receiver (not the FC) and then plug in the USB. Release the button right after the LED turn solid.</li> <li>If your receiver only powers up with a LiPo connected to your flight controller, unplug it. Then unplug-replug the USB cable to your flight controller. Do not replug LiPo yet.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>SIYI 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>SIYI FM30 Mini 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the <code>Retry...</code> lines to appear in the Build Log. Connect the LiPo to power up the Receiver if it only powers up with a LiPo connected.</p> <ul> <li><code>Retry...</code> lines will not show up if your receiver is already in bootloader mode and gets powered up by USB.</li> </ul> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/updating/","title":"Typical Updating Steps","text":""},{"location":"quick-start/receivers/updating/#esp-based-receiver-updating-methods","title":"ESP-based Receiver Updating Methods","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>If your Receiver has Boot Pads instead of a Boot Button, solder the Boot Pads together or connect it to Ground. If your Receiver has a Boot Button, locate it, then press &amp; hold it. </p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> <li>Once the LED on the Receiver is lit up Solid, release/de-press the button on the receiver if it has one.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected correctly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>If your receiver has a boot pad instead of a boot button, make sure to disconnect it from ground or remove the solder bridge you made on step 2.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/vantac2400/","title":"Vantac","text":"<p>Advisory</p> <p>If this is the first time you're flashing/updating your receiver or you're updating it from a previous 2.x firmware via WiFi, first ensure that it has version 2.5.2. Once it has the 2.5.2 flashed, you can then update it to 3.x via WiFi.</p> <p>If you're flashing it straight to 3.x and you're getting \"Not Enough Space\" popup during WiFi flashing, flash the receiver to 2.5.2 first, and then flash it to 3.x.</p> <p>If receiver firmware is already 3.x, and you're still getting the \"Not Enough Space\" error when flashing via WiFi, make sure you are selecting the correct method in the Configurator(via WiFi, in this case). See the steps outlined below.</p> <p>You can update straight to 3.x via Passthrough or via UART.</p> <p>The Repartitioner is for TX only.</p>"},{"location":"quick-start/receivers/vantac2400/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. A solid LED light on these receivers even with the TX module off is a sign they are in Bootloader Mode. If this is the case, rewire the receiver to a different UART.</p> <p></p> Vantac ELRS 2.4GHz <p>The image above shows the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p>"},{"location":"quick-start/receivers/vantac2400/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/vantac2400/#updating-your-receiver-firmware","title":"Updating your Receiver Firmware","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>Plug in a LiPo if your receiver doesn't power up with just USB connected into the Flight Controller. Make sure you have some airflow blowing over your Video Transmitter (VTX) to keep it cool. You can also temporarily unplug the VTX from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Vantac 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Vantac 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>Locate the Boot button on your receiver, press and hold it.</p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer. Release/de-press the Boot button.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Vantac 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Vantac 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Vantac 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Vantac 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Vantac 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Vantac 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Vantac 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Vantac 2.4GHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/voyager900/","title":"NamimnoRC Voyager","text":""},{"location":"quick-start/receivers/voyager900/#check-your-target","title":"Check your Target","text":"<p>There are more <code>ESP8285</code> based RXes in the market due to massive shortage of <code>STM32</code> Chips. These support WiFi updating, and can be easily distinguished with a few tricks. The simplest way to tell is if on the rear of the RX (the side without the U.fl/SMD antenna) there is a large white component with the label RainSun (pictured below). If this is not there, you have an STM32 based target, if it is you have an <code>_ESP_</code> target, and can update using Wifi!</p> <p></p> RainSun Antenna <p>Note</p> <p>New versions of the receiver also have the PCB Wifi Antenna, and doesn't have the RainSun SMD Antenna mentioned above. These will use the same ESP-based Target, not the STM-based target.</p>"},{"location":"quick-start/receivers/voyager900/#wiring-up-your-receiver","title":"Wiring up your receiver","text":"<p>Note</p> <p>There are Flight Controllers that will pull the RX pads <code>LOW</code> which will put the ESP-based receivers into <code>Bootloader Mode</code> unintentionally. A solid LED light on these receivers even with the TX Module off is a sign they are in Bootloader Mode. If this is the case, rewire the receiver to a different UART.</p> <p></p> <p>The image above shows the receiver pinouts and their connections. As we're dealing with a UART connection, RX on the receiver goes to a TX pad on the FC, and TX on the receiver goes to an uninverted RX pad on the FC.</p> <p>See the Receiver Wiring page for a more in-depth guide and troubleshooting procedures. Some of the updating procedures below will not go through if your receiver is not wired correctly and behaving properly.</p>"},{"location":"quick-start/receivers/voyager900/#configuring-your-flight-controller","title":"Configuring your Flight Controller","text":"<p>To configure your flight controller properly, please go through Configure FC page. These settings apply to INAV, Betaflight, and other flight controller software.</p> <p>Ports Tab should be set up so that Serial RX is on the UART where you have soldered the receiver.</p> <p>Receiver protocol is <code>CRSF</code> with <code>serialrx_inverted = off</code> and <code>serialrx_halfduplex = off</code>.</p> <p>The next steps will not be able to proceed properly and you'll have issues later if any of these are set differently. Once you have configured your Flight Controller software, close its Configurator and unplug-replug the USB cable from the FC or your computer to refresh the connection and you'll be ensured that the port is not busy.</p> <p>Some of the following procedures will not go through, particularly the via Passthrough method; or your receiver will not be fully functional, if these settings are incorrect.</p>"},{"location":"quick-start/receivers/voyager900/#updating-your-receiver-firmware-esp-based","title":"Updating your Receiver Firmware (ESP-based)","text":"via Passthroughvia UARTvia WiFi <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>Power-cycle the Flight Controller.<ul> <li>If you plugged in LiPo, unplug it.</li> <li>Unplug-replug the USB Cable from your Flight Controller or Computer.</li> <li>If you have to plug in LiPo to power up your Receiver, make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 900 MHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>NamimnoRC Voyager ESP 900MHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Connect your Receiver to your UART Adapter as shown in the image below.</p> <p> </p> <ul> <li>YES, you will need to disconnect your Receiver from your Flight Controller and connect it to a UART/FTDI Adapter.</li> </ul> </li> <li> <p>If your Receiver has Boot Pads instead of a Boot Button, solder the Boot Pads together or connect it to Ground. If your Receiver has a Boot Button, locate it then press &amp; hold it. </p> </li> <li> <p>Plug in your UART Adapter into a USB Port on your Computer.</p> <ul> <li>The LED on the Receiver should light up Solid. If it's Blinking, repeat the previous step.</li> <li>Once the LED on the Receiver is lit up Solid, release/de-press the button on the receiver if it has one.</li> </ul> Receiver LED already Solid (click/tap to expand) <p>If the Receiver LED has become Solid from a failed update, and you're reflashing through this method, you still need to do the previous step: Manually putting the receiver into Bootloader Mode. This ensures the Receiver is indeed in a Bootloader state rather than some random boot loop.</p> </li> <li> <p>Determine whether your UART Adapter is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the UART Adapter is not being detected corrrectly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Common USB-to-UART Adapter chip include: CP210x, FTDI FT232, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 900 MHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>NamimnoRC Voyager ESP 900MHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>If your receiver has a boot pad instead of a boot button, make sure to disconnect it from ground or remove the solder bridge you made on step 2.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your Receiver with your Home WiFi SSID and Password or it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 900 MHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>NamimnoRC Voyager ESP 900MHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS RX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your Receiver is flashed or configured with your Home WiFi SSID and Password, and can connect to that WiFi Network, then the Access Point will not appear.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once you have connected to the <code>ExpressLRS RX</code> Access Point, open up a Browser window and type in the IP Address <code>10.0.0.1</code> on the Address Bar and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 900 MHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>NamimnoRC Voyager ESP 900MHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window should popup containing your firmware binaries.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. The file will be in a gzip format (<code>firmware.bin.gz</code>). Use this file as is, without extracting or unzipping.</p> <p></p> </li> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>With your receiver now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_rx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your Receiver is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your Receiver with your Home WiFi SSID and Password and the device is able to connect to said WiFi Network. </p> <p>MDNS must also be working so your browser can resolve the address http://elrs_rx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Put your Receiver into WiFi mode.</p> using Auto WiFi modeusing the ExpressLRS Lua Script <ol> <li> <p>Power up your Receiver. </p> <ul> <li> <p>If you will have to plug in LiPo to power up your Receiver:</p> <ul> <li>make sure you've already checked the wiring from the Receiver Wiring step.</li> <li>make sure you have some airflow blowing over your Video Transmitter (VTX). You can also temporarily unplug it from the Flight Controller.</li> </ul> </li> <li> <p>If it's already powered and connected or in-sync with a TX Module, power Off the Radio &amp; TX Module first, then power-cycle (Turn Off, then Turn back On) the Receiver.</p> </li> </ul> </li> <li> <p>Let it be for at least 60s and the LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> </ul> <p> </p> </li> </ol> <p>Note</p> <p>This method only works if your Receiver is already in sync and bound with your TX Module.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable RX WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The Receiver LED will turn into either a Rapid Blinking pattern or a Green Breathing LED pattern(for Receivers using an RGB LED) indicating it is now in WiFi Mode.</p> <p> </p> </li> </ol> My Receiver has Solid LED and won't go into WiFi Mode! (click/tap to expand) <p>Go back to the Receiver Wiring step.</p> <p>If you have previously attempted updating your receiver, there's a possibility it was soft-bricked. Go over the Unbricking procedure to recover it.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 900 MHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>NamimnoRC Voyager ESP 900MHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED after a few seconds.</p> <p> </p> </li> </ol>"},{"location":"quick-start/receivers/voyager900/#updating-your-receiver-firmware-stm-based","title":"Updating your Receiver Firmware (STM-based)","text":"<p>Attention</p> <p>ExpressLRS 3.5.x will be the last version to support STM32-based hardware. This includes the Happymodel PP, ES915 Tx and Rx, early NamimnoRC Flash and Voyager, FrSky R9, SIYI and ImmersionRC hardware.</p> <p>The STM32 platform's limited compute resources and feature gaps (WiFi, Bluetooth, Backpacks) made for an inferior version of ExpressLRS that necessitated disproportionate maintenance burden for the Dev Team.</p> via Passthroughvia STLink <p> </p> <ol> <li> <p>Make sure you have done your Receiver Wiring properly and that your Flight Controller is Configured.</p> <p>Important Step!</p> <p>This is an important step and guarantees updating success. If you haven't done these, GO BACK to those pages.</p> <ul> <li>Disconnect and close your FC Configurator app (Betaflight Configurator, INAV Configurator, etc).</li> <li>If your receiver powers up with just USB connected to your flight controller, unplug it. Press and Hold the boot button on the receiver (not the FC) and then plug in the USB. Release the button right after the LED turn solid.</li> <li>If your receiver only powers up with a LiPo connected to your flight controller, unplug it. Then unplug-replug the USB cable to your flight controller. Do not replug LiPo yet.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>NamimnoRC Voyager STM 900MHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>BetaflightPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the <code>Retry...</code> lines to appear in the Build Log. Connect the LiPo to power up the Receiver if it only powers up with a LiPo connected.</p> <ul> <li><code>Retry...</code> lines will not show up if your receiver is already in bootloader mode and gets powered up by USB.</li> </ul> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> </ol> <p> </p> <ol> <li> <p>Disconnect the Receiver from your Flight Controller.</p> </li> <li> <p>Wire up the Receiver into an STLink V2 dongle. Find the CLK, DIO, 3v3 and Gnd pads and wire them to the corresponding pins of the dongle.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your Receiver.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>NamimnoRC Voyager STM 900MHz RX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>STLink</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>The LED on the Receiver should return to Slow Blinking LED pattern after a few seconds.</p> <p> </p> </li> <li> <p>Rewire your receiver to your Flight Controller.</p> </li> </ol>"},{"location":"quick-start/receivers/wiring-up/","title":"Receiver Wiring","text":"<p>Hot Tip</p> <p>Manufacturer-suggested Receiver UARTs, or UARTs alloted for Receivers usually have a pull-down resistor to aid with SBUS (RX pad inversion) which will result into SOLID LEDs on the ESP-based ExpressLRS Receivers. It is best to avoid those UARTs unless you know your UARTs.</p> <p>Hint!</p> <p>KISS FCs may label its UARTs differently. You might have to wire up the RX pin into an RX pad, and the TX pin into a TX pad. Always check your FC wiring guide/manual.</p>"},{"location":"quick-start/receivers/wiring-up/#introduction","title":"Introduction","text":"<p>UART-based ExpressLRS Receivers use the CRSF Serial Protocol to communicate with a Flight Controller. This protocol uses two pins: one for the Control Signals and the other for the Telemetry Signals. Think of it as a two-lane, no-counterflow highway.</p> <p>Here's a typical ExpressLRS Receiver pinout indicating to which Flight Controller pads each pin should be connected:</p> <p></p> <p>The TX pin of an ExpressLRS Receiver sends or transmits the Control Signals it received from the Radio to the Flight Controller. Meanwhile, the RX pin of an ExpressLRS Receiver accepts or receives the Telemetry Data (like Battery Voltage, Current Draw, GPS Coordinates and/or Craft Attitude) from the Flight Controller for sending back to the Radio Handset.</p> What's a UART? (click/tap to expand) <p>A UART is a pair of RX and TX pads on the Flight Controller. It's commonplace to refer to it as your Flight Controller's USB ports where you can connect different peripherals like a GPS or a Receiver. Only one device can occupy a UART and it can only do one function.</p> <p>R3 and T3 belongs to UART3; RX2 and TX2 belongs to UART2. Flight Controller Manufacturers label their UARTs differently. Some use just \"R\" and \"T\" followed by the UART number. Others use \"RX\" and \"TX\" followed by the UART number.</p> <p>UART is an acronym for Universal Asynchronous Receiver/Transmitter</p>"},{"location":"quick-start/receivers/wiring-up/#connecting-a-receiver","title":"Connecting a Receiver","text":"<p>Now that you have some basic info, connect your receiver to any free UART on your Flight controller. Check your Flight Controller Wiring Manual which UARTs you can use.</p> <ul> <li>The GND or G pad should be connected to any Ground pad on the Flight Controller(FC)</li> <li>The VCC or 5 pad should be connected to any 5v (or 4v5) pad on the Flight Controller(FC)</li> <li>The TX or T pad should be connected to an RX pad of the same UART number where the RX or R wire is on the Flight Controller(FC)</li> <li>The RX or R pad should be connected to a TX pad of the same UART number where the TX or T wire is on the Flight Controller(FC)</li> </ul> <p></p> <p>Check for shorts between pads and clean up flux or any soldering residue if you have soldered the receiver yourself. </p> <p>Not so fast!</p> <p>DO NOT shrink wrap or tuck away the receiver yet. We have to do some preliminary testing first!</p> <p>Ensure there are no shorts on your wiring and power up the receiver.</p> <ul> <li>Best to power up the flight controller with a LiPo to ensure the receiver will work normally on flight-ready conditions. </li> <li>It is important to ensure there are no shorts on your wiring BEFORE you power up the system.</li> </ul> <p>Observe the Receiver LED. It should have one of these behaviors:</p> LED Indication Status Slow blink 500ms on/off Waiting for connection from transmitter Double blink then pause Binding mode is active Fast blinking 25ms on/off WiFi mode has started. Starts after 60s. Solid on Bootloader mode is active <p>If the Receiver uses an RGB LED(e.g. Foxeer LNA, BetaFPV SuperD, Happymodel EP Dual), the following can be observed:</p> LED Indication Status Rainbow fade effect Starting Up Slow blink 500ms on/off Waiting for connection from transmitter Orange Double blink then pause Binding mode enabled Green heartbeat WiFi mode has started. Starts after 60s <p>If the Receiver LED doesn't light up at all, quickly disconnect the power and check your wiring.</p> <p>If your receiver has the RGB LED (e.g. Foxeer LNA, BetaFPV SuperD, Happymodel EP Dual), and the receiver LED is not lighting up despite making sure it's wired up correctly, this could mean that the Receiver is in Bootloader Mode.</p> <p>If your Receiver LED lights up but it's just a Solid light, it is in Bootloader mode as the chart above indicates.</p> My Receiver is in Bootloader Mode! (click/tap to expand) <p>Here are the things you can do if the Receiver is in Bootloader Mode:</p> <ol> <li> <p>Check if the Boot button on the Receiver is being pressed or if it's damaged.</p> <ul> <li>If the button is being pressed or pinched, remove the cause of the pressing or pinching. Heatshrink can sometimes press a button on the receiver.</li> <li>If the button is damaged, remove the button or replace the receiver with a better one. Consider asking the seller for a replacement.</li> </ul> </li> <li> <p>If the receiver doesn't have a Boot button and instead has a Boot pad, check if the Boot pad is not connected to a Ground pad. </p> <ul> <li>If the Boot pad is connected to a Ground pad, disconnect or remove the connection.</li> </ul> </li> <li> <p>Disconnect the RX and TX wires of the Receiver from the Flight Controller. Reconnect power to the drone or aircraft. Observe the LED on the Receiver once again.</p> <ul> <li>If it starts Blinking Slowly (500ms Blink Pattern), you will need to move the receiver wiring to a different UART.</li> <li>If the other UART is occupied by another peripheral, disconnect it and swap places with the Receiver.</li> <li>If there is no other Full UART, you can try wiring a Pull-up Resistor: Connect a Resistor (300 Ohm to 1k Ohm value; a lower value is more effective) between this UART's RX pad and either a 5v or 3.3v pad as shown below:        </li> </ul> <p> </p> </li> <li> <p>If you are using any of the Digital FPV systems like the DJI FPV Air Unit, Caddx Vista or DJI O3 Air Unit, and you wired or connected all six wires to your Flight Controller, you will need to remove the SBUS/DJI HDL wire.</p> </li> </ol> <p>If your receiver is behaving normally (i.e. not in Bootloader Mode), then you can power down your aircraft and proceed to the next step: Configuring your Flight Controller</p>"},{"location":"quick-start/transmitters/aion-internal/","title":"Internal Jumper T-Pro","text":"<p>Advisory</p> <p>Not all Jumper T Pros come with an internal ELRS transmitter. Some come with a \"JP4in1 multi-protocol module\" or \"CC2500 multi-protocol module\". This tutorial does not apply to those Jumper T Pros. Check the page you bought it from to determine which unit you purchased.</p> <p>Advisory</p> <p>If you are flashing/updating your TX module via WiFi for the first time from the factory firmware, or from an older firmware, to ExpressLRS 3.x firmware, you will first need to flash it to version 2.5.2, then flash it with the Repartitioner binary file (right click, save as/save file as). Should it complain about Target Mismatch, just click <code>Flash Anyway</code>. Only then you can flash to 3.x firmware via WiFi.</p> <p>Joshua Bardwell has a video about it here.</p> <p>Updating to 3.x via UART or ETX Passthrough doesn't require 2.5.2 firmware or the Repartitioner.</p>"},{"location":"quick-start/transmitters/aion-internal/#updating-and-recovery-procedures","title":"Updating and Recovery Procedures","text":"via WiFi Updatingvia ETX Passthrough Recoveryvia UART Recovery Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device Target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION T-Pro 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device Target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION T-Pro 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device Target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION T-Pro 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <p>Info</p> <p>ETX Passthrough is the result of the collaborative effort between RadioMaster, EdgeTX and ExpressLRS.</p> <p>It is only available on Radios with Internal ExpressLRS Modules.</p> <p>Before you start, ensure you have the latest EdgeTX firmware version on your Radio. Consult the EdgeTX documentation regarding the updating process.</p> <p>For the <code>Jumper T-Pro</code>, update it to at least EdgeTX 2.7.1 (a55aff0) for full EdgeTX support.</p> <p>Hot Tip</p> <p>To ensure updating success with this method, update the EdgeTX firmware on the radio to at least EdgeTX 2.7.1 (a55aff0). The EdgeTX Firmware that comes with this radio is a pre-release version.</p> Simplest EdgeTX Updating Procedure (click/tap to expand) <ol> <li>Visit http://buddy.edgetx.org/.</li> <li>Select the EdgeTX version and the Radio Model you want to update from the Left-hand side column.</li> <li>Click the Download .bin button at the bottom of the page.</li> <li>Save the firmware file into your Radio's SD Card, inside the <code>Firmware</code> Folder.</li> <li>Reboot the Radio into DFU/Bootloader mode.<ul> <li>Turn off your radio.</li> <li>Press and hold the two horizontal Trim switches then press the Power button. The Screen should Light up. Let go of the buttons.</li> <li>Some Radios have a different procedure, like the BetaFPV Lite Radio 3 Pro. Consult the Manual for the steps to get it into this DFU/Bootloader mode.</li> </ul> </li> <li>Select <code>Write Firmware</code>.</li> <li>Navigate to the EdgeTX firmware file you just downloaded.</li> <li>Follow the screen prompts.</li> <li>Once Writing is complete, reboot the radio.</li> <li>Check the Radio's Version Page to verify you have the version you need.</li> </ol> <p>Also, make sure you have an internal ELRS module on your Radio. The following steps only apply to handsets with ExpressLRS-specific internal modules. </p> <p>The current Model on the radio should be using the Internal ExpressLRS Module. Test this by loading the ExpressLRS Lua Script from the Tools Menu.</p> <p>There's one more setting you want to make sure is set properly before proceeding.</p> <ol> <li>Press the SYS Key on the Radio.<ul> <li>Radios without a dedicated SYS Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to get to the System Menu.</li> </ul> </li> <li>Press the PAGE Key until you reach the Hardware Page.</li> <li>Scroll down until you see the Serial Ports settings.</li> <li>Select or highlight USB-VCP. Press Enter and use the Scroll Wheel to set it to <code>CLI</code> mode if it is set to a different setting. Press Enter once more to confirm the changes.</li> <li>Exit the Hardware menu by long-pressing RTN Key.</li> </ol> <p>Before proceeding, you will need to disassemble the radio. You will need a small Philips screwdriver for this. Ten(10) small Philips screws keep both halves of the radio together.</p> <p> </p> <p>Handle with Care</p> <p>There are wires connecting the module to the main board of the radio, along with battery leads. Do not yank out the back cover of the radio from its front half. You don't need to disconnect the wires from the mainboard.</p> <p>Once you have both halves of the radio apart, you will need to solder a piece of wire on the Boot pad into one of the momentary switches on the radio. Refer to the image below where to solder the ends of the wire.</p> <p> </p> <p>Once the wire is soldered adequately, reassemble the radio. Tighten up the ten(10) screws to secure both halves of the radio. </p> <p>Note</p> <p>If you plan to use the switch as an Aux channel, remove the wire afterward. Leaving this wire connected means the Aux channel will output a constant \"High\" signal.</p> <p>Now follow the next steps to get your Internal ExpressLRS Module Updated or Recovered:</p> <ol> <li> <p>Connect your powered-up Radio to your Computer via a USB Data Cable.</p> </li> <li> <p>On your Radio, scroll down and select <code>USB Serial(VCP)</code> then press the Enter Key. Set your Radio aside in the meantime.</p> <p> </p> </li> <li> <p>On your Computer, check whether your Radio is being recognized correctly as a STMicroelectronics Virtual COM Port device.</p> <p>Important</p> <p>This is a vital step and a common failure point. Pay attention.</p> <p>Windows Users can use Device Manager to check whether the Radio is being recognized correctly.</p> <p> </p> <p> Yellow Caution Triangles in the Device Manager, or any mention of <code>&lt;Radio Name&gt; Serial Port</code> means drivers aren't installed.</p> <p>Download the Driver package first. Unzip/extract the contents of the package and run/execute (double-click) the installer file (<code>VCP_V1.5.0_Setup_W7_x64_64bits.exe</code> for Windows 10/11 Users). </p> <p>Once Drivers are installed, check again if the Radio is now being recognized correctly. You may have to first unplug-replug the USB Cable or even reboot your computer.</p> <p>You only have to do this once usually.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device Target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION T-Pro 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>EdgeTXPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the Passthrough Init or Passthrough Done section of the log and Press the switch in the radio where you wired up the boot button and hold it until the script has connected. See the image below for the correct timing.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> <ul> <li>If you didn't get it right and it fails, don't worry. Just retry and it should go through.</li> </ul> </li> <li> <p>Unplug your Radio from USB.</p> </li> <li>Using the ExpressLRS Lua Script from the Tools Menu, check if the firmware version got updated or you have it recovered.</li> </ol> <p> </p> <ol> <li> <p>Disassemble the radio. You will need a small Philips screwdriver for this. Ten(10) small Philips screws keep both halves of the radio together.</p> <p> </p> <p>Handle with Care</p> <p>There are wires connecting the module to the main board of the radio, along with battery leads. Do not yank out the back cover of the radio from its front half. You don't need to disconnect the wires from the mainboard.</p> </li> <li> <p>Disconnect the internal module from the mainboard of the radio. The pin-out is as follows: </p> <ul> <li>White wire is the RX.</li> <li>Yellow wire is the TX.</li> <li>Red wire is the 5v pin.</li> <li>The Black wire is the Gnd pin.</li> </ul> <p> </p> </li> <li> <p>Connect these four wires into your FTDI dongle or a USB to Serial Adapter: RX pin into the TX pin; TX pin into the RX pin; 5v to 5v, and Gnd to Gnd.</p> <p> </p> </li> <li> <p>Before you connect the FTDI dongle/Serial Adapter to the USB port of your Computer, hold down the Boot button. Keep the button pressed until you have connected the Serial Adapter to your USB port. </p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device Target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION T-Pro 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p>Attention</p> <p>Incorrect or loose connections can cause this method to fail. If it does, disconnect the Serial Adapter from the USB, ensure you have the proper connection, and repeat the process. Press and hold the boot button before connecting the Serial Adapter to the USB. </p> </li> <li> <p>Disconnect the FTDI/UART Adapter and reconnect the module back to the radio mainboard, as shown below.</p> <p> </p> </li> <li> <p>Reassemble the radio (but do not put in the screws yet) and verify you have a working module once by running the ExpressLRS Lua script.</p> </li> <li>Once you've verified that your Internal ExpressLRS module is working, replace the screws and tighten things up. Chug one down and celebrate!</li> </ol>"},{"location":"quick-start/transmitters/axisflying-thor/","title":"Axisflying Thor","text":"<p>Advisory</p> <p>If you are flashing/updating your TX module via WiFi for the first time from the factory firmware, or from an older firmware, to ExpressLRS 3.x firmware, you will first need to flash it to version 2.5.2, then flash it with the Repartitioner binary file (right click, save as/save file as). Should it complain about Target Mismatch, just click <code>Flash Anyway</code>. Only then you can flash to 3.x firmware via WiFi.</p> <p>Joshua Bardwell has a video about it here.</p> <p>Updating to 3.x via UART or ETX Passthrough doesn't require 2.5.2 firmware or the Repartitioner.</p>"},{"location":"quick-start/transmitters/axisflying-thor/#flashingupdating-your-tx-module-firmware","title":"Flashing/Updating your TX Module Firmware","text":"via WiFivia UART Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Axisflying 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>AXIS Thor 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Axisflying 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>AXIS Thor 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Axisflying 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>AXIS Thor 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <ol> <li> <p>Connect your TX Module to your Computer via a USB Data Cable. Best if you remove it from your Radio.</p> </li> <li> <p>Determine whether your TX Module is being detected properly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the TX Module is not being detected correctly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>You can download the drivers from here: CP210x Drivers<ul> <li>Windows Users should download the <code>CP210x Windows Drivers</code> package for easier installation. Unzip/Extract the contents of the package and run the setup wizard.</li> </ul> </li> </ul> <p></p> </li> <li> <p>Make sure the switch on the backside of the module is set to the leftmost position.</p> <p> </p> <p>Note</p> <p>To flash the TX itself, the switch on the back side of the module must be set to the leftmost position. To flash the TX backpack, the switch must be set to the rightmost position. For normal operation, the switch must be centered.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Axisflying 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>AXIS Thor 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your module from USB. Return the switch in the back to \"Normal Operation\" position, center.</li> <li>Reconnect your TX module into your Radio's External Module bay.</li> <li>Using the ExpressLRS Lua Script from the Tools Menu, check  if the firmware version got updated.</li> </ol>"},{"location":"quick-start/transmitters/axisflying-thor/#using-the-module-on-a-dx9","title":"Using the module on a DX9","text":"<ul> <li>Install the latest DX9 firmware with CRSF v2 support via Serial port.</li> <li>Wire up Power (VBAT &amp; GND) as per Crossfire install instructions.</li> <li>Use Signal from DX9 to S.Port pin of the Thor TX module.</li> <li>Optional: Connect an external power source via XT30.</li> <li>Flash the TX module with <code>UART_INVERTED</code> unchecked.</li> <li>Adjust your Packet Rate to 250Hz using the Screen &amp; Joystick.</li> </ul>"},{"location":"quick-start/transmitters/axisflying-thor/#acknowledgment","title":"Acknowledgment","text":"<p>This guide is contributed by discord user ChaserP.</p>"},{"location":"quick-start/transmitters/betafpv2400/","title":"BetaFPV 2.4GHz","text":"<p>Advisory</p> <p>If you are flashing/updating your TX module via WiFi for the first time from the factory firmware, or from an older firmware, to ExpressLRS 3.x firmware, you will first need to flash it to version 2.5.2, then flash it with the Repartitioner binary file (right click, save as/save file as). Should it complain about Target Mismatch, just click <code>Flash Anyway</code>. Only then you can flash to 3.x firmware via WiFi.</p> <p>Joshua Bardwell has a video about it here.</p> <p>Updating to 3.x via UART or ETX Passthrough doesn't require 2.5.2 firmware or the Repartitioner.</p>"},{"location":"quick-start/transmitters/betafpv2400/#flashingupdating-your-tx-module-firmware","title":"Flashing/Updating your TX Module Firmware","text":"via WiFivia UART Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>BETAFPV 2.4GHz Nano TX</code></li> <li><code>BETAFPV 2.4GHz Micro TX</code></li> <li><code>BETAFPV 2.4GHz 1W Micro TX</code></li> <li><code>BETAFPV SuperG 2.4GHz Gemini TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>BETAFPV 2.4GHz Nano TX</code></li> <li><code>BETAFPV 2.4GHz Micro TX</code></li> <li><code>BETAFPV 2.4GHz 1W Micro TX</code></li> <li><code>BETAFPV SuperG 2.4GHz Gemini TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>BETAFPV 2.4GHz Nano TX</code></li> <li><code>BETAFPV 2.4GHz Micro TX</code></li> <li><code>BETAFPV 2.4GHz 1W Micro TX</code></li> <li><code>BETAFPV SuperG 2.4GHz Gemini TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <ol> <li> <p>Connect your TX Module to your Computer via a USB Data Cable. Best if you remove it from your Radio.</p> </li> <li> <p>Determine whether your TX Module is being detected properly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the TX Module is not being detected correctly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>You can download the drivers from here: CP210x Drivers<ul> <li>Windows Users should download the <code>CP210x Windows Drivers</code> package for easier installation. Unzip/Extract the contents of the package and run the setup wizard.</li> </ul> </li> </ul> <p></p> </li> <li> <p>Some TX Modules have switches to change how the USB port interacts with the different components in the module. Make sure to set it in the position for \"Flashing the TX Module via UART\".</p> <ul> <li>The BetaFPV Micro modules have dipswitches at the back. Set switches 1 &amp; 2 to On, set the rest of the switches to Off.</li> </ul> <p> </p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>BETAFPV 2.4GHz Nano TX</code></li> <li><code>BETAFPV 2.4GHz Micro TX</code></li> <li><code>BETAFPV 2.4GHz 1W Micro TX</code></li> <li><code>BETAFPV SuperG 2.4GHz Gemini TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your module from USB. Return the dipswitches at the back into the \"Normal Operation\" position.<ul> <li>Switches 1,2,5,6,7 should be Off; 3 &amp; 4 should be On. Applicable to the Micro-size module only.</li> </ul> </li> <li>Reconnect your TX module into your Radio's External Module bay.</li> <li>Using the ExpressLRS Lua Script from the Tools Menu, check if the firmware version got updated.</li> </ol>"},{"location":"quick-start/transmitters/betafpv2400/#cannot-flash","title":"Cannot flash?","text":"<p>If you've followed any of the steps above and still cannot get your devices flashed and updated, see this video for the explanation of why and the fix to get your devices flashed and updated (applies to the Nano modules only).</p>"},{"location":"quick-start/transmitters/betafpv900/","title":"BetaFPV 900MHz","text":"<p>Advisory</p> <p>If you are flashing/updating your TX module via WiFi for the first time from the factory firmware, or from an older firmware, to ExpressLRS 3.x firmware, you will first need to flash it to version 2.5.2, then flash it with the Repartitioner binary file (right click, save as/save file as). Should it complain about Target Mismatch, just click <code>Flash Anyway</code>. Only then you can flash to 3.x firmware via WiFi.</p> <p>Joshua Bardwell has a video about it here.</p> <p>Updating to 3.x via UART or ETX Passthrough doesn't require 2.5.2 firmware or the Repartitioner.</p>"},{"location":"quick-start/transmitters/betafpv900/#flashingupdating-your-tx-module-firmware","title":"Flashing/Updating your TX Module Firmware","text":"via WiFivia UART Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 900 MHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>BETAFPV 900MHz Nano TX</code></li> <li><code>BETAFPV 900MHz Micro TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 900 MHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>BETAFPV 900MHz Nano TX</code></li> <li><code>BETAFPV 900MHz Micro TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 900 MHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>BETAFPV 900MHz Nano TX</code></li> <li><code>BETAFPV 900MHz Micro TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <ol> <li> <p>Connect your TX Module to your Computer via a USB Data Cable. Best if you remove it from your Radio.</p> </li> <li> <p>Determine whether your TX Module is being detected properly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the TX Module is not being detected correctly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>You can download the drivers from here: CP210x Drivers<ul> <li>Windows Users should download the <code>CP210x Windows Drivers</code> package for easier installation. Unzip/Extract the contents of the package and run the setup wizard.</li> </ul> </li> </ul> <p></p> </li> <li> <p>Some TX Modules have switches to change how the USB port interacts with the different components in the module. Make sure to set it in the position for \"Flashing the TX Module via UART\".</p> <ul> <li>The BetaFPV Micro modules have dipswitches at the back. Set switches 1 &amp; 2 to On, set the rest of the switches to Off.</li> </ul> <p> </p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 900 MHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>BETAFPV 900MHz Nano TX</code></li> <li><code>BETAFPV 900MHz Micro TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your module from USB. Return the dipswitches at the back into the \"Normal Operation\" position.<ul> <li>Switches 1,2,5,6,7 should be Off; 3 &amp; 4 should be On. Applicable to the Micro-size module only.</li> </ul> </li> <li>Reconnect your TX module into your Radio's External Module bay.</li> <li>Using the ExpressLRS Lua Script from the Tools Menu, check  if the firmware version got updated.</li> </ol>"},{"location":"quick-start/transmitters/betafpv900/#cannot-flash","title":"Cannot flash?","text":"<p>If you've followed any of the steps above and still cannot get your devices flashed and updated, see this video for the explanation of why and the fix to get your devices flashed and updated (applies to the Nano modules only).</p>"},{"location":"quick-start/transmitters/betafpvlr3pro/","title":"BetaFPV LR3 Pro","text":"<p>Advisory</p> <p>If you are flashing/updating your TX module via WiFi for the first time from the factory firmware, or from an older firmware, to ExpressLRS 3.x firmware, you will first need to flash it to version 2.5.2, then flash it with the Repartitioner binary file (right click, save as/save file as). Should it complain about Target Mismatch, just click <code>Flash Anyway</code>. Only then you can flash to 3.x firmware via WiFi.</p> <p>Joshua Bardwell has a video about it here.</p> <p>Updating to 3.x via UART or ETX Passthrough doesn't require 2.5.2 firmware or the Repartitioner.</p>"},{"location":"quick-start/transmitters/betafpvlr3pro/#flashingupdating-your-tx-module-firmware","title":"Flashing/Updating your TX Module Firmware","text":"via WiFivia ETX Passthrough Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>BETAFPV 2.4GHz LiteRadio 3 Pro</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>BETAFPV 2.4GHz LiteRadio 3 Pro</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>BETAFPV 2.4GHz LiteRadio 3 Pro</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <p>Info</p> <p>ETX Passthrough is the result of the collaborative effort between RadioMaster, EdgeTX and ExpressLRS.</p> <p>It is only available on Radios with Internal ExpressLRS Modules.</p> <p>Before you start, ensure you have the latest EdgeTX firmware version on your Radio. Consult the EdgeTX documentation regarding the updating process.</p> <p>For the <code>BetaFPV Lite Radio 3 Pro</code>, update it to at least EdgeTX 2.8.0 (f6d140e) for full EdgeTX support.</p> <p>Hot Tip</p> <p>To ensure updating success with this method, update the EdgeTX firmware on the radio to at least EdgeTX 2.8.0 (f6d140e, released Nov. 27, 2022). The EdgeTX Firmware that comes with this radio is a pre-release version.</p> Simplest EdgeTX Updating Procedure (click/tap to expand) <ol> <li>Visit http://buddy.edgetx.org/.</li> <li>Select the EdgeTX version and the Radio Model you want to update from the Left-hand side column.</li> <li>Click the Download .bin button at the bottom of the page.</li> <li>Save the firmware file into your Radio's SD Card, inside the <code>Firmware</code> Folder.</li> <li>Reboot the Radio into DFU/Bootloader mode.<ul> <li>Turn off your radio.</li> <li>Press and hold the two horizontal Trim switches then press the Power button. The Screen should Light up. Let go of the buttons.</li> <li>Some Radios have a different procedure, like the BetaFPV Lite Radio 3 Pro. Consult the Manual for the steps to get it into this DFU/Bootloader mode.</li> </ul> </li> <li>Select <code>Write Firmware</code>.</li> <li>Navigate to the EdgeTX firmware file you just downloaded.</li> <li>Follow the screen prompts.</li> <li>Once Writing is complete, reboot the radio.</li> <li>Check the Radio's Version Page to verify you have the version you need.</li> </ol> <p>Also, make sure you have an internal ELRS module on your Radio. The following steps only apply to handsets with ExpressLRS-specific internal modules. You can find a sticker at the bottom of the box that the radio came in with containing the barcode and the radio stick mode and type.</p> <p>The current Model on the radio should be using the Internal ExpressLRS Module. Test this by loading the ExpressLRS Lua Script from the Tools Menu.</p> <p> </p> <p>There's one more setting you want to make sure is set properly before proceeding.</p> <ol> <li>Press the SYS Key on the Radio.<ul> <li>Radios without a dedicated SYS Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to get to the System Menu.</li> </ul> </li> <li>Press the PAGE Key until you reach the Hardware Page.</li> <li>Scroll down until you see the Serial Ports settings.</li> <li>Select or highlight USB-VCP. Press Enter and use the Scroll Wheel to set it to <code>CLI</code> mode if it is set to a different setting. Press Enter once more to confirm the changes.</li> <li>Exit the Hardware menu by long-pressing RTN Key.</li> </ol> <p>Now follow the next steps to get your Internal ExpressLRS Module Updated:</p> <ol> <li> <p>Connect your powered-up Radio to your Computer via a USB Data Cable.</p> <p> </p> </li> <li> <p>On your Radio, scroll down and select <code>USB Serial(VCP)</code> then press the Enter Key. Set your Radio aside in the meantime.</p> <p> </p> </li> <li> <p>On your Computer, check whether your Radio is being recognized correctly as a STMicroelectronics Virtual COM Port device.</p> <p>Important</p> <p>This is a vital step and a common failure point. Pay attention.</p> <p>Windows Users can use Device Manager to check whether the Radio is being recognized correctly.</p> <p> </p> <p> Yellow Caution Triangles in the Device Manager, or any mention of <code>&lt;Radio Name&gt; Serial Port</code> means drivers aren't installed.</p> <p>Download the Driver package first. Unzip/extract the contents of the package and run/execute (double-click) the installer file (<code>VCP_V1.5.0_Setup_W7_x64_64bits.exe</code> for Windows 10/11 Users). </p> <p>Once Drivers are installed, check again if the Radio is now being recognized correctly. You may have to first unplug-replug the USB Cable or even reboot your computer.</p> <p>You only have to do this once usually.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>BETAFPV 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>BETAFPV 2.4GHz LiteRadio 3 Pro</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>EdgeTXPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your Radio from USB.</li> <li> <p>Using the ExpressLRS Lua Script from the Tools Menu, check if the firmware version got updated.</p> <p> </p> </li> </ol>"},{"location":"quick-start/transmitters/diy2400/","title":"DIY 2400TX","text":""},{"location":"quick-start/transmitters/diy2400/#flashing-via-usbuart-esp32","title":"Flashing via USB/UART (ESP32)","text":"<ul> <li>Targets:<ul> <li><code>DIY_2400_TX_ESP32_SX1280_E28_via_UART</code></li> <li><code>DIY_2400_TX_ESP32_SX1280_LORA1280F27_via_UART</code></li> <li><code>DIY_2400_TX_ESP32_SX1280_Mini_via_UART</code></li> </ul> </li> </ul> <p>Plug the ESP32 of the DIY TX into the USB of your computer. Then select the correct target given the RF chip you chose and press Build &amp; Flash. Further updates can be performed by building and flashing the <code>.bin</code> file to the external module using OpenTX.</p>"},{"location":"quick-start/transmitters/diy900/","title":"DIY 900TX","text":""},{"location":"quick-start/transmitters/diy900/#flashing-via-usbuart-esp32","title":"Flashing via USB/UART (ESP32)","text":"<ul> <li>Targets:<ul> <li><code>DIY_900_TX_ESP32_SX127x_E19_via_UART</code></li> <li><code>DIY_900_TX_ESP32_SX127x_RFM95_via_UART</code></li> </ul> </li> </ul> <p>Plug the ESP32 of the DIY TX into the USB of your computer. Then select the correct target given the RF chip you chose and press Build &amp; Flash. Further updates can be performed by building and flashing the <code>.bin</code> file to the external module using OpenTX.</p>"},{"location":"quick-start/transmitters/diy900/#flashing-via-usbuart-ttgo","title":"Flashing via USB/UART (TTGo)","text":"<ul> <li>Targets:<ul> <li><code>DIY_900_TX_TTGO_V1_SX127x_via_UART</code></li> <li><code>DIY_900_TX_TTGO_V2_SX127x_via_UART</code></li> </ul> </li> </ul> <p>Plug the TTGo into the USB of your computer. Then select the correct target given the version you have and press Build &amp; Flash. Further updates can be performed by building and flashing the <code>.bin</code> file to the external module using OpenTX.</p>"},{"location":"quick-start/transmitters/emax2400/","title":"EMAX 2.4GHz","text":"<p>Info</p> <p>These devices come pre-installed with a 3.x-ready firmware. You don't need to reflash these devices. You can use the Web UI of these devices to update the Binding Phrase or any of the firmware options.</p>"},{"location":"quick-start/transmitters/emax2400/#flashingupdating-your-tx-module-firmware","title":"Flashing/Updating your TX Module Firmware","text":"via WiFivia UART Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>EMAX 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>EMAX Nano 2.4GHz TX</code></li> <li><code>EMAX OLED 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>EMAX 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>EMAX Nano 2.4GHz TX</code></li> <li><code>EMAX OLED 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>EMAX 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>EMAX Nano 2.4GHz TX</code></li> <li><code>EMAX OLED 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <ol> <li> <p>Connect your TX Module to your Computer via a USB Data Cable. Best if you remove it from your Radio.</p> </li> <li> <p>Determine whether your TX Module is being detected properly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the TX Module is not being detected correctly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>You can download the drivers from here: CP210x Drivers<ul> <li>Windows Users should download the <code>CP210x Windows Drivers</code> package for easier installation. Unzip/Extract the contents of the package and run the setup wizard.</li> </ul> </li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>EMAX 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>EMAX Nano 2.4GHz TX</code></li> <li><code>EMAX OLED 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your module from USB.</li> <li>Reconnect your TX module into your Radio's External Module bay.</li> <li>Using the ExpressLRS Lua Script from the Tools Menu, check  if the firmware version got updated.</li> </ol>"},{"location":"quick-start/transmitters/emax900/","title":"EMAX 900MHz","text":"<p>Info</p> <p>These devices come pre-installed with a 3.x-ready firmware. You don't need to reflash these devices. You can use the Web UI of these devices to update the Binding Phrase or any of the firmware options.</p>"},{"location":"quick-start/transmitters/emax900/#flashingupdating-your-tx-module-firmware","title":"Flashing/Updating your TX Module Firmware","text":"via WiFivia UART Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>EMAX 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>EMAX Nano 900MHz TX</code></li> <li><code>EMAX OLED 900MHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>EMAX 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>EMAX Nano 900MHz TX</code></li> <li><code>EMAX OLED 900MHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>EMAX 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>EMAX Nano 900MHz TX</code></li> <li><code>EMAX OLED 900MHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <ol> <li> <p>Connect your TX Module to your Computer via a USB Data Cable. Best if you remove it from your Radio.</p> </li> <li> <p>Determine whether your TX Module is being detected properly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the TX Module is not being detected correctly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>You can download the drivers from here: CP210x Drivers<ul> <li>Windows Users should download the <code>CP210x Windows Drivers</code> package for easier installation. Unzip/Extract the contents of the package and run the setup wizard.</li> </ul> </li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>EMAX 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>EMAX Nano 900MHz TX</code></li> <li><code>EMAX OLED 900MHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your module from USB.</li> <li>Reconnect your TX module into your Radio's External Module bay.</li> <li>Using the ExpressLRS Lua Script from the Tools Menu, check  if the firmware version got updated.</li> </ol>"},{"location":"quick-start/transmitters/es24tx/","title":"Happymodel ES24TX","text":"<p>Note</p> <p>This guide applies to all of the following HappyModel TX modules: ES24TX, ES24TX Lite, ES24TX Iron Man, ES24TX Slim Pro and ES24TX Pro Micro. Any module with \"Pro\" in the name uses the <code>_Pro_Series</code> target.</p> <p>Advisory</p> <p>If you are flashing/updating your TX module via WiFi for the first time from the factory firmware, or from an older firmware, to ExpressLRS 3.x firmware, you will first need to flash it to version 2.5.2, then flash it with the Repartitioner binary file (right click, save as/save file as). Should it complain about Target Mismatch, just click <code>Flash Anyway</code>. Only then you can flash to 3.x firmware via WiFi.</p> <p>Joshua Bardwell has a video about it here.</p> <p>Updating to 3.x via UART or ETX Passthrough doesn't require 2.5.2 firmware or the Repartitioner.</p>"},{"location":"quick-start/transmitters/es24tx/#flashingupdating-your-tx-module-firmware","title":"Flashing/Updating your TX Module Firmware","text":"via WiFivia UART Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>HappyModel ES24 2.4GHz TX</code> for ES24TX (non-Pro Micro), ES24TX Lite, ES24TX Slim</li> <li><code>HappyModel ES24 Pro 2.4GHz TX</code> for ES24TX Pro Micro</li> <li><code>HappyModel ES24 Slim Pro 2.4GHz TX</code> for ES24TX Slim Pro</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>HappyModel ES24 2.4GHz TX</code> for ES24TX (non-Pro Micro), ES24TX Lite, ES24TX Slim</li> <li><code>HappyModel ES24 Pro 2.4GHz TX</code> for ES24TX Pro Micro</li> <li><code>HappyModel ES24 Slim Pro 2.4GHz TX</code> for ES24TX Slim Pro</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>HappyModel ES24 2.4GHz TX</code> for ES24TX (non-Pro Micro), ES24TX Lite, ES24TX Slim</li> <li><code>HappyModel ES24 Pro 2.4GHz TX</code> for ES24TX Pro Micro</li> <li><code>HappyModel ES24 Slim Pro 2.4GHz TX</code> for ES24TX Slim Pro</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <ol> <li>Connect your TX Module to your Computer via a USB Data Cable. Best if you remove it from your Radio.<ul> <li>For these TX Modules, you will have to take off the front cover to get access to the USB Port and/or dipswitches/jumper blocks.</li> </ul> </li> <li> <p>Determine whether your TX Module is being detected properly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the TX Module is not being detected correctly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>You can download the drivers from here: CP210x Drivers<ul> <li>Windows Users should download the <code>CP210x Windows Drivers</code> package for easier installation. Unzip/Extract the contents of the package and run the setup wizard.</li> </ul> </li> </ul> <p></p> </li> <li> <p>These TX Modules have switches to change how the USB port interacts with the different components in the module. Make sure to set it in the position for \"TX Module Flashing via UART\".</p> <p> ES24TX Full Size, Non Pro </p> <p> ES24TX Lite, for Jumper T-Lite </p> <p> ES24TX Slim, Iron Man </p> <p> ES24TX Slim Pro </p> <p> ES24TX Pro 1W </p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>HappyModel ES24 2.4GHz TX</code> for ES24TX (non-Pro Micro), ES24TX Lite, ES24TX Slim</li> <li><code>HappyModel ES24 Pro 2.4GHz TX</code> for ES24TX Pro Micro</li> <li><code>HappyModel ES24 Slim Pro 2.4GHz TX</code> for ES24TX Slim Pro</li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your module from USB. Return any dipswitches or jumper blocks to their \"Normal Operation\" position.</li> <li>Reattach the TX module cover, making sure no wires are being pinched and the antenna pigtail is connected properly.</li> <li>Reconnect your TX module into your Radio's External Module bay.</li> <li>Using the ExpressLRS Lua Script from the Tools Menu, check  if the firmware version got updated.</li> </ol>"},{"location":"quick-start/transmitters/es900tx/","title":"Happymodel ES900TX","text":""},{"location":"quick-start/transmitters/es900tx/#flashingupdating-the-es900tx-firmware","title":"Flashing/Updating the ES900TX Firmware","text":"<p>Advisory</p> <p>If you are flashing/updating your TX module via WiFi for the first time from the factory firmware, or from an older firmware, to ExpressLRS 3.x firmware, you will first need to flash it to version 2.5.2, then flash it with the Repartitioner binary file (right click, save as/save file as). Should it complain about Target Mismatch, just click <code>Flash Anyway</code>. Only then you can flash to 3.x firmware via WiFi.</p> <p>Joshua Bardwell has a video about it here.</p> <p>Updating to 3.x via UART or ETX Passthrough doesn't require 2.5.2 firmware or the Repartitioner.</p> via WiFivia UART <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel TX ES900TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel ES900 TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel ES900 TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <ol> <li>Connect your TX Module to your Computer via a USB Data Cable. Best if you remove it from your Radio.<ul> <li>You will need to disassemble your TX Module to get access to the USB Port and the dipswitches.</li> </ul> </li> <li> <p>Determine whether your TX Module is being detected properly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the TX Module is not being detected correctly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>You can download the drivers from here: CP210x Drivers<ul> <li>Windows Users should download the <code>CP210x Windows Drivers</code> package for easier installation. Unzip/Extract the contents of the package and run the setup wizard.</li> </ul> </li> </ul> <p></p> </li> <li> <p>This TX Module has switches to change how the USB port interacts with the different components in the module. Make sure to set it in the position for \"Flashing the TX Module via UART\".</p> <ul> <li>Set switches 5 &amp; 6 to On, and set the others to Off.</li> </ul> <p> </p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel ES900 TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your module from USB. Return the dipswitches to the \"Normal Operation\" position (1 &amp; 2 is On, 3,4,5,6 are Off).</li> <li>Reassemble the TX Module, making sure no wires are being pinched and the antenna pigtail is connected properly.</li> <li>Reconnect your TX module into your Radio's External Module bay.</li> <li>Using the ExpressLRS Lua Script from the Tools Menu, check  if the firmware version got updated.</li> </ol>"},{"location":"quick-start/transmitters/es900tx/#flashingupdating-the-es915txes868tx-firmware","title":"Flashing/Updating the ES915TX/ES868TX Firmware","text":"<p>Attention</p> <p>ExpressLRS 3.5.x will be the last version to support STM32-based hardware. This includes the Happymodel PP, ES915 Tx and Rx, early NamimnoRC Flash and Voyager, FrSky R9, SIYI and ImmersionRC hardware.</p> <p>The STM32 platform's limited compute resources and feature gaps (WiFi, Bluetooth, Backpacks) made for an inferior version of ExpressLRS that necessitated disproportionate maintenance burden for the Dev Team.</p> via Stock_BLvia STLink <p> </p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel ES915 TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>Stock_BL</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>A Temp folder will open up with the firmware.elrs file. Copy-paste the firmware.elrs file into your Radio's SD Card (preferably to the <code>/FIRMWARE</code> folder for easy access).</p> </li> <li> <p>On your radio, open the System Menu. </p> <ul> <li>On newer radios, you can press the SYS key to open the System Menu</li> <li>On older radios, or radios that only have a menu key, long-press the Menu key to open the System Menu</li> </ul> </li> <li> <p>Using the Page key/s, navigate to the SD-HC Card page, scroll-down and open the <code>FIRMWARE</code> folder where you can find the firmware.elrs file.</p> </li> <li> <p>Highlight the file and press-hold the Enter button and select \"Flash External ELRS\". Wait for the firmware to be written.</p> No Sync (click/tap to expand) <ul> <li>Make sure you have updated the OpenTX/EdgeTX firmware of your radio to a newer version</li> <li>Make sure the current model selected on the radio is set up for ExpressLRS Use. See the [Radio Preparation] guide.</li> </ul> </li> <li> <p>With the ExpressLRS Lua Script in the Tools page, verify if the firmware version has been updated.</p> </li> </ol> <p> </p> <ol> <li> <p>Disassemble your TX Module to get access to the mainboard.</p> </li> <li> <p>Connect your STLink V2 dongle to the pads shown in the image below.</p> <p> </p> </li> <li> <p>Connect your STLink V2 dongle to your Computer's USB Port. Make sure it is being detected properly.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Happymodel 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HappyModel ES915 TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>STLink</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>Disconnect the STLink V2 dongle from the TX Module PCB and reassemble the TX Module.</p> </li> <li>Reattach your TX Module to your Radio and, using the ExpressLRS Lua Script, verify if the firmware version has been updated.</li> </ol>"},{"location":"quick-start/transmitters/firmware-version/","title":"Checking FW Version","text":""},{"location":"quick-start/transmitters/firmware-version/#why-do-you-have-to-know-the-firmware-version","title":"Why do you have to know the Firmware Version?","text":"<p>Knowing the ExpressLRS Firmware Version that's currently in your devices will determine whether there is a need to update to a newer version or whether you can simply get your devices bound together without updating. For newcomers in the hobby, or for those just starting with ExpressLRS, it can be a bit daunting to flash a new device. </p> <p>It is still recommended that you update your gear to the latest firmware version to ensure you have all the bug fixes and latest features.</p>"},{"location":"quick-start/transmitters/firmware-version/#transmitter-module-firmware-version","title":"Transmitter Module Firmware Version","text":"<p>There are three methods to determine what firmware version you currently have on your Transmitter module</p> via Lua Scriptvia OLED Screenvia Web UI <ol> <li> <p>Press the SYS Key on your Radio.</p> <ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter Key to activate the Script.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, go back to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll to the bottom of the page and you should see the Current Version flashed into your TX module.</p> <ul> <li>Shows both have 3.2.1 Firmware Version with the Git Hash 8dbbdb.</li> </ul> <p> Colored Screens ExpressLRS Lua Script Version Line </p> <p> Mono Screens ExpressLRS Lua Script Version Line </p> </li> </ol> <p>If your External TX module is equipped with a Screen, the Home Screen should show the different parameters currently configured on the module. It will also show the current firmware version flashed into the module.</p> <p> OLED Screen Version Line </p> <ol> <li> <p>Put your module into WiFi mode.</p> using the ExpressLRS Lua Scriptusing Auto WiFi mode <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.<ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, go back to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>If the Script stopped and is showing a Syntax Error, do not worry. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware or both. It could also be due to the fact your TX module is on an earlier firmware version and you're using a more recent Lua Script.</li> </ul> </li> </ol> <ol> <li>With your TX module disconnected from your Radio module bay, power it up either via an external power source (2S) or by plugging in a USB cable into its USB Port.</li> <li>Let it be for at least 60s and the RGB LED will turn into a Green Breathing LED pattern indicating it is now in WiFi Mode.<ul> <li>The Auto WiFi On Interval setting controls how long the device will wait to initiate WiFi Mode when it's powered up and it's not getting valid CRSF packets.</li> <li>TX Modules with an OLED Screen will also show a message to indicate it is in WiFi Mode.</li> </ul> </li> </ol> </li> <li> <p>Scan for the <code>ExpressLRS TX</code> Access Point.      </p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also, try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Load the Web UI on your browser using these addresses:</p> <ul> <li> <p>http://10.0.0.1/ -If you have connected to the <code>ExpressLRS TX</code> Access Point</p> <p>Note</p> <p>This IP address is also often used by some routers. Computers with an ethernet connection to their routers will find that this page doesn't load the ExpressLRS Web UI and instead loads their router or ISP modem configuration dashboards.</p> <p>We recommend disconnecting from the network first or trying a different device instead, e.g. smartphone or tablet.</p> </li> <li> <p>http://elrs_tx.local - If you have previously set your Home WiFi SSID and Password into your TX Module when you flashed it.</p> <p>Note</p> <p>If your browser cannot resolve this address, chances are MDNS is not set up and working on your computer or network.</p> Use the IP Address instead! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code> which will list all the devices in the Network.</li> <li>Try each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in to your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> </ul> </li> <li> <p>The Banner of the Web UI should tell you the firmware version flashed into your TX module.</p> <p> The ExpressLRS Web UI Banner  </p> </li> </ol> <p>Once you have determined the firmware version that's currently flashed into your Transmitter module, you can now decide to whether keep using it as is or update to the latest version.</p> <p>Versioning Scheme</p> <p>The ExpressLRS Firmware Versioning scheme is based on the semantic versioning scheme.</p> <p>A Version is defined or formatted as \"Major.Minor.Patch\"</p> <pre><code>- major = major new feature and/or incompatible changes\n- minor = minor features or enhancements and/or new targets\n- patch = bug-fixes\n</code></pre> <p>That first number in the Version string should match between a TX Module and a Receiver. Examples:</p> <ul> <li>a TX Module with version string of 3.1.2 will sync and work with a Receiver with firmware version 3.0.1</li> <li>a TX Module with version string of 3.2.0 will NOT sync or bind with a Receiver with firmware version 2.4.0</li> </ul> <p>For the latest ExpressLRS firmware version, check the Releases page in Git Hub</p>"},{"location":"quick-start/transmitters/firmware-version/#i-know-the-version-what-now","title":"I Know the Version. What Now?","text":"I have an old versionI have a recent one <p>See the next page for the typical updating procedure or expand the <code>Updating Transmitters</code> section of the Menu on the left as shown below.</p> <p> </p> <p>You can also use the Search Bar on top of this page to search for the specific Updating/Flashing Guide for your TX Module.</p> <p>See the Binding Procedure to sync your TX Module with your Receiver.</p>"},{"location":"quick-start/transmitters/flash2400/","title":"NamimnoRC Flash","text":""},{"location":"quick-start/transmitters/flash2400/#flashingupdating-the-flash-oled-firmware","title":"Flashing/Updating the Flash OLED Firmware","text":"<p>Advisory</p> <p>If you are flashing/updating your TX module via WiFi for the first time from the factory firmware, or from an older firmware, to ExpressLRS 3.x firmware, you will first need to flash it to version 2.5.2, then flash it with the Repartitioner binary file (right click, save as/save file as). Should it complain about Target Mismatch, just click <code>Flash Anyway</code>. Only then you can flash to 3.x firmware via WiFi.</p> <p>Joshua Bardwell has a video about it here.</p> <p>Updating to 3.x via UART or ETX Passthrough doesn't require 2.5.2 firmware or the Repartitioner.</p> via WiFivia UART <p> </p> Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>NamimnoRC Flash OLED 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>NamimnoRC Flash OLED 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>NamimnoRC Flash OLED 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <ol> <li> <p>Connect your TX Module to your Computer via a USB Data Cable. Best if you remove it from your Radio.</p> </li> <li> <p>Determine whether your TX Module is being detected properly as a USB-SERIAL CH340 device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the TX Module is not being detected correctly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>You can download the drivers from here: <ul> <li>Windows Users will need the CH340 Drivers (Right-click, Save-as) installed (Unzip the contents of the file; Run the executable installer) for this to work properly. </li> <li>For other Operating Systems, head to this site to download your needed drivers.</li> </ul> </li> </ul> <p></p> </li> <li> <p>This TX Module has switches to change how the USB port interacts with the different components in the module. Make sure it is set as shown. This is the default position and unless you have moved it before, there's no need to open up the module.</p> <p> </p> <p>Attention</p> <p>The left position of the switch is for flashing the backpack. The right position of the switch is for flashing the TX itself. The right position is the default, so there is no need to open your module unless you need to unbrick your TX backpack!</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>NamimnoRC Flash OLED 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your module from USB. </li> <li>Reconnect your TX module into your Radio's External Module bay.</li> <li>Using the ExpressLRS Lua Script from the Tools Menu, check  if the firmware version got updated.</li> </ol>"},{"location":"quick-start/transmitters/flash2400/#flashingupdating-the-flash-non-oled-firmware","title":"Flashing/Updating the Flash Non-OLED Firmware","text":"<p>Attention</p> <p>ExpressLRS 3.5.x will be the last version to support STM32-based hardware. This includes the Happymodel PP, ES915 Tx and Rx, early NamimnoRC Flash and Voyager, FrSky R9, SIYI and ImmersionRC hardware.</p> <p>The STM32 platform's limited compute resources and feature gaps (WiFi, Bluetooth, Backpacks) made for an inferior version of ExpressLRS that necessitated disproportionate maintenance burden for the Dev Team.</p> via Stock_BLvia STLink <p> </p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>NamimnoRC Flash 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>Stock_BL</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>A Temp folder will open up with the firmware.elrs file. Copy-paste the firmware.elrs file into your Radio's SD Card (preferably to the <code>/FIRMWARE</code> folder for easy access).</p> </li> <li> <p>On your radio, open the System Menu. </p> <ul> <li>On newer radios, you can press the SYS key to open the System Menu</li> <li>On older radios, or radios that only have a menu key, long-press the Menu key to open the System Menu</li> </ul> </li> <li> <p>Using the Page key/s, navigate to the SD-HC Card page, scroll-down and open the <code>FIRMWARE</code> folder where you can find the firmware.elrs file.</p> </li> <li> <p>Highlight the file and press-hold the Enter button and select \"Flash External ELRS\". Wait for the firmware to be written.</p> No Sync (click/tap to expand) <ul> <li>Make sure you have updated the OpenTX/EdgeTX firmware of your radio to a newer version</li> <li>Make sure the current model selected on the radio is set up for ExpressLRS Use. See the [Radio Preparation] guide.</li> </ul> </li> <li> <p>With the ExpressLRS Lua Script in the Tools page, verify if the firmware version has been updated.</p> </li> </ol> <p> </p> <p>Attention</p> <p>Only use this method if the firmware has been corrupted.</p> <ol> <li> <p>Disassemble your TX Module to get access to the mainboard.</p> <p> </p> <p> </p> </li> <li> <p>Connect your STLink V2 dongle to the pads shown in the image below.</p> <p> </p> </li> <li> <p>Connect your STLink V2 dongle to your Computer's USB Port. Make sure it is being detected properly.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>NamimnoRC Flash 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>STLink</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>Disconnect the STLink V2 dongle from the TX Module PCB and reassemble the module.</p> </li> <li>Reattach your TX Module into your Radio and, using the ExpressLRS Lua Script, verify if the firmware version has been updated.</li> </ol>"},{"location":"quick-start/transmitters/frsky-r9modules/","title":"Frsky R9 Modules","text":"<p>Attention</p> <p>ExpressLRS 3.5.x will be the last version to support STM32-based hardware. This includes the Happymodel PP, ES915 Tx and Rx, early NamimnoRC Flash and Voyager, FrSky R9, SIYI and ImmersionRC hardware.</p> <p>The STM32 platform's limited compute resources and feature gaps (WiFi, Bluetooth, Backpacks) made for an inferior version of ExpressLRS that necessitated disproportionate maintenance burden for the Dev Team.</p> <p>Warning</p> <p>The R9M Lite Pro can not be flashed via OpenTX or EdgeTX (Stock_BL method), and therefore requires an STLink v2 to flash. See the guide below</p>"},{"location":"quick-start/transmitters/frsky-r9modules/#flashingupdating-tx-module-firmware","title":"Flashing/Updating TX Module Firmware","text":"via Stock_BLvia STLink <p>Info</p> <p>This method requires OpenTX 2.3.12 or newer; or EdgeTX 2.4.0 or newer.</p> <ol> <li> <p>Download and save <code>r9m_elrs_bl.frk</code>(14kb) onto the SD card of your radio, in the <code>/FIRMWARE</code> folder.</p> </li> <li> <p>Flash <code>r9m_elrs_bl.frk</code> to your TX module:</p> <ul> <li>Access the System Menu on your radio. <ul> <li>On newer radios, you can press the SYS key to open the System Menu</li> <li>On older radios, or radios that only have a menu key, long-press the Menu key to open the System Menu</li> </ul> </li> <li>Using the Page key/s, navigate to the SD-HC Card page.</li> <li>Scroll-down and open the <code>FIRMWARE</code> folder where you can find the r9m_elrs_bl.frk file.</li> <li>Flash the frk file by holding Enter key and selecting \"Flash external module\"</li> </ul> <p>FYI</p> <p>You only need to flash the Bootloader ONCE. After it's flashed into the module, you don't have to reflash it in every update.</p> <p>Video Guide:  </p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>FrSky 900 MHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>FrSky R9M 900MHz TX</code></li> <li><code>FrSky R9M Lite 900MHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>Stock_BL</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>A Temp folder will open up with the firmware.elrs file. Copy-paste the firmware.elrs file into your Radio's SD Card (preferably to the <code>/FIRMWARE</code> folder for easy access).</p> </li> <li> <p>On your radio, open the System Menu. </p> <ul> <li>On newer radios, you can press the SYS key to open the System Menu</li> <li>On older radios, or radios that only have a menu key, long-press the Menu key to open the System Menu</li> </ul> </li> <li> <p>Using the Page key/s, navigate to the SD-HC Card page, scroll-down and open the <code>FIRMWARE</code> folder where you can find the firmware.elrs file.</p> </li> <li> <p>Highlight the file and press-hold the Enter button and select \"Flash External ELRS\". Wait for the firmware to be written.</p> No Sync (click/tap to expand) <ul> <li>Make sure you have updated the OpenTX/EdgeTX firmware of your radio to a newer version</li> <li>Make sure the current model selected on the radio is set up for ExpressLRS Use. See the Radio Preparation guide.</li> </ul> </li> <li> <p>With the ExpressLRS Lua Script in the System Menu's Tools page, verify if the firmware version has been updated.</p> </li> </ol> <p> </p> <p>Warning</p> <p>This method is an irreversible one. You will not be able to go back to FrSky firmware with this method. You have been warned!</p> <ol> <li> <p>Carefully disassemble your TX Module to get access to the mainboard.</p> </li> <li> <p>Connect your STLink V2 dongle to the pads shown in the images below:</p> <p> R9M STLink Connection </p> <p> R9M Lite STLink Connection </p> <p> R9M Lite Pro STLink Connection </p> </li> <li> <p>Connect your STLink V2 dongle to your Computer's USB Port. Make sure it is being detected correctly.</p> </li> <li> <p>Before flashing, disable <code>'Readout Protection'</code>. To do this, download the ST-LINK Utility and follow this quick how to video. After such, you can now disconnect (Target -&gt; Disconnect) and close the ST-Link Utility.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>FrSky 900 MHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>FrSky R9M 900MHz TX</code></li> <li><code>FrSky R9M Lite 900MHz TX</code></li> <li><code>FrSky R9M Lite Pro 900MHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>STLink</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>Disconnect the STLink V2 dongle from the TX Module PCB and reassemble the module.</p> </li> <li>Reattach your TX Module into your Radio and, using the ExpressLRS Lua Script, verify if the firmware version has been updated.</li> </ol>"},{"location":"quick-start/transmitters/ghost2400/","title":"IMRC Ghost","text":"<p>Attention</p> <p>ExpressLRS 3.5.x will be the last version to support STM32-based hardware. This includes the Happymodel PP, ES915 Tx and Rx, early NamimnoRC Flash and Voyager, FrSky R9, SIYI and ImmersionRC hardware.</p> <p>The STM32 platform's limited compute resources and feature gaps (WiFi, Bluetooth, Backpacks) made for an inferior version of ExpressLRS that necessitated disproportionate maintenance burden for the Dev Team.</p>"},{"location":"quick-start/transmitters/ghost2400/#flashingupdating-tx-module-firmware","title":"Flashing/Updating TX Module Firmware","text":"via STLinkvia Stock_BL <p>Warning</p> <p>This method is an irreversible one. You will not be able to go back to ImmersionRC Ghost firmware with this method. You have been warned!</p> <p>Video Guide(10 min):</p> <p> </p> <ol> <li> <p>Carefully disassemble your TX Module to get access to the mainboard.</p> </li> <li> <p>Connect your STLink V2 dongle to the pads shown in the images below:</p> <ul> <li>Wire <code>3.3v</code>, <code>GND</code>, <code>CLK</code>, and <code>DIO</code> to their respective pins on your part from the StLink. (You can power with the StLink but in the second image, the radio is used to power the module). </li> </ul> <p> </p> </li> <li> <p>Connect your STLink V2 dongle to your Computer's USB Port. Make sure it is being detected correctly.</p> </li> <li> <p>Before flashing, disable <code>'Readout Protection'</code>. To do this, download the ST-LINK Utility and follow this quick how to video. After such, you can now disconnect (Target -&gt; Disconnect) and close the ST-Link Utility.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category:</p> <ul> <li><code>ImmersionRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>Ghost 2.4GHz TX</code></li> <li><code>Ghost Lite 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>STLink</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>Disconnect the STLink V2 dongle from the TX Module PCB and reassemble the module.</p> </li> <li>Reattach your TX Module into your Radio and, using the ExpressLRS Lua Script, verify if the firmware version has been updated.</li> </ol> <p> </p> <p>Info</p> <p>This method requires OpenTX 2.3.12 or newer; or EdgeTX 2.4.0 or newer.</p> <p>This method can only be used to UPDATE the firmware on an already-converted Ghost Module</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category:</p> <ul> <li><code>ImmersionRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>Ghost 2.4GHz TX</code></li> <li><code>Ghost Lite 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>Stock_BL</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>A Temp folder will open up with the firmware.elrs file. Copy-paste the firmware.elrs file into your Radio's SD Card (preferably to the <code>/FIRMWARE</code> folder for easy access).</p> </li> <li> <p>On your radio, open the System Menu. </p> <ul> <li>On newer radios, you can press the SYS key to open the System Menu</li> <li>On older radios, or radios that only have a menu key, long-press the Menu key to open the System Menu</li> </ul> </li> <li> <p>Using the Page key/s, navigate to the SD-HC Card page, scroll-down and open the <code>FIRMWARE</code> folder where you can find the firmware.elrs file.</p> </li> <li> <p>Highlight the file and press-hold the Enter button and select \"Flash External ELRS\". Wait for the firmware to be written.</p> No Sync (click/tap to expand) <ul> <li>Make sure you have updated the OpenTX/EdgeTX firmware of your radio to a newer version</li> <li>Make sure the current model selected on the radio is set up for ExpressLRS Use. See the Radio Preparation guide.</li> </ul> </li> <li> <p>With the ExpressLRS Lua Script in the Tools page, verify if the firmware version has been updated.</p> </li> </ol>"},{"location":"quick-start/transmitters/hglrc-hermes/","title":"HGLRC Hermes","text":"<p>Advisory</p> <p>If you are flashing/updating your TX module via WiFi for the first time from the factory firmware, or from an older firmware, to ExpressLRS 3.x firmware, you will first need to flash it to version 2.5.2, then flash it with the Repartitioner binary file (right click, save as/save file as). Should it complain about Target Mismatch, just click <code>Flash Anyway</code>. Only then you can flash to 3.x firmware via WiFi.</p> <p>Joshua Bardwell has a video about it here.</p> <p>Updating to 3.x via UART or ETX Passthrough doesn't require 2.5.2 firmware or the Repartitioner.</p>"},{"location":"quick-start/transmitters/hglrc-hermes/#flashingupdating-your-tx-module-firmware","title":"Flashing/Updating your TX Module Firmware","text":"via WiFivia UART Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>HGLRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HGLRC Hermes 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>HGLRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HGLRC Hermes 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>HGLRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HGLRC Hermes 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <ol> <li> <p>Attach your USB cable to the module while pressing and holding the recessed button at the back of the module. The location of the button is shown in the image below.</p> <p> </p> </li> <li> <p>Determine whether your TX Module is being detected properly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the TX Module is not being detected correctly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>You can download the drivers from here: CP210x Drivers<ul> <li>Windows Users should download the <code>CP210x Windows Drivers</code> package for easier installation. Unzip/Extract the contents of the package and run the setup wizard.</li> </ul> </li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>HGLRC 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>HGLRC Hermes 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your module from USB.</li> <li>Reconnect your TX module into your Radio's External Module bay.</li> <li>Using the ExpressLRS Lua Script from the Tools Menu, check  if the firmware version got updated.</li> </ol>"},{"location":"quick-start/transmitters/iflight-commando/","title":"iFlight Commando","text":"<p>WARNING</p> <p>Make sure you are selecting the right Device Category (2.4GHz or 900MHz) that's appropriate for the hardware you have. You cannot flash a 2.4GHz module with the firmware for the 900MHz module and expect it to work properly. Likewise, you cannot flash a 900MHz module with the firmware for the 2.4GHz module. They have different sets of hardware.</p> <p>You can damage your hardware if you do so. You have been warned!</p> <p>Advisory</p> <p>If you are flashing/updating your TX module via WiFi for the first time from the factory firmware, or from an older firmware, to ExpressLRS 3.x firmware, you will first need to flash it to version 2.5.2, then flash it with the Repartitioner binary file (right click, save as/save file as). Should it complain about Target Mismatch, just click <code>Flash Anyway</code>. Only then you can flash to 3.x firmware via WiFi.</p> <p>Joshua Bardwell has a video about it here.</p> <p>Updating to 3.x via UART or ETX Passthrough doesn't require 2.5.2 firmware or the Repartitioner.</p>"},{"location":"quick-start/transmitters/iflight-commando/#flashingupdating-your-tx-module-firmware","title":"Flashing/Updating your TX Module Firmware","text":"via WiFivia UART Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Categories:</p> <ul> <li><code>iFlight 2.4 GHz</code></li> <li><code>iFlight 900 MHz</code></li> </ul> </li> <li> <p>Devices: </p> <ul> <li><code>iFlight 2.4GHz TX</code> &amp; <code>iFlight 2.4GHz TX V2</code></li> <li><code>iFlight 900MHz TX</code> &amp; <code>iFlight 900MHz TX V2</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Categories:</p> <ul> <li><code>iFlight 2.4 GHz</code></li> <li><code>iFlight 900 MHz</code></li> </ul> </li> <li> <p>Devices: </p> <ul> <li><code>iFlight 2.4GHz TX</code> &amp; <code>iFlight 2.4GHz TX V2</code></li> <li><code>iFlight 900MHz TX</code> &amp; <code>iFlight 900MHz TX V2</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Categories:</p> <ul> <li><code>iFlight 2.4 GHz</code></li> <li><code>iFlight 900 MHz</code></li> </ul> </li> <li> <p>Devices: </p> <ul> <li><code>iFlight 2.4GHz TX</code> &amp; <code>iFlight 2.4GHz TX V2</code></li> <li><code>iFlight 900MHz TX</code> &amp; <code>iFlight 900MHz TX V2</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <ol> <li> <p>Unscrew the two screws holding the Transmitter Module to the back of the radio handset. Carefully lift the Transmitter Module to get access to the USB-c port. Do not tug too much as there are wires connecting the Transmitter Module to the mainboard of the radio handset, along with the antenna cable of the module itself.</p> <p> TX Module and USB-C connection </p> </li> <li> <p>Determine whether your TX Module is being detected properly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the TX Module is not being detected correctly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>You can download the drivers from here: CP210x Drivers<ul> <li>Windows Users should download the <code>CP210x Windows Drivers</code> package for easier installation. Unzip/Extract the contents of the package and run the setup wizard.</li> </ul> </li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Categories:</p> <ul> <li><code>iFlight 2.4 GHz</code></li> <li><code>iFlight 900 MHz</code></li> </ul> </li> <li> <p>Devices: </p> <ul> <li><code>iFlight 2.4GHz TX</code> &amp; <code>iFlight 2.4GHz TX V2</code></li> <li><code>iFlight 900MHz TX</code> &amp; <code>iFlight 900MHz TX V2</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your module from USB.</li> <li>Reassemble the TX module into the Radio properly.</li> <li>Using the ExpressLRS Lua Script from the Tools Menu, check  if the firmware version got updated.</li> </ol>"},{"location":"quick-start/transmitters/jumper-aion/","title":"Jumper Aion Nano","text":"<p>Advisory</p> <p>If you are flashing/updating your TX module via WiFi for the first time from the factory firmware, or from an older firmware, to ExpressLRS 3.x firmware, you will first need to flash it to version 2.5.2, then flash it with the Repartitioner binary file (right click, save as/save file as). Should it complain about Target Mismatch, just click <code>Flash Anyway</code>. Only then you can flash to 3.x firmware via WiFi.</p> <p>Joshua Bardwell has a video about it here.</p> <p>Updating to 3.x via UART or ETX Passthrough doesn't require 2.5.2 firmware or the Repartitioner.</p>"},{"location":"quick-start/transmitters/jumper-aion/#flashingupdating-your-tx-module-firmware","title":"Flashing/Updating your TX Module Firmware","text":"via WiFivia UART Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION Nano 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION Nano 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION Nano 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <ol> <li> <p>Connect your TX Module to your Computer via a USB Data Cable. Best if you remove it from your Radio.</p> </li> <li> <p>Determine whether your TX Module is being detected properly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the TX Module is not being detected correctly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>You can download the drivers from here: CP210x Drivers or CH9102<ul> <li>Windows Users should download the <code>CP210x Windows Drivers</code> package for easier installation. Unzip/Extract the contents of the package and run the setup wizard.</li> </ul> </li> </ul> <p>Note</p> <p>Jumper seems to have switched to a different UART adapter chip on some of these devices. They should be detected as USB-Enhanced Serial CH9102.</p> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION Nano 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your module from USB.</li> <li>Reconnect your TX module into your Radio's External Module bay.</li> <li>Using the ExpressLRS Lua Script from the Tools Menu, check if the firmware version got updated.</li> </ol>"},{"location":"quick-start/transmitters/jumper-internal/","title":"Internal Jumper TLite V2","text":""},{"location":"quick-start/transmitters/jumper-internal/#flashingupdating-your-tx-module-firmware","title":"Flashing/Updating your TX Module Firmware","text":"via WiFivia ETX Passthrough Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION T-Lite 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Long-press the SYS Key on your Radio to display the Tools page, where you can find the Lua Scripts.</p> <ul> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION T-Lite 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION T-Lite 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <p>Info</p> <p>ETX Passthrough is the result of the collaborative effort between RadioMaster, EdgeTX and ExpressLRS.</p> <p>It is only available on Radios with Internal ExpressLRS Modules.</p> <p>Before you start, ensure you have the latest EdgeTX firmware version on your Radio. Consult the EdgeTX documentation regarding the updating process.</p> <p>For the <code>Jumper T-Lite V2</code>, update it to at least EdgeTX 2.8.0 (f6d140e) for full EdgeTX support.</p> <p>Hot Tip</p> <p>To ensure updating success with this method, update the EdgeTX firmware on the radio to at least EdgeTX 2.8.0 (f6d140e, released Nov. 27, 2022). The EdgeTX Firmware that comes with this radio is a pre-release version.</p> Simplest EdgeTX Updating Procedure (click/tap to expand) <ol> <li>Visit http://buddy.edgetx.org/.</li> <li>Select the EdgeTX version and the Radio Model you want to update from the Left-hand side column.</li> <li>Click the Download .bin button at the bottom of the page.</li> <li>Save the firmware file into your Radio's SD Card, inside the <code>Firmware</code> Folder.</li> <li>Reboot the Radio into DFU/Bootloader mode.<ul> <li>Turn off your radio.</li> <li>Press and hold the two horizontal Trim switches then press the Power button. The Screen should Light up. Let go of the buttons.</li> <li>Some Radios have a different procedure, like the BetaFPV Lite Radio 3 Pro. Consult the Manual for the steps to get it into this DFU/Bootloader mode.</li> </ul> </li> <li>Select <code>Write Firmware</code>.</li> <li>Navigate to the EdgeTX firmware file you just downloaded.</li> <li>Follow the screen prompts.</li> <li>Once Writing is complete, reboot the radio.</li> <li>Check the Radio's Version Page to verify you have the version you need.</li> </ol> <p>Also, make sure you have an internal ELRS module on your Radio. The following steps only apply to handsets with ExpressLRS-specific internal modules.</p> <p>The current Model on the radio should be using the Internal ExpressLRS Module. Test this by loading the ExpressLRS Lua Script from the Tools Menu.</p> <p> </p> <p>There's one more setting you want to make sure is set properly before proceeding.</p> <ol> <li>Long-press the SYS Key on the Radio.<ul> <li>Consult your Radio User's Manual on how to get to the System Menu.</li> </ul> </li> <li>Press the PAGE Keys until you reach the Hardware Page.<ul> <li>On this radio, a short-press on the SYS Key is equivalent to &lt; PAGE while a short-press on the MDL Key is equivalent to PAGE &gt; .</li> </ul> </li> <li>Scroll down until you see the Serial Ports settings.<ul> <li>Press the Down button.</li> </ul> </li> <li>Select or highlight USB-VCP by pressing the Down or Up Keys. Press Enter to edit the setting and use the Down or Up Keys to set it to <code>CLI</code> mode. Press Enter once more to confirm the changes.</li> <li>Exit the Hardware menu by long-pressing RTN Key.</li> </ol> <p>Now follow the next steps to get your Internal ExpressLRS Module Updated:</p> <ol> <li> <p>Connect your powered-up Radio to your Computer via a USB Data Cable.</p> <p> </p> </li> <li> <p>On your Radio, scroll down and select <code>USB Serial(VCP)</code> then press the Enter Key. Set your Radio aside in the meantime.</p> <p> </p> </li> <li> <p>On your Computer, check whether your Radio is being recognized correctly as a STMicroelectronics Virtual COM Port device.</p> <p>Important</p> <p>This is a vital step and a common failure point. Pay attention.</p> <p>Windows Users can use Device Manager to check whether the Radio is being recognized correctly.</p> <p> </p> <p> Yellow Caution Triangles in the Device Manager, or any mention of <code>&lt;Radio Name&gt; Serial Port</code> means drivers aren't installed.</p> <p>Download the Driver package first. Unzip/extract the contents of the package and run/execute (double-click) the installer file (<code>VCP_V1.5.0_Setup_W7_x64_64bits.exe</code> for Windows 10/11 Users). </p> <p>Once Drivers are installed, check again if the Radio is now being recognized correctly. You may have to unplug-replug the USB Cable first or even reboot your computer.</p> <p>You only have to do this once usually.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION T-Lite 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>EdgeTXPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your Radio from USB.</li> <li> <p>Using the ExpressLRS Lua Script from the Tools Menu, check if the firmware version got updated.</p> <p> </p> </li> </ol>"},{"location":"quick-start/transmitters/jumper-t14-t15-internal/","title":"Internal Jumper T14/T15","text":"<p>WARNING</p> <p>Make sure you are selecting the right Device Category (2.4GHz or 900MHz) that's appropriate for the hardware you have. You cannot flash a 2.4GHz module with the firmware for the 900MHz module and expect it to work properly. Likewise, you cannot flash a 900MHz module with the firmware for the 2.4GHz module. They have different sets of hardware.</p> <p>You can damage your hardware if you do so. You have been warned!</p>"},{"location":"quick-start/transmitters/jumper-t14-t15-internal/#flashingupdating-your-tx-module-firmware","title":"Flashing/Updating your TX Module Firmware","text":"via WiFivia ETX Passthrough Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> <li><code>Jumper 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION T-14 2.4GHz TX</code></li> <li><code>Jumper AION T-15 2.4GHz TX</code></li> <li><code>Jumper AION T-14 900M TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.      </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Long-press the SYS Key on your Radio to display the Tools page, where you can find the Lua Scripts.</p> <ul> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> <li><code>Jumper 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION T-14 2.4GHz TX</code></li> <li><code>Jumper AION T-15 2.4GHz TX</code></li> <li><code>Jumper AION T-14 900M TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> <li><code>Jumper 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION T-14 2.4GHz TX</code></li> <li><code>Jumper AION T-15 2.4GHz TX</code></li> <li><code>Jumper AION T-14 900M TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <p>Info</p> <p>ETX Passthrough is the result of the collaborative effort between RadioMaster, EdgeTX and ExpressLRS.</p> <p>It is only available on Radios with Internal ExpressLRS Modules.</p> <p>Before you start, ensure you have the latest EdgeTX firmware version on your Radio. Consult the EdgeTX documentation regarding the updating process.</p> <p>For any of the variants of the <code>Jumper T14</code> or <code>Jumper T15</code>, the EdgeTX firmware that came with them (EdgeTX ~2.10.0) should work fine and there's no need to update EdgeTX.</p> Simplest EdgeTX Updating Procedure (click/tap to expand) <ol> <li>Visit http://buddy.edgetx.org/.</li> <li>Select the EdgeTX version and the Radio Model you want to update from the Left-hand side column.</li> <li>Click the Download .bin button at the bottom of the page.</li> <li>Save the firmware file into your Radio's SD Card, inside the <code>Firmware</code> Folder.</li> <li>Reboot the Radio into DFU/Bootloader mode.<ul> <li>Turn off your radio.</li> <li>Press and hold the two horizontal Trim switches then press the Power button. The Screen should Light up. Let go of the buttons.</li> <li>Some Radios have a different procedure, like the BetaFPV Lite Radio 3 Pro. Consult the Manual for the steps to get it into this DFU/Bootloader mode.</li> </ul> </li> <li>Select <code>Write Firmware</code>.</li> <li>Navigate to the EdgeTX firmware file you just downloaded.</li> <li>Follow the screen prompts.</li> <li>Once Writing is complete, reboot the radio.</li> <li>Check the Radio's Version Page to verify you have the version you need.</li> </ol> <p>Also make sure the current active Model on the radio is using the Internal ExpressLRS Module. Test this by loading the ExpressLRS Lua Script from the Tools Menu.</p> <p> </p> <p>There's one more setting you want to make sure is set properly before proceeding.</p> <ol> <li>Long-press the Menu \"Menu\" Key on the Radio.<ul> <li>Consult your Radio User's Manual on how to get to the System Menu.</li> </ul> </li> <li>Press the PAGE Keys until you reach the Hardware Page.</li> <li>Scroll down until you see the Serial Ports settings.<ul> <li>Press the Down button.</li> </ul> </li> <li>Select or highlight USB-VCP by pressing the Down or Up Keys. Press Enter to edit the setting and use the Down or Up Keys to set it to <code>CLI</code> mode. Press Enter once more to confirm the changes.</li> <li>Exit the Hardware menu by long-pressing RTN Key.</li> </ol> <p>Now follow the next steps to get your Internal ExpressLRS Module Updated:</p> <ol> <li> <p>Connect your powered-up Radio to your Computer via a USB Data Cable.</p> <p> </p> </li> <li> <p>On your Radio, scroll down and select <code>USB Serial(VCP)</code> then press the Enter Key. Set your Radio aside in the meantime.</p> <p> </p> </li> <li> <p>On your Computer, check whether your Radio is being recognized correctly as a STMicroelectronics Virtual COM Port device.</p> <p>Important</p> <p>This is a vital step and a common failure point. Pay attention.</p> <p>Windows Users can use Device Manager to check whether the Radio is being recognized correctly.</p> <p> </p> <p> Yellow Caution Triangles in the Device Manager, or any mention of <code>&lt;Radio Name&gt; Serial Port</code> means drivers aren't installed.</p> <p>Download the Driver package first. Unzip/extract the contents of the package and run/execute (double-click) the installer file (<code>VCP_V1.5.0_Setup_W7_x64_64bits.exe</code> for Windows 10/11 Users). </p> <p>Once Drivers are installed, check again if the Radio is now being recognized correctly. You may have to unplug-replug the USB Cable first or even reboot your computer.</p> <p>You only have to do this once usually.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> <li><code>Jumper 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper AION T-14 2.4GHz TX</code></li> <li><code>Jumper AION T-15 2.4GHz TX</code></li> <li><code>Jumper AION T-14 900M TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>EdgeTXPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your Radio from USB.</li> <li>Using the ExpressLRS Lua Script from the Tools Menu, check if the firmware version got updated.</li> </ol>"},{"location":"quick-start/transmitters/jumper-t20-internal/","title":"Internal Jumper T20","text":"<p>WARNING</p> <p>Make sure you are selecting the right Device Category (2.4GHz or 900MHz) that's appropriate for the hardware you have. You cannot flash a 2.4GHz module with the firmware for the 900MHz module and expect it to work properly. Likewise, you cannot flash a 900MHz module with the firmware for the 2.4GHz module. They have different sets of hardware.</p> <p>The T20 Gemini firmware will ONLY work on the T20 Gemini. Do not Flash this target on the other T20 variants.</p> <p>You can damage your hardware if you do so. You have been warned!</p>"},{"location":"quick-start/transmitters/jumper-t20-internal/#flashingupdating-your-tx-module-firmware","title":"Flashing/Updating your TX Module Firmware","text":"via WiFivia ETX Passthrough Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> <li><code>Jumper 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper Gemini T-20 2.4GHz TX</code></li> <li><code>Jumper AION T-20 2.4GHz TX</code></li> <li><code>Jumper AION T-20 900M TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.      </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Long-press the SYS Key on your Radio to display the Tools page, where you can find the Lua Scripts.</p> <ul> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> <li><code>Jumper 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper Gemini T-20 2.4GHz TX</code></li> <li><code>Jumper AION T-20 2.4GHz TX</code></li> <li><code>Jumper AION T-20 900M TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> <li><code>Jumper 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper Gemini T-20 2.4GHz TX</code></li> <li><code>Jumper AION T-20 2.4GHz TX</code></li> <li><code>Jumper AION T-20 900M TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <p>Info</p> <p>ETX Passthrough is the result of the collaborative effort between RadioMaster, EdgeTX and ExpressLRS.</p> <p>It is only available on Radios with Internal ExpressLRS Modules.</p> <p>Before you start, ensure you have the latest EdgeTX firmware version on your Radio. Consult the EdgeTX documentation regarding the updating process.</p> <p>For any of the variants of the <code>Jumper T20</code>, the EdgeTX firmware that came with it (pre EdgeTX 2.9.0) should work fine and there's no need to update it.</p> Simplest EdgeTX Updating Procedure (click/tap to expand) <ol> <li>Visit http://buddy.edgetx.org/.</li> <li>Select the EdgeTX version and the Radio Model you want to update from the Left-hand side column.</li> <li>Click the Download .bin button at the bottom of the page.</li> <li>Save the firmware file into your Radio's SD Card, inside the <code>Firmware</code> Folder.</li> <li>Reboot the Radio into DFU/Bootloader mode.<ul> <li>Turn off your radio.</li> <li>Press and hold the two horizontal Trim switches then press the Power button. The Screen should Light up. Let go of the buttons.</li> <li>Some Radios have a different procedure, like the BetaFPV Lite Radio 3 Pro. Consult the Manual for the steps to get it into this DFU/Bootloader mode.</li> </ul> </li> <li>Select <code>Write Firmware</code>.</li> <li>Navigate to the EdgeTX firmware file you just downloaded.</li> <li>Follow the screen prompts.</li> <li>Once Writing is complete, reboot the radio.</li> <li>Check the Radio's Version Page to verify you have the version you need.</li> </ol> <p>The current active Model on the radio should be using the Internal ExpressLRS Module. Test this by loading the ExpressLRS Lua Script from the Tools Menu.</p> <p> </p> <p>There's one more setting you want to make sure is set properly before proceeding.</p> <ol> <li>Long-press the Menu \"Menu\" Key on the Radio.<ul> <li>Consult your Radio User's Manual on how to get to the System Menu.</li> </ul> </li> <li>Press the PAGE Keys until you reach the Hardware Page.</li> <li>Scroll down until you see the Serial Ports settings.<ul> <li>Press the Down button.</li> </ul> </li> <li>Select or highlight USB-VCP by pressing the Down or Up Keys. Press Enter to edit the setting and use the Down or Up Keys to set it to <code>CLI</code> mode. Press Enter once more to confirm the changes.</li> <li>Exit the Hardware menu by long-pressing RTN Key.</li> </ol> <p>Now follow the next steps to get your Internal ExpressLRS Module Updated:</p> <ol> <li> <p>Connect your powered-up Radio to your Computer via a USB Data Cable.</p> <p> </p> </li> <li> <p>On your Radio, scroll down and select <code>USB Serial(VCP)</code> then press the Enter Key. Set your Radio aside in the meantime.</p> <p> </p> </li> <li> <p>On your Computer, check whether your Radio is being recognized correctly as a STMicroelectronics Virtual COM Port device.</p> <p>Important</p> <p>This is a vital step and a common failure point. Pay attention.</p> <p>Windows Users can use Device Manager to check whether the Radio is being recognized correctly.</p> <p> </p> <p> Yellow Caution Triangles in the Device Manager, or any mention of <code>&lt;Radio Name&gt; Serial Port</code> means drivers aren't installed.</p> <p>Download the Driver package first. Unzip/extract the contents of the package and run/execute (double-click) the installer file (<code>VCP_V1.5.0_Setup_W7_x64_64bits.exe</code> for Windows 10/11 Users). </p> <p>Once Drivers are installed, check again if the Radio is now being recognized correctly. You may have to unplug-replug the USB Cable first or even reboot your computer.</p> <p>You only have to do this once usually.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Jumper 2.4 GHz</code></li> <li><code>Jumper 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Jumper Gemini T-20 2.4GHz TX</code></li> <li><code>Jumper AION T-20 2.4GHz TX</code></li> <li><code>Jumper AION T-20 900M TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>EdgeTXPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your Radio from USB.</li> <li>Using the ExpressLRS Lua Script from the Tools Menu, check if the firmware version got updated.</li> </ol>"},{"location":"quick-start/transmitters/lua-howto/","title":"The ExpressLRS Lua Script","text":""},{"location":"quick-start/transmitters/lua-howto/#installing-the-lua-script","title":"Installing the Lua Script","text":"<p>Download the ELRS v3 Lua Script (you can simply right-click, save-as) into your radio's SD Card under the <code>Scripts/Tools</code> folder.</p> <p></p> <p>Access the script by navigating to your radio's System Menu.</p> <ol> <li>Press the SYS Key on your Radio.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>You are now in the Tools Menu where Lua Scripts can be found. Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p>Here's how it looks in the Tools menu (B&amp;W and Color Screens):</p> <p> </p> <p> </p> </li> <li> <p>Press Enter to Load it.</p> </li> </ol> Stuck at <code>Loading...</code> (click/tap to expand) <p>Go back to the Radio Preparation Guide and make sure the current model is configured for ExpressLRS use.</p> <p>Also set your Internal or External RF Baudrate to a higher value if the Script still doesn't load after proper configuration of your Model. </p> <p>As of 3.3.0:</p> <ul> <li>500Hz or faster packet rates require &gt;400K Baudrate.</li> <li>333Hz is the fastest packet rate you can use with 400K Baudrate.</li> </ul>"},{"location":"quick-start/transmitters/lua-howto/#understanding-and-using-the-lua-script","title":"Understanding and Using the Lua Script","text":""},{"location":"quick-start/transmitters/lua-howto/#the-header","title":"The Header","text":"<p>The first line, \"Header\", will show you some information about your ExpressLRS link. </p> <p></p> Module Identifier <p>Shows the name of the current active Transmitter Module or Device.</p> Packet Counter <p>Shows the number of Bad and Good Packets the TX Module receives from the Radio. The second set of number should match your selected Packet Rate. e.g. If you've set your Packet Rate to 500Hz, the Packet Counter should show 0/500, which means you're not getting any Bad Packets ( 0 Bad Packets ) and only getting Good Packets ( 500 Good Packets ). Any small fluctuation is normal and often goes back to 100% Good Packets, especially when you change a setting and it's committed into memory. </p> <p>Should the indicator starts showing Bad Packets, and Good Packets goes down, it isn't a good situation. Make sure your module is not overheating and it's still getting a good connection with the radio. This is most dangerous when you're armed and flying several kilometers/miles out, as this could mean a sudden Failsafe.</p> Connection Indicator <p>Shows the current RC Link status. When not connected to any receiver, it will show a dash (<code>-</code>); while a <code>C</code> shows up when bound and connected.</p> <p>The <code>Model Mismatch</code> message will also show up to indicate you are connected to a receiver, but the model selected on your radio is incorrect. See the Model Match page for more info about Model Matching.</p> <p></p> <p>The <code>Armed</code> message will show up if you have the Arming Switch active (High, ~2000us). This is meant to warn users that changing parameters could result in a desync or disconnection with a receiver, resulting into a FAILSAFE.</p> <p>If you do not meant to have your system Armed and ready for flying, make sure to toggle this switch to the Disarmed position (Low, ~1000us). Update your CH5 settings on the radio so that the output of this switch is correct (Low = disarmed; High = armed). See Switch Configs.</p> <p></p> <p>WARNING</p> <p>Do not change parameters while ARMED. When a parameter is changed, the module goes into Parameter Commit mode, interrupting the normal loop. This could result in a desync on some hardware combination which would result in a FAILSAFE.</p>"},{"location":"quick-start/transmitters/lua-howto/#version-line","title":"Version Line","text":"<p>The Version Line, found near the bottom of the Lua Script, indicates the firmware version flashed into the Device. This is present on both TX Modules and Receivers.</p> <p></p> <p></p> <p></p> <p>From these examples:</p> <ul> <li> <p><code>3.3.0</code> - The numerical Version Number, in the form of <code>Major.Minor.Patch</code>.</p> <ul> <li>See semantic versioning scheme for the origins of these numbers.</li> </ul> </li> <li> <p><code>ISM2G4</code> - The Regulatory Domain set into the Device. TX and RX Regulatory Domains should match.</p> </li> <li> <p><code>ae9df3</code> - The Git commit hash for the version or branch.</p> </li> </ul>"},{"location":"quick-start/transmitters/lua-howto/#folder-titles","title":"Folder Titles","text":"<p>Items with <code>&gt;</code> before the name is a folder that when selected shows another level of customization. <code>TX Power</code>, <code>VTX Administrator</code>, <code>Wifi Connectivity</code> are examples of these items.</p> <p>These items will now show what is currently set for the items within. An example would be on <code>TX Power</code>, which will show the current Power set, and if Dynamic Power is enabled, it will show the current set Max Power, followed by the indicator <code>Dyn</code>.</p>"},{"location":"quick-start/transmitters/lua-howto/#packet-rate-and-telemetry-ratio","title":"Packet Rate and Telemetry Ratio","text":"<p>These are shown as <code>Packet Rate</code> and <code>Telem Ratio</code> in the Lua script, which allows you to change your performance parameters. </p> <ul> <li> <p><code>Packet Rate</code> sets how fast data packets are sent, higher rates send packets more frequently and have lower latency.</p> <p>The following options are available for <code>2.4GHz</code>:</p> <ul> <li><code>50Hz, 150Hz, 250Hz &amp; 500Hz</code>: Lora-based options. Higher means lower latency at the expense of sensitivity. Since v1.0.</li> <li><code>F500 &amp; F1000</code>: Pure FLRC for lowest latency, reduced range compared to LoRa, 500Hz and 1000Hz. Details</li> <li><code>D250 &amp; D500</code>: Redundant transmit FLRC modes.  <code>D</code> stands for <code>D\u00e9j\u00e0 Vu</code>, 250Hz and 500Hz. Higher latency, reduced packet jitter and higher LQ. Same range as other FLRC modes. Details</li> <li><code>100Hz Full &amp; 333Hz Full</code>: Lora-based 10-bit Full Resolution with 8ch/12ch/16 Switch Mode options. Details</li> <li><code>K1000</code>  : K modes for 2.4GHz are FSK+FEC (Forward Error Correction a.k.a self healing packets) and only available on LR1121 hardware. K modes are very similar to FLRC in their over the air properties and designed for high noise environments such as racing events. FSK Details FEC Details</li> <li><code>DK250 &amp; DK500</code>  : These modes offer the same redundancy as D modes but with K modes (FSK+FEC).</li> </ul> <p>The following options are available for <code>900MHz</code>:</p> <ul> <li><code>25Hz, 50Hz, 100Hz &amp; 200Hz</code>: LoRa-based options. Higher means lower latency at the expense of sensitivity. Since v1.0.</li> <li><code>100Hz Full</code>: Lora-based 10-bit Full Resolution with 8ch/12ch/16 Switch Mode options. Details</li> <li><code>D50Hz</code>: Lora-based Redundant transmit mode via DVDA. Details</li> <li><code>250Hz</code>: Only Available for GemX Devices. Details</li> <li><code>200Hz Full</code>  : Only Available for GemX Devices. Details</li> <li><code>K1000 Full</code>  : K modes for SubGHz are FSK and only available on LR1121 hardware. This mode is design for the highest data throughput when using protocols such as MAVLink. Details</li> </ul> <p>The following options are available for <code>GemX</code>:</p> <ul> <li><code>X150Hz</code> : Crossband mode, combining 900MHz and 2.4GHz in Gemini Mode.</li> <li><code>X100Hz Full</code>  : Crossband mode, combining 900MHz and 2.4GHz in Gemini Mode, Full Resolution with 8ch/12ch/16 Switch Mode options</li> </ul> <p>GemX is a 3.4.0 feature</p> <p>Gemini Crossband (GemX) is available on select hardware, requiring the LR1121 RF Chip. GemX is an ExpressLRS 3.4.0 feature. Details here.</p> <p>The number following the rate in parentheses (e.g. -105dBm for 500Hz) is the Sensitivity Limit for the rate, the lowest RSSI dBm value where packets will still be received. See Signal Health for more information about the sensitivity limit.</p> </li> </ul> <p>WARNING</p> <p>Never change the packet rate while flying as this FORCES A DISCONNECT between the TX and RX. </p> <ul> <li> <p><code>Telem Ratio</code> sets the telemetry ratio or how much of the packet rate is used to send telemetry. The options, in order of increasing telemetry rate, are: <code>Off, 1:128, 1:64, 1:32, 1:16, 1:8, 1:4, 1:2</code>. A Telem Ratio of 1:64 means one out of every 64 packets are used for telemetry data.</p> <ul> <li>v3.0 comes with <code>Std</code> and <code>Race</code> options. <code>Std</code> changes ratio depending on the Packet Rate, and <code>Race</code> is the same as Std, but will disable telemetry and sync while Armed.</li> </ul> <p>For information on telemetry setup, see First Flight: Telemetry and Telemetry Bandwidth.</p> </li> </ul>"},{"location":"quick-start/transmitters/lua-howto/#switch-mode","title":"Switch Mode","text":"<p>The Switch Mode setting controls how channels AUX1-AUX8 are sent to the receiver (the 4 main channels are always 10-bit). The options are <code>Hybrid &amp; Wide</code>. Hybrid mode is 6x 2, 3 or 6-position + 1x 16-position, and Wide is 7x 64 or 128-position. For detail about the differences, see the Switch Configs documentation.</p> <p>In full resolution modes, the Switch Mode parameter selects the number of channels to be used. Full Resolution Switch Modes </p> <p>Hot Tip</p> <p>The Switch Mode can only be changed when not connected to a receiver. The top right corner of the Lua script will show a <code>-</code> if you're not connected.</p>"},{"location":"quick-start/transmitters/lua-howto/#antenna-mode","title":"Antenna Mode","text":"<p>This option is only available to Gemini-capable TX Modules. See the Gemini Page for more details.</p> <p>Available Options:</p> <ul> <li> <p><code>Gemini</code></p> <ul> <li>Transmit on two TX antennas simultaneously at different frequencies 40MHz apart (for 2.4GHz) or ~10MHz apart (for 900MHz).</li> </ul> </li> <li> <p><code>Ant 1/Ant 2</code></p> <ul> <li>Transmit only on one antenna.</li> </ul> </li> <li> <p><code>Switch</code></p> <ul> <li>Alternate between the two Antennas.</li> </ul> </li> </ul> <p>WARNING</p> <p>When using a Gemini TX with a non-Gemini receiver, you should set the TX in either Switch or Single Antenna (Ant1/Ant2) Mode.</p> <p>The reason is that as the receiver only get the signal from the TX it has synchronized with, the other TX will act as a noise generator and increase both the noise floor and power consumption.</p>"},{"location":"quick-start/transmitters/lua-howto/#link-mode","title":"Link Mode","text":"<p>Introduced in 3.5.0, <code>Link Mode</code> changes the main protocol and function of the TX module.</p> <ul> <li> <p><code>Normal</code> - This is the default configuration. The TX module simply sends the commands from the radio handset, and receive telemetry from the receiver and send it to the handset. </p> </li> <li> <p><code>MAVLink</code> - This option enables native MAVLink Telemetry downlink and Radio Control uplink making the TX module and radio handset to be an intermediary between a GCS and a MAVLink-capable craft. See the MAVLink page for more details.</p> </li> </ul>"},{"location":"quick-start/transmitters/lua-howto/#model-match","title":"Model Match","text":"<p>ExpressLRS supports multiple configuration profiles, and the configuration profile is selected by setting the \"Receiver ID\" property in the Radio Handset's Model Setup -&gt; Internal/External RF -&gt; Receiver (number).</p> <p></p> <p>Model Match is used to prevent accidentally selecting the wrong model in the handset and flying with an unexpected handset or ELRS configuration. Setting this to <code>On</code> while a receiver is connected will make that receiver only connect with the current Receiver ID. Setting it to <code>Off</code> will allow a connection with any bound receiver (including those using a Bind Phrase). Both sides of the connection must agree on their Model Match setting. For a detailed explanation of how this restricts connections see Model Match.</p> <p>The Receiver ID of the active model is shown after the option value.</p>"},{"location":"quick-start/transmitters/lua-howto/#tx-power","title":"TX Power","text":"<p>The <code>TX Power</code> folder is where you can change your TX Module's Transmission Power settings. Press Enter once to access the settings and Press the RTN key to go back to the previous page.</p> <ul> <li> <p><code>Max Power</code> sets the maximum power level your TX will transmit at. Selecting a power level higher or lower than your TX supports will revert to the closest supported level. The options are <code>10, 25, 50, 100, 250, 500, 1000 &amp; 2000</code> mW. If Dynamic Power is set to <code>Off</code> this is the power level your TX always uses. </p> </li> <li> <p><code>Dynamic</code> enables the Dynamic Power feature. <code>Off</code> means that the TX will transmit at Max Power at all times. <code>Dyn</code> means the TX will dynamically lower power to save energy when maximum power is not needed. The options <code>AUX9, AUX10, AUX11, AUX12</code> indicate that the TX can be changed from max power to dynamic power by changing the position of a switch. where switch HIGH (&gt;1500us) = dynamic power, switch LOW (&lt;1500us) = max power. For more information, Dynamic Transmit Power provides a deeper dive into the algorithm and usage.</p> </li> <li> <p><code>Fan Thresh</code> sets the power level the Fan should activate, e.g. if set to 100mW, then the fan should spin up if you set <code>Max Power</code> to 100mW with <code>Dynamic</code> set to OFF after a short delay. The fan will continue running for some time even after the power level goes below the threshold. Not all modules have a Fan header that benefits from the setting. . Default fan threshold is 250mW.</p> </li> </ul>"},{"location":"quick-start/transmitters/lua-howto/#vtx-administrator","title":"VTX Administrator","text":"<p>VTX Administrator allows you to change your VTX settings directly from your radio, and have those VTX settings be applied to any receiver you connect to. The VTX settings are sent every time a new connection is acquired, or when <code>[Send VTX]</code> is pressed.</p> <p>Hot Tip</p> <p>VTX Administrator will send the current VTX settings to the flight controller whenever the TX module detects a connection to the RX. This means that it will resend them after telemetry lost/recovered. So if you have used any other method to change the VTX power level (i.e. OSD), then that will be overridden if you lose/regain telemetry in flight.</p> <ul> <li> <p><code>Band</code> sets the VTX band, the options are <code>Off, A, B, E, F, R &amp; L</code>, the standard analog FPV bands. <code>Off</code> means that VTX Administrator will not adjust any VTX settings.</p> </li> <li> <p><code>Channel</code> sets the VTX channel, the options are <code>1, 2, 3, 4, 5, 6, 7 &amp; 8</code> which are the standard channels in the above bands.</p> </li> <li> <p><code>Pwr Lvl</code> sets the VTX power by index, the options are <code>-, 1, 2, 3, 4, 5, 6, 7, &amp; 8</code> which are the power levels that your VTX can do. Refer to your VTX table settings on the flight controller for the exact power levels. For example a VTX may have 1 = 25mW, 2 = 100mW, 3 = 200mW, 4 = 500mW.</p> </li> <li> <p><code>Pitmode</code> the options are <code>On &amp; Off</code> which allow you to quickly switch into or out of pit mode</p> </li> <li> <p>Finally pressing the <code>[Send VTX]</code> button sends the configured settings to the receiver and on to the VTX. These settings are also sent every time a connection is established.</p> </li> </ul>"},{"location":"quick-start/transmitters/lua-howto/#wifi-connectivity","title":"WiFi Connectivity","text":"<p>This section contains all the WiFi-related functions.</p> <ul> <li> <p><code>Enable WiFi</code> will activate the TX module WiFi mode for updating via WiFi (if the TX Module has WiFi Capabilities). Visit this page for instructions on how the updating process works.</p> </li> <li> <p><code>Enable RX WiFi</code> will put the bound and connected receiver into WiFi mode to facilitate updating via WiFi (if the receiver has WiFi capabilities).</p> </li> <li> <p><code>Enable Backpack WiFi</code> will put the TX Backpack into WiFi mode (available only to TX modules with backpacks connected and updated to the new Backpack firmware).</p> </li> <li> <p><code>Enable VRX WiFi</code> will put the VRX Backpack that is bound and connected to the onboard TX Backpack into WiFi mode to facilitate updating via WiFi.</p> </li> </ul>"},{"location":"quick-start/transmitters/lua-howto/#backpack-options","title":"Backpack Options","text":"<p>The parameters in this folder enables you to change the Backpack-related parameters.</p> <p></p> <p></p> <ul> <li><code>Backpack</code> - Turn the Backpack function On or Off.</li> <li><code>DVR Rec</code> - Set which Aux Channel and what channel position will trigger DVR Recording on the goggles. Only possible on FPV Goggles with VRX Backpack integration.</li> <li><code>DVR Srt Delay</code> - How soon should the DVR start Recording upon activation of the Aux switch?</li> <li><code>DVR Stp Delay</code> - How soon should the DVR stop Recording upon deactivation of the Aux switch?</li> <li><code>HT Enable</code> - Turn Headtracking On or Off. Only available on some FPV Goggles with VRX Backpack integration.</li> <li><code>HT Start Channel</code> - Starting Channel to send Head Tracking positions to.</li> <li><code>Telemetry</code> - Allow the Backpack to Send the Telemetry frames via ESPNOW. See Backpack Telemetry</li> <li><code>Version</code> - The Backpack Firmware version flashed into the TX Backpack.</li> </ul> <p>For more information, see the Backpack Guide.</p>"},{"location":"quick-start/transmitters/lua-howto/#bind","title":"Bind","text":"<p>Take Notice!</p> <p>This command will only work on receivers that are already in <code>Bind Mode</code> (indicated by two blinks LED pattern). Receivers (with version 3.3.2 and earlier) flashed or set with a binding phrase will NOT go into this Bind Mode, and thus this command will not do anything.</p> <p>Devices with the same binding phrase and compatible firmware versions should automatically sync/bind upon power up.</p> <p></p> <p></p> <p>Pressing the <code>[Bind]</code> button activates the binding mode for traditional binding. This does nothing for users who have configured a bind phrase and is not needed. For more information check out this page on binding.</p>"},{"location":"quick-start/transmitters/lua-howto/#ble-joystick-esp32-txes-only","title":"BLE Joystick (ESP32 TXes Only)","text":"<p>Pressing the <code>[BLE Joystick]</code> selection activates BluetoothLE Joystick mode which allows connection to simulators through the bluetooth of your computer. Reboot or change models to exit this mode.</p>"},{"location":"quick-start/transmitters/lua-howto/#other-devices","title":"Other Devices","text":"<p>The Other Devices folder, if present, allows changing the configuration of other connected devices, such as the current receiver. It is also used to go back to the TX Module options.</p> <p></p> <p></p>"},{"location":"quick-start/transmitters/lua-howto/#receiver-options","title":"Receiver Options","text":""},{"location":"quick-start/transmitters/lua-howto/#protocol","title":"Protocol","text":"<p>The <code>Protocol</code> setting controls the output of the connected receiver. The following options are available:</p> <ul> <li><code>CRSF</code> - The regular CRSF Protocol Output. Recommended for most application.</li> <li><code>Inverted CRSF</code> - The CRSF Protocol inverted for use in Flight Controllers that doesn't have any other UARTs available and the only option is to connect the receiver TX pin into an SBUS pad (Inverted RX). This is the old <code>Invert TX Pin</code> option.</li> <li><code>SBUS</code> - Lets the receiver output SBUS signal for use with devices that don't support CRSF protocol, like Stabilizers, Heli Controllers etc.</li> <li><code>Inverted SBUS</code> - Like the above, but inverted.</li> <li><code>SUMD</code> - Lets the receiver output Graupner HoTT SUMD signal for use with devices that don't support CRSF protocol, like Stabilizers, Heli Controllers etc.</li> <li><code>DJI RS2 Pro</code> - Mainly used for the RS2 Pro Gimbals</li> <li><code>HoTT Telemetry</code> - Allows to use Graupner HoTT enabled telemetry sensors (Graupner and 3<sup>rd</sup> party)</li> <li><code>MAVLINK</code> - Introduced on ExpressLRS 3.5.0, it allows the receiver to output native MAVLink into a flight controller. See the MAVLink page for more details.</li> </ul> <p>For more information, see Receiver Serial Protocols</p>"},{"location":"quick-start/transmitters/lua-howto/#protocol-2","title":"Protocol 2","text":"<p>The <code>Protocol 2</code> setting is only available for ESP32-based receivers. This include the True Diversity ones like the RP4TD, Super D, Super P and EP Dual. These receivers have a second UART that can be used for the same purpose as the main UART. Note that not all of the ESP32-based receivers have the extra UART pads or pins exposed for easy use.</p> <p>It has the same options as the setting above with these additional ones:</p> <ul> <li><code>Tramp</code> - If you want to control a VTX using Tramp protocol directly through the ExpressLRS Lua Script's VTX Admin.</li> <li><code>SmartAudio</code> - If you want to control a VTX using SmartAudio protocol directly through the ExpressLRS Lua Script's VTX Admin.</li> <li><code>Off</code> - Set when the auxiliary UART is not in use.</li> </ul> <p>This setting is available on ExpressLRS 3.5.0 and onwards. See PR 2605 for more details.</p>"},{"location":"quick-start/transmitters/lua-howto/#sbus-failsafe","title":"SBUS failsafe","text":"<p><code>SBUS Failsafe</code> is used to set the behavior of a receiver using SBUS protocol for output. The following options are available:</p> <ul> <li><code>No Pulses</code> - When a failsafe occurs, the receiver will stop sending any messages.</li> <li><code>Last Pos</code> - When a failsafe occurs, the receiver will keep sending the last channel positions it received.</li> </ul>"},{"location":"quick-start/transmitters/lua-howto/#antenna-mode_1","title":"Antenna Mode","text":"<p>The <code>Antenna Mode</code> setting is only available for Receivers with Antenna Diversity. These options are available:</p> <ul> <li><code>Diversity</code> - Both Antennas will be active. Receiver will switch to the antenna with better RSSI.</li> <li><code>Ant1/Ant2</code> - Only one antenna will be enabled (for both RC command reception and Telemetry sending).</li> </ul>"},{"location":"quick-start/transmitters/lua-howto/#receiver-mode","title":"Receiver Mode","text":"<p>The <code>Receiver Mode</code> setting is only available for True Diversity receivers. These options are available:</p> <ul> <li><code>Gemini</code> - Receive on two RX antennas simultaneously at different frequency 40MHz apart (for 2.4GHz) or ~10MHz apart (for 900MHz). Best used when you have a Gemini-capable TX Module.</li> <li><code>Diversity</code> - Both Antennas will be active. Receiver will switch to the antenna with better RSSI.</li> </ul>"},{"location":"quick-start/transmitters/lua-howto/#tlm-power","title":"Tlm Power","text":"<p>The <code>Telemetry Power</code> setting is used to adjust the telemetry transmit power of the receiver. This option is only available on receivers with a Power Amplifier.</p> <p>The <code>MatchTX</code> setting will automatically change the telemetry output power to match what the transmitter reports it is using. In MatchTX mode, the receiver will boot at default power output (usually maximum power) until a power update is received from the transmitter, which is only available in Wide Switch Mode or any FullRes mode.</p>"},{"location":"quick-start/transmitters/lua-howto/#init-rate","title":"Init Rate","text":"<p>Removed in ExpressLRS 3.4, see Init Rate. The <code>Initialization Rate</code> setting controls the packet rate that the receiver will start checking for the Sync Packet. On boot, the receiver will listen for the Sync Packet starting with the fastest RF Mode or Packet Rate, down to the slowest, then cycles, until it finally Syncs and Binds. Setting this parameter closer or equal to the Packet Rate you've set for the TX module will allow the receiver to Bind or Connect much faster.</p>"},{"location":"quick-start/transmitters/lua-howto/#team-race","title":"Team Race","text":"<p>Team Racing allows selection between multiple connected models, failsafing all unselected models. See Team Racing</p> <ul> <li><code>Channel</code> (default CH11 / AUX7) TeamRace Channel - The channel that is checked on the receiver to determine the currently selected model. Has no effect if the TeamRace Position is set to Disabled.</li> <li><code>Position</code> (default Disabled) TeamRace Position - Which position of the TeamRace Channel activates this model. 6-position switches are supported (1-6) as well as Low/Mid/High for using a 2 or 3-position switch.</li> </ul>"},{"location":"quick-start/transmitters/lua-howto/#loan-modelreturn-model","title":"Loan Model/Return Model","text":"<p>These commands allow the user to Loan/Return the model. For more information, see the Loan Model guide.</p> <p>This is deprecated and removed in ExpressLRS 3.4.0 in favor of the new Binding Procedures. See the binding page for details or the Bind Storage section below.</p>"},{"location":"quick-start/transmitters/lua-howto/#output-mapping","title":"Output Mapping","text":"<p>This folder is only available to PWM receivers. This will allow users to set options for each of the output pins of their PWM receivers.</p> <ul> <li><code>Output Ch</code> - Select the Channel or Pin in the PWM receiver to change settings for.</li> <li><code>Input Ch</code> - Select which Channel on your Radio Mix will send its output to the Receiver PWM Channel.</li> <li><code>Output Mode</code> - Select the command rate for the Output Pin. Best to set this to the refresh rate of the servo or device.</li> <li><code>Invert</code> - Set this option to On or Off to toggle the direction for the Output Channel.</li> </ul> <p>For more information, see PWM Receivers page.</p>"},{"location":"quick-start/transmitters/lua-howto/#bind-storage","title":"Bind Storage","text":"<ul> <li><code>Persistent</code> - Binding info is kept across power-cycles. </li> <li><code>Volatile</code> - Binding info is forgotten after a power-cycle.</li> </ul> <p>This option is available on ExpressLRS 3.4.0 and newer. See the details here.</p> <ul> <li><code>Returnable</code> - Introduced in ExpressLRS 3.5.0. It is used to allow models to be safely loaned from a fleet if unbound OTA. A Binding Phrase must be set for this to work properly. see PR 2744 for details.</li> </ul>"},{"location":"quick-start/transmitters/lua-howto/#enter-bind-mode-command","title":"Enter Bind Mode command","text":"<p>This will put the receiver into Bind Mode. It works even if the receiver is already flashed with a binding phrase or already bound traditionally.</p> <p>This command is available on ExpressLRS 3.4.0 and newer. See the details here.</p>"},{"location":"quick-start/transmitters/lua-howto/#model-id","title":"Model ID","text":"<p>This line shows the currently set Model ID for the receiver when Model Matching is enabled. This number should match the Receiver ID set with the current active Model on the Radio handset, otherwise, there will be Model Mismatch! See Model Match for more details.</p>"},{"location":"quick-start/transmitters/lua-howto/#recommendations","title":"Recommendations","text":"<ul> <li> <p>For racing where maximum performance is a must, the <code>500Hz</code> modes or faster, with the <code>Race</code> Telemetry mode, is ideal. <code>Hybrid</code> Switch Mode is also good here.</p> </li> <li> <p>For freestyle and general everyday flying, you may use the <code>250Hz</code> modes or faster, with the <code>Std</code> Telemetry mode. Switch Mode doesn't matter as much here. Select what's appropriate for your Flight Mode settings.</p> </li> <li> <p>For fixed wings, we recommend using <code>100Hz Full Res</code>, together with either <code>Std</code> or your choice of Telemetry Ratio. Switch Mode will depend greatly on how many full resolution channels you intend to use.</p> </li> <li> <p>For Long Range applications, see the Long Range Records page and try the settings the pilots used to achieve the range. It is not guaranteed you'll achieve the same range as they are due to several factors like RF Noise in your area, your location and position and the antenna orientation on your aircraft and transmitter modules. Observe local laws and regulations.</p> </li> </ul>"},{"location":"quick-start/transmitters/lua-howto/#troubleshooting-the-lua-script","title":"Troubleshooting the Lua Script","text":""},{"location":"quick-start/transmitters/lua-howto/#expresslrs-lua-script-is-stuck-at-loading","title":"ExpressLRS Lua Script is stuck at <code>Loading...</code>","text":"ExpressLRS Lua Script is stuck at <code>Loading...</code> <p>Go back to the Radio Setup Guide and make sure your radio is prepped up for ExpressLRS. Check that the ExpressLRS TX module is enabled - otherwise the script cannot be loaded.</p> <p>Also, make sure your module has been flashed with v3.0 firmware. V3 Lua for V3.0-flashed modules, V2 Lua for v2.x-flashed modules (including some modules fresh from the factory).</p> <p>For newly-acquired ExpressLRS modules, flashing via USB is the recommended update method.</p>"},{"location":"quick-start/transmitters/lua-howto/#i-cannot-change-the-switch-mode","title":"I cannot change the Switch Mode!","text":"I cannot change the Switch Mode! <p>Changing switch modes requires that the TX module and Receiver aren't connected to each other (no C in the top right corner of the Lua Script). Power off the receiver first, change the Switch Mode from the Lua script, then power up the receiver. The Switch Mode should then apply.</p>"},{"location":"quick-start/transmitters/lua-howto/#i-cannot-change-my-packet-rate-to-f1000","title":"I cannot change my Packet Rate to F1000!","text":"I cannot change my Packet Rate to F1000! <p>F1000 requires higher than 400K baud rates. First update your baud rate setting either in the Model Setup menu or in the System Menu -&gt; Hardware, reboot your radio to ensure that the baud rate setting got applied and then change the Packet Rate.</p> <p>Do note that not every handset is capable of higher than 400K baud rates. See the Radio Setup Guide for the details.</p>"},{"location":"quick-start/transmitters/lua-howto/#i-cannot-change-to-full-resolution-rates","title":"I cannot change to Full Resolution Rates!","text":"I cannot change to Full Resolution Rates! <p>As Full Resolution Rates call for an entirely different Switch Modes, you need to first disconnect the Receiver and the TX module from each other, like how you would change Switch Modes. Power down the receiver, change the Packet Rate to the Full Resolution modes, select your Switch Mode scheme and then power up the receiver or the aircraft.</p>"},{"location":"quick-start/transmitters/lua-howto/#vtx-admin-is-not-working-but-i-can-change-vtx-channels-via-osd-menu","title":"VTX Admin is not working but I can change VTX channels via OSD Menu.","text":"VTX Admin is not working but I can change VTX channels via OSD Menu. <p>As VTX Admin depends on MSP which then depends on Telemetry, ensure that you have Telemetry enabled on your FC Configuration and that you are getting more than 10 Telemetry Sensors on your Radio (Model Setup -&gt; Telemetry page; Delete and Discover New sensors to refresh the sensor list.) Also, make sure Telem Ratio is not Off.</p>"},{"location":"quick-start/transmitters/lua-howto/#there-is-no-c-on-the-top-right-corner-and-im-not-getting-telemetry-in-my-radio","title":"There is no C on the top right corner, and I'm not getting Telemetry in my radio!","text":"There is no C on the top right corner, and I'm not getting Telemetry in my radio! <p>Make sure Telem Ratio is not set to <code>Off</code>. Set it to <code>Std</code>, or any other value other than <code>Off</code>.</p>"},{"location":"quick-start/transmitters/lua-howto/#on-v1x-i-can-choose-2w-on-the-lua-but-i-cannot-do-that-anymore-what-gives","title":"On v1.x, I can choose 2W on the Lua, but I cannot do that anymore. What gives?","text":"On v1.x, I can choose 2W on the Lua, but I cannot do that anymore. What gives? <p>This means your module cannot go that high or that low. The power levels you can select on the new Lua script are based on the power levels your module supports. This also applies to other options like <code>Enable Backpack WiFi</code> or <code>BLE Joystick</code>. If your module doesn't support any of these features, it won't show up on the Lua Script.</p>"},{"location":"quick-start/transmitters/rm-bandit/","title":"Radiomaster Bandit","text":"<p>Info</p> <p>These devices come pre-installed with a 3.x-ready firmware. You don't need to reflash these devices. You can use the Web UI of these devices to update the Binding Phrase or any of the firmware options.</p>"},{"location":"quick-start/transmitters/rm-bandit/#flashingupdating-your-tx-module-firmware","title":"Flashing/Updating your TX Module Firmware","text":"via WiFivia UART Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Radiomaster 900MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>RadioMaster Bandit 900MHz TX</code></li> <li><code>RadioMaster Bandit Micro 900MHz TX</code></li> <li><code>RadioMaster Bandit nano 900MHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Radiomaster 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>RadioMaster Bandit 900MHz TX</code></li> <li><code>RadioMaster Bandit Micro 900MHz TX</code></li> <li><code>RadioMaster Bandit nano 900MHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Radiomaster 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>RadioMaster Bandit 900MHz TX</code></li> <li><code>RadioMaster Bandit Micro 900MHz TX</code></li> <li><code>RadioMaster Bandit nano 900MHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <ol> <li> <p>Connect your TX Module to your Computer via a USB Data Cable. Best if you remove it from your Radio.</p> </li> <li> <p>Determine whether your TX Module is being detected properly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the TX Module is not being detected correctly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>You can download the drivers from here: CP210x Drivers<ul> <li>Windows Users should download the <code>CP210x Windows Drivers</code> package for easier installation. Unzip/Extract the contents of the package and run the setup wizard.</li> </ul> </li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Radiomaster 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>RadioMaster Bandit 900MHz TX</code></li> <li><code>RadioMaster Bandit Micro 900MHz TX</code></li> <li><code>RadioMaster Bandit nano 900MHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your module from USB.</li> <li>Reconnect your TX module into your Radio's External Module bay.</li> <li>Using the ExpressLRS Lua Script from the Tools Menu, check if the firmware version got updated.</li> </ol>"},{"location":"quick-start/transmitters/rm-internal/","title":"Internal RadioMaster","text":"<p>Advisory</p> <p>If you are flashing/updating your TX module via WiFi for the first time from the factory firmware, or from an older firmware, to ExpressLRS 3.x firmware, you will first need to flash it to version 2.5.2, then flash it with the Repartitioner binary file (right click, save as/save file as). Should it complain about Target Mismatch, just click <code>Flash Anyway</code>. Only then you can flash to 3.x firmware via WiFi.</p> <p>Joshua Bardwell has a video about it here.</p> <p>Updating to 3.x via UART or ETX Passthrough doesn't require 2.5.2 firmware or the Repartitioner.</p>"},{"location":"quick-start/transmitters/rm-internal/#flashingupdating-your-tx-module-firmware","title":"Flashing/Updating your TX Module Firmware","text":"via WiFivia ETX Passthrough Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category:</p> <ul> <li><code>RadioMaster 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>RadioMaster Zorro 2.4GHz TX</code></li> <li><code>RadioMaster TX16S Internal 2.4GHz TX</code></li> <li><code>RadioMaster TX12 Internal 2.4GHz TX</code></li> <li><code>RadioMaster Boxer Internal 2.4GHz TX</code></li> <li><code>RadioMaster Pocket Internal 2.4GHz TX</code></li> <li><code>RadioMaster MT12 Internal 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category:</p> <ul> <li><code>RadioMaster 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>RadioMaster Zorro 2.4GHz TX</code></li> <li><code>RadioMaster TX16S Internal 2.4GHz TX</code></li> <li><code>RadioMaster TX12 Internal 2.4GHz TX</code></li> <li><code>RadioMaster Boxer Internal 2.4GHz TX</code></li> <li><code>RadioMaster Pocket Internal 2.4GHz TX</code></li> <li><code>RadioMaster MT12 Internal 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category:</p> <ul> <li><code>RadioMaster 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>RadioMaster Zorro 2.4GHz TX</code></li> <li><code>RadioMaster TX16S Internal 2.4GHz TX</code></li> <li><code>RadioMaster TX12 Internal 2.4GHz TX</code></li> <li><code>RadioMaster Boxer Internal 2.4GHz TX</code></li> <li><code>RadioMaster Pocket Internal 2.4GHz TX</code></li> <li><code>RadioMaster MT12 Internal 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <p>Info</p> <p>ETX Passthrough is the result of the collaborative effort between RadioMaster, EdgeTX and ExpressLRS.</p> <p>It is only available on Radios with Internal ExpressLRS Modules.</p> <p>Before you start, ensure you have the latest EdgeTX firmware version on your Radio. Consult the EdgeTX documentation regarding the updating process.</p> <ul> <li><code>TX16S MK2</code>: Update it to at least EdgeTX 2.7.0 (f79978b) or EdgeTX 2.7.1 (a55aff0).</li> <li><code>Zorro</code>: Update it to at least EdgeTX 2.7.0 (f79978b) or EdgeTX 2.7.1 (a55aff0). It often comes with an earlier EdgeTX 2.7.0 version (2bdd4974) which results in unsuccessful flashing.</li> <li><code>TX12 MK2</code>: Update it to at least EdgeTX 2.8.0 (f6d140e) for full EdgeTX support.</li> <li><code>Boxer</code>: The factory EdgeTX firmware should be based off an early EdgeTX 2.8.0 and wouldn't need an update.</li> <li><code>Pocket</code>: The factory EdgeTX firmware shouldn't need an update.</li> <li><code>MT12</code>: The factory EdgeTX firmware shouldn't need an update.</li> </ul> <p>Hot Tip</p> <p>To ensure updating success with this method, update the EdgeTX firmware on the radio as mentioned above.</p> Simplest EdgeTX Updating Procedure (click/tap to expand) <ol> <li>Visit http://buddy.edgetx.org/.</li> <li>Select the EdgeTX version and the Radio Model you want to update from the Left-hand side column.</li> <li>Click the Download .bin button at the bottom of the page.</li> <li>Save the firmware file into your Radio's SD Card, inside the <code>Firmware</code> Folder.</li> <li>Reboot the Radio into DFU/Bootloader mode.<ul> <li>Turn off your radio.</li> <li>Press and hold the two horizontal Trim switches then press the Power button. The Screen should Light up. Let go of the buttons.</li> <li>Some Radios have a different procedure, like the BetaFPV Lite Radio 3 Pro. Consult the Manual for the steps to get it into this DFU/Bootloader mode.</li> </ul> </li> <li>Select <code>Write Firmware</code>.</li> <li>Navigate to the EdgeTX firmware file you just downloaded.</li> <li>Follow the screen prompts.</li> <li>Once Writing is complete, reboot the radio.</li> <li>Check the Radio's Version Page to verify you have the version you need.</li> </ol> <p>Also make sure you have an internal ELRS module on your Radio. The following steps only apply to handsets with ExpressLRS-specific internal modules. There are stickers marked with \"ELRS\" attached to your radio packaging or boxes, as well as on the JR module bays indicating the type of internal rf module the radio have.</p> <p> Example Sticker On RadioMaster Handset/Radios </p> <p>The current Model on the radio should be using the Internal ExpressLRS Module. Test this by loading the ExpressLRS Lua Script from the Tools Menu.</p> <p> </p> <p>There's one more setting you want to make sure is set properly before you proceed.</p> <ol> <li>Press the SYS Key on the Radio.</li> <li>Press the PAGE Key until you reach the Hardware Page.</li> <li>Scroll down until you get to the Serial Ports settings.</li> <li>Scroll down and select USB-VCP. Press Enter and use the Scroll Wheel to set it to <code>CLI</code> mode if it is set to a different setting. Press Enter once more to confirm the changes.</li> <li>Exit the Hardware menu by long-pressing RTN Key.</li> </ol> <p>Now follow the next steps to get your Internal ExpressLRS Module Updated:</p> <ol> <li> <p>Connect your powered-up Radio to your Computer via a USB Data Cable.</p> <p> </p> </li> <li> <p>On your Radio, scroll down and select <code>USB Serial(VCP)</code> then press the Enter Key. Set your Radio aside in the meantime.</p> <p> </p> </li> <li> <p>On your Computer, check whether your Radio is being recognized correctly as a STMicroelectronics Virtual COM Port device.</p> <p>Important</p> <p>This is a vital step and a common failure point. Pay attention.</p> <p>Windows Users can use Device Manager to check whether the Radio is being recognized correctly.</p> <p> </p> <p> Yellow Caution Triangles in the Device Manager, or any mention of <code>&lt;Radio Name&gt; Serial Port</code> means drivers aren't installed.</p> <p>Download the Driver package first. Unzip/extract the contents of the package and run/execute (double-click) the installer file (<code>VCP_V1.5.0_Setup_W7_x64_64bits.exe</code> for Windows 10/11 Users). </p> <p>Once Drivers are installed, check again if the Radio is now being recognized correctly. You may have to unplug-replug the USB Cable first or even reboot your computer.</p> <p>You only have to do this once usually.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category:</p> <ul> <li><code>RadioMaster 2.4 GHz</code></li> </ul> </li> <li> <p>Device:</p> <ul> <li><code>RadioMaster Zorro 2.4GHz TX</code></li> <li><code>RadioMaster TX16S Internal 2.4GHz TX</code></li> <li><code>RadioMaster TX12 Internal 2.4GHz TX</code></li> <li><code>RadioMaster Boxer Internal 2.4GHz TX</code></li> <li><code>RadioMaster Pocket Internal 2.4GHz TX</code></li> <li><code>RadioMaster MT12 Internal 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>EdgeTXPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your Radio from USB.</li> <li> <p>Using the ExpressLRS Lua Script from the Tools Menu, check if the firmware version got updated.</p> <p> </p> </li> </ol>"},{"location":"quick-start/transmitters/rm-ranger/","title":"Radiomaster Ranger","text":"<p>Info</p> <p>These devices come pre-installed with a 3.x-ready firmware. You don't need to reflash these devices. You can use the Web UI of these devices to update the Binding Phrase or any of the firmware options.</p>"},{"location":"quick-start/transmitters/rm-ranger/#flashingupdating-your-tx-module-firmware","title":"Flashing/Updating your TX Module Firmware","text":"via WiFivia UART Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Radiomaster 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>RadioMaster Ranger 2.4GHz TX</code></li> <li><code>RadioMaster Ranger Micro 2.4GHz TX</code></li> <li><code>RadioMaster Ranger nano 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Radiomaster 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>RadioMaster Ranger 2.4GHz TX</code></li> <li><code>RadioMaster Ranger Micro 2.4GHz TX</code></li> <li><code>RadioMaster Ranger nano 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Radiomaster 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>RadioMaster Ranger 2.4GHz TX</code></li> <li><code>RadioMaster Ranger Micro 2.4GHz TX</code></li> <li><code>RadioMaster Ranger nano 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <ol> <li> <p>Connect your TX Module to your Computer via a USB Data Cable. Best if you remove it from your Radio.</p> </li> <li> <p>Determine whether your TX Module is being detected properly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the TX Module is not being detected correctly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>You can download the drivers from here: CP210x Drivers<ul> <li>Windows Users should download the <code>CP210x Windows Drivers</code> package for easier installation. Unzip/Extract the contents of the package and run the setup wizard.</li> </ul> </li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Radiomaster 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>RadioMaster Ranger 2.4GHz TX</code></li> <li><code>RadioMaster Ranger Micro 2.4GHz TX</code></li> <li><code>RadioMaster Ranger nano 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your module from USB.</li> <li>Reconnect your TX module into your Radio's External Module bay.</li> <li>Using the ExpressLRS Lua Script from the Tools Menu, check if the firmware version got updated.</li> </ol>"},{"location":"quick-start/transmitters/siyifm30/","title":"Siyi FM30","text":"<p>Attention</p> <p>ExpressLRS 3.5.x will be the last version to support STM32-based hardware. This includes the Happymodel PP, ES915 Tx and Rx, early NamimnoRC Flash and Voyager, FrSky R9, SIYI and ImmersionRC hardware.</p> <p>The STM32 platform's limited compute resources and feature gaps (WiFi, Bluetooth, Backpacks) made for an inferior version of ExpressLRS that necessitated disproportionate maintenance burden for the Dev Team.</p>"},{"location":"quick-start/transmitters/siyifm30/#fm30","title":"FM30","text":""},{"location":"quick-start/transmitters/siyifm30/#flashing-via-stlink","title":"Flashing via STLink","text":"<ul> <li>Target: <code>FM30_TX_via_STLINK</code></li> </ul> <p>Note</p> <p>The only way to flash the FM30 series is using STLINK. Luckily, their pads are pretty generous on the TX and easy to connect. This is a one-way process, there is no returning to the stock firmware after flashing. </p> <p></p> <ul> <li>The TX module is opened by removing the four screws on the corners of the case using a small phillips screwdriver, then two further screws to remove the circuit board once inside.</li> <li>Connect wires to SWDIO, SWCLK, NRST, and GND to the header points shown in red above on the TX. Attach 5V to the VCC pad, not the 3.3V pad!</li> <li>Connect the other side to a STLINK programmer</li> <li>Flash using the <code>FM30_TX_via_STLINK</code> target</li> <li>After the flashing procedure, it is safe to leave the STLINK device connected to test that the firmware is operational, but unplug the USB connection before inserting the module into your handset for testing.</li> <li>Be sure your handset has the External Module type set to CRSF. See the general Troubleshooting section for other ways to determine your module is flashed and ready for flying.</li> </ul>"},{"location":"quick-start/transmitters/siyifm30/#updating-via-dfu","title":"Updating via DFU","text":"<ul> <li>Target: <code>FM30_TX_via_DFU</code></li> </ul> <p>Updating the TX is a lot easier and can be done via DFU without needing a STLINK.</p> <ul> <li>Remove the module from your handset. \u26a0\ufe0f DO NOT plug in the USB while the module is still in the handset. There is no protection to prevent connecting the USB's power directly to your handset.</li> <li>Hold the button labeled \"Bind\" on the FM30 TX. Plug in the USB. There should be an \"ExpressLRS DFU bootloader\" device in Windows Device Manager. If not, the STM32 DFU drivers may need to be installed.</li> <li>Flash using the <code>FM30_TX_via_DFU</code> target</li> <li>Note that the process always reports failure but this occurs after flashing, so check for the message \"File downloaded successfully\", not what follows it: <pre><code>Download        [======================== ]  97%        46080 bytes\nDownload        [=========================] 100%        47340 bytes\nDownload done.\nFile downloaded successfully\nInvalid DFU suffix signature\nA valid DFU suffix will be required in a future dfu-util release!!!\nError during download get_status\n*** [upload] Error 74\n</code></pre></li> </ul>"},{"location":"quick-start/transmitters/siyifm30/#fr-mini-rx-as-tx","title":"FR Mini RX as TX","text":"<p>The RX has the same RF components as the TX does, making it a possible candidate for a small ~200mW TX module. Wiring to the JR Module Bay requires only 3 pins (JR pins are starting from the top down)</p> <p>JR Module Pin | FR Mini Pin | Description |--|--|--| | CPPM | None | | | Heartbeat | None | | | VMain | VIN | Use the VIN pin on the pin header (middle pin), 3.3-3.4V. Do not connect directly to handset battery voltage-- this will burn out the 3.3V regulator even at 10mW output. Use either a 3.3V boost converter (to raise voltage from 1S provided by the handset) or 3.3V buck converter (to lower 2S or 3S handset voltage). The LDO has a very small dropout voltage, so there's not much benefit to bypassing this soldering directly to the VDD pad on the programming header. Expect over 250mA current draw in practice at 100mW. | | GND | GND | Use either the GND pin on the pin header (outermost pin) or the GND pad on the programming header. | SPORT | TX2 | Use the TX2 pad on the receiver and remove the 4.7K pull-up resistor. Without removing the resistor, the module will work okay-ish as a transmitter, but firmware updates through OpenTX will fail with NoSync</p> <p></p>"},{"location":"quick-start/transmitters/siyifm30/#flashing-via-stlink_1","title":"Flashing via STLink","text":"<ul> <li>Target: <code>FM30_RX_MINI_AS_TX_via_STLINK</code></li> </ul> <p>Note</p> <p>The only way to flash the FR Mini is using STLINK. This is a one-way process, there is no returning to the stock firmware after flashing. </p> <p>The flashing procedure is similar to the FM30 TX module flashing listed above but using these pads on the receiver. Use the <code>FM30_RX_MINI_AS_TX_via_STLINK</code> target for initial flashing.</p> <p></p>"},{"location":"quick-start/transmitters/siyifm30/#updating-via-uart","title":"Updating via UART","text":"<ul> <li>Target: <code>FM30_RX_MINI_AS_TX_via_UART</code></li> </ul> <p>Updates are done through OpenTX's built-in firmware flashing tool.</p> <ul> <li>Build the firmware using Configurator and selecting the <code>FM30_RX_MINI_AS_TX_via_UART</code> target. The build process will generate a <code>firmware.elrs</code> file.</li> <li>Copy this file to the handset <code>FIRMWARE/</code> directory on the SD card.</li> <li>Flash the firmware to the module using OpenTX</li> <li>Hold the MENU/SYS button on the handset to open the system menu</li> <li>Press PAGE to navigate to the SD card browser</li> <li>Scroll down to the FIRMWARE directory, and press ENTER</li> <li>Find <code>firmware.elrs</code> and long press the ENTER key to open the context menu</li> <li>Select <code>Flash Ext. ELRS</code> from the menu</li> </ul>"},{"location":"quick-start/transmitters/siyifm30/#troubleshooting-flashing","title":"Troubleshooting Flashing","text":""},{"location":"quick-start/transmitters/siyifm30/#unable-to-connect-to-the-target-device","title":"Unable to connect to the target device","text":"Unable to connect to the target device (click/tap to expand) <p>If the flash fails with \"Unable to connect to target device\" (not \"No STLINK found!\") it is likely your STLINK clone does not have the RST line connected, but you can trigger the needed reset manually with a little more effort. The reason this is needed is that SIYI has disabled \"Software Reset\" to protect you from stealing their firmware binary.</p> <ul> <li>Verify your wiring</li> <li>Make sure the TX board is powering up (the LEDs light up)</li> <li>Use the STM32CubeProgrammer or STLINK GUI to connect see next step.</li> <li>Before you press CONNECT. Short the RST line from the TX to GND. Press CONNECT and quickly remove the wire from the GND pad.</li> <li>If it works, the GUI will tell you that the board is readout protected and must be disabled. Do this.</li> </ul>"},{"location":"quick-start/transmitters/siyifm30/#flash-loader-run-error","title":"Flash loader run error","text":"Flash loader run error (click/tap to expand) <p>Before both the TX and RX can be flashed using the <code>st-flash</code> utility used by PlatformIO on Linux, the STM32 chip must have its \"Readout Protection\" (RDP) disabled, which was set by SIYI at the factory to make our lives more difficult. The windows flashing utility usually automatically disables this, but the Linux utility does not. If you do not disable readout protection you'll get this cryptic error when flashing: <pre><code>2021-07-06T21:08:42 ERROR flash_loader.c: flash loader run error\n2021-07-06T21:08:42 ERROR common.c: stlink_flash_loader_run(0x8000000) failed! == -1\nstlink_fwrite_flash() == -1\n</code></pre> The only way I know of to disable the RDP is to use the STM32CubeProgrammer for Linux, or use a Windows VM / machine to use the ST-LINK.exe GUI / CLI to clear the RDP.</p> <p> </p> <ul> <li>Click the \"Connect\" button to connect to the ST-LINK device. You'll probably get a popup error Error: Data read failed. That's normal. If it says it can't connect or no device is present, you'll have to figure that out first.</li> <li>Click the \"OB\" button on the left.</li> <li>Expand the \"Read Out Protection\" section.</li> <li>Select RDP = \"AA\"</li> <li>Click the \"Apply\" button at the bottom.</li> <li>You should get a message indicating the \"Option bytes successfully programmed\". If so you're good to go. Click \"Disconnect\" at the top and flash from PlatformIO now. You can also flash directly from this GUI if you have the binaries and know their target addresses.</li> </ul>"},{"location":"quick-start/transmitters/tx-prep/","title":"Radio Preparation","text":""},{"location":"quick-start/transmitters/tx-prep/#external-expresslrs-modules","title":"External ExpressLRS Modules","text":"<p>Insert or attach your External ExpressLRS Transmitter Module into your Radio module bay, making sure no pins are bent or missing. External ExpressLRS Modules require three (3) pins to work: VCC/VBAT, GND and S.Port/Data/Signal.</p> <p></p> Micro External Bay Pinout <p></p> Nano External Bay Pinout"},{"location":"quick-start/transmitters/tx-prep/#internal-expresslrs-modules","title":"Internal ExpressLRS Modules","text":"<p>Make sure you do have an Internal ExpressLRS Module on your shiny new radio. The following handsets come in both ELRS (ExpressLRS) or 4-in-1 variants; with some coming in with a third (CC2500). Only the ELRS variant works with ExpressLRS. The others will not work as they have a different Hardware incompatible with ExpressLRS.</p> <ul> <li>RadioMaster TX16S Mark II (ELRS, 4-in-1 CC2500) - ExpressLRS variant will have an ELRS sticker on the box.</li> <li>RadioMaster TX12 Mark II (ELRS, 4-in-1, CC2500) - ExpressLRS variant will have an ELRS sticker on the box and an ELRS sticker in the JR module bay.</li> <li>RadioMaster Zorro (ELRS, 4-in-1, CC2500) - ExpressLRS variant will have an ELRS sticker on the box.</li> <li>RadioMaster Boxer (ELRS, 4-in-1, CC2500) - ExpressLRS variant will have an ELRS sticker on the box and an ELRS sticker in the JR module bay.</li> <li>Jumper T-Lite V2 (ELRS, 4-in-1, CC2500) </li> <li>Jumper T-Pro V1/V2 (ELRS, 4-in-1)</li> <li>BetaFPV Lite Radio 3 Pro (ELRS, CC2500) - A sticker with the barcode at the bottom of the box should tell you it's an ELRS variant or the CC2500 variant.</li> </ul> <p></p> Example Sticker On RadioMaster Handset/Radios"},{"location":"quick-start/transmitters/tx-prep/#radio-operating-system","title":"Radio Operating System","text":"<p>ExpressLRS requires CRSFShot or Mixer Sync to ensure full support for high packet rates. You should have OpenTX 2.3.12 or newer, or EdgeTX 2.4.0 or newer; These versions have full CRSFShot/Mixer Sync support.</p> <p>To determine your Radio Operating System Version, load the Version page from the System Menu of your Radio:</p> <ol> <li>Press the SYS Key.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li>Press PAGE Key until you reach the Version Page.</li> </ol> <p></p> System Key; Short-Press to access the System Menu <p></p> Menu Key; Long-Press to access the System Menu <p>If you have an older version, please first update your Radio OS to at least the mentioned versions. Please consult your Radio Operating System Updating Procedure if you don't know how.</p> <p>ExpressLRS highly recommends EdgeTX for the best experience and compatibility. EdgeTX has introduced options that old and new Radio handsets will benefit from, like One Bit Sample Mode (mainly for old FrSky Radios like the X9D and the QX7) and Mega Bauds (baud rates higher than 400K).</p> Simplest EdgeTX Updating Procedure (click/tap to expand) <ol> <li>Visit http://buddy.edgetx.org/.</li> <li>Select the EdgeTX version and the Radio Model you want to update from the Left-hand side column.</li> <li>Click the Download .bin button at the bottom of the page.</li> <li>Save the firmware file into your Radio's SD Card, inside the <code>Firmware</code> Folder.</li> <li>Reboot the Radio into DFU/Bootloader mode.<ul> <li>Start by turning off your radio.</li> <li>Press and hold the two horizontal Trim switches then press the Power button. The Screen should Light up. Release the buttons.</li> <li>Some Radios have a different procedure, like the BetaFPV Lite Radio 3 Pro. Consult the Manual for the steps to get it into this DFU/Bootloader mode.</li> </ul> </li> <li>Select <code>Write Firmware</code>.</li> <li>Navigate to the EdgeTX firmware file you just downloaded.</li> <li>Follow the screen prompts.</li> <li>Once Writing is complete, reboot the radio.</li> <li>Check the Radio's Version Page to verify you have the version you need.</li> </ol> <p>Check this page for the EdgeTX installation instructions if you're coming in from OpenTX.</p>"},{"location":"quick-start/transmitters/tx-prep/#radio-settings","title":"Radio Settings","text":""},{"location":"quick-start/transmitters/tx-prep/#serial-baud-rate","title":"Serial Baud Rate","text":"<p>The Baud Rate is the speed to which (in this instance) the Transmitter module and the Radio Handset communicate. It is measured in bits per second. Common baud rates include 115200bps (sometimes shown as 115K) and 400000bps (sometimes shown as 400K).</p> <p>A faster or higher baud rate means that the module and radio can talk much faster, further lowering the end-to-end latency of the system. However, not all radio handsets or transmitter modules are capable of higher baud rates as this is highly dependent on the hardware.</p> <p>Depending on the firmware that is running on your radio handset, you can change the baud rate setting to better suit your setup. </p> <p>To get to the baud rate setting on your radio:</p> EdgeTX, Internal ModuleEdgeTX, External ModuleOpenTX <ol> <li>Press the SYS Key. <ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to get to the System Menu.</li> </ul> </li> <li>Press the PAGE Key until you get to the Hardware page.</li> <li>Scroll down until you reach the <code>Baudrate</code> setting.</li> <li>Press the Enter Key.</li> <li>Use the Scroll wheel to change and select the <code>Baudrate</code> you want to use.</li> <li>Press Enter Key once to apply the changes.</li> <li>Reboot the Radio (turn it Off, then turn it On again).</li> </ol> <p> Baudrate setting on EdgeTX for Internal ExpressLRS Modules </p> <ol> <li>Press the MDL Key. <ul> <li>Older Radios or those with only one Menu Key will need to short-press the Menu Key to access the Model Menu.</li> <li>Consult your Radio User's Manual on how to get to the Model Menu.</li> </ul> </li> <li>Press the PAGE Key until you get to the Model Setup page. On Colored Screen Radios, this should not be needed.</li> <li>Scroll down until you reach the External RF settings.</li> <li>Select the <code>Baudrate</code> setting.</li> <li>Press the Enter Key.</li> <li>Use the Scroll wheel to change and select the <code>Baudrate</code> you want to use.</li> <li>Press Enter Key once to apply the changes.</li> <li>Reboot the Radio (turn it Off, then turn it On again).</li> </ol> <p> Baudrate setting on EdgeTX for External ExpressLRS Modules </p> <ol> <li>Press the SYS Key. <ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to get to the System Menu.</li> </ul> </li> <li>Press the PAGE Key until you get to the Hardware page.</li> <li>Scroll down until you reach the <code>Baudrate</code> setting.<ul> <li>If you don't see this setting, that means your radio doesn't support changing the baud rate in this firmware and is locked at 400000.</li> </ul> </li> <li>Press the Enter Key.</li> <li>Use the Scroll wheel to change and select the <code>Baudrate</code> you want to use.</li> <li>Press Enter Key once to apply the changes.</li> <li>Reboot the Radio (turn it Off, then turn it On again).</li> </ol> <p> Baudrate setting on Older Radios </p>"},{"location":"quick-start/transmitters/tx-prep/#recommended-baud-rates","title":"Recommended Baud Rates","text":"<p>The minimal required Baudrate depends on the highest Packet Rate you intend to run. The Baudrate should be set to:</p> <ul> <li>400K (400000bps): for Packet Rates of 250Hz and lower. This setting should work on most Radios and TX Modules.</li> <li>921k (921000bps): for Packet Rates of 500Hz and lower.</li> <li>1.87M (1870000bps): for Packet Rates F1000 and lower.</li> </ul> <p>However, there are some exceptions:</p> <ul> <li> <p>The FrSky Taranis QX7 ACCST, Horus X12S and Horus X10S cannot reliably run 400K baud rate without the Crossfire Mod.</p> </li> <li> <p>The FrSky Taranis X9D has proven to be finicky even with the default 400K baud rate and will benefit from the One Bit Sample Mode setting and a Hardware Mod. See Troubleshooting the X9D for more details.</p> </li> </ul> <p>On other Radios, you can set the Baudrate higher than 400K but will highly depend on what TX Module you will use with it.</p>"},{"location":"quick-start/transmitters/tx-prep/#max-usable-baud-rates","title":"Max Usable Baud Rates","text":"Internal TX Module Max Baud Rate Notes RadioMaster TX16S 5.25M RadioMaster Zorro 5.25M RadioMaster Boxer 5.25M RadioMaster Pocket 5.25M RadioMaster MT12 5.25M RadioMaster TX12 5.25M Jumper T-Lite V2 1.87M Limited by Handset Jumper T-Pro 1.87M Limited by Handset Jumper T20 1.87M Limited by Handset Jumper T14 5.25M Jumper T15 5.25M Jumper T12 Max 5.25M BetaFPV Lite Radio 3 Pro 1.87M Limited by Handset HelloRadio V16 5.25M External TX Module Max Baud Rate Notes Happymodel ES24TX (inc. slim, nano, etc) 5.25M Happymodel ES24TX Pro/Slim Pro 5.25M Happymodel ES900TX 5.25M Happymodel ES915/868TX 1.87M STM-based BetaFPV Micro &amp; Nano (V1 &amp; V2) 5.25M BetaFPV SuperG 5.25M RadioMaster Ranger (Micro &amp; Nano included) 5.25M RadioMaster Bandit (Micro &amp; Nano included) 5.25M Axisflying Thor 5.25M EMAX Aeris OLED &amp; Nano 5.25M NamimnoRC Flash/Voyager (no OLED) 3.75M STM-based NamimnoRC Flash/Voyager OLED 5.25M Vantac Lite 1.87M Jumper Aion Nano 1.87M iFlight Command 8 3.75M wired as external module HGLRC Hermes 5.25M HGLRC T ONE OLED 5.25M FrSky R9M/R9M Lite/R9M Lite Pro 1.87M FrSky R9M 2018 (non-ACCESS) 115K Resistor Mod for 400K QuadKopters JR &amp; Slim 5.25M SIYI FM30 1.87M STM-based ImmersionRC GHOST 1.87M STM-based <p>Note</p> <p>The Max Baud Rate for external modules will still depend on the capabilities of the Radio Handset. </p> <p>As stated above, older radios like the QX7 and X9D(+) will require hardware mods and software tweaks, like the One Bit sampling mode, to work reliably at higher baud rates. We recommend not going higher than 400K on these radios. Set them higher at your own risk.</p> <p>Newer EdgeTX radios can easily use higher baud rates without modification and we recommend using the maximum baud rate whenever you can. </p> My TX Module is not in this list! (click/tap to expand) <p>Don't be salty. That just means the maintainers are late with the updates. Newer TX modules being released are all ESP-based now. If your TX module has WiFi or Bluetooth Connectivity, then they are ESP-based, and thus, should be capable of 5.25M Baud Rate (depending on the handset).</p>"},{"location":"quick-start/transmitters/tx-prep/#adc-filter","title":"ADC Filter","text":"<p>The ADC filter is enabled by default in OpenTX and is known to cause issues with RC Command data. This can result in \"jagged\" RC command responses in black box logs, caused by sequential RC packets that have the same command value (which were \"smoothed\" by the ADC filter). We recommend turning the ADC filter OFF in OpenTX/EdgeTX.</p> <p>To check and change this setting, follow these steps:</p> <ol> <li>Press SYS Key.<ul> <li>Older Radios or those with only one Menu Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to get to the System Menu.</li> </ul> </li> <li>Press the PAGE Key until you reach the Hardware Page.</li> <li>Scroll down until you reach the <code>ADC Filter</code> setting.</li> <li>Press Enter Key to toggle it On or Off.</li> </ol> EdgeTX 2.7.0 (and newer) Per-model Settings (click/tap to expand) <p>With EdgeTX 2.7 or newer, you can set this per model (Global, On, Off) as this is helpful on Fixed Wing models equipped with PWM receivers connected to slower servos.</p> <ol> <li>Press MDL Key.<ul> <li>Older Radios or those with only one Menu Key will need to short-press the Menu Key to access the Model Menu.</li> <li>Consult your Radio User's Manual on how to get to the Model Menu.</li> </ul> </li> <li>Press the PAGE Key until you reach the Model Setup Page. On Colored Screen Radios, this should not be needed.</li> <li>Scroll down until you reach the <code>ADC Filter</code> setting.</li> <li>Press Enter Key once.</li> <li>Use the Scroll wheel to select between Global(uses the setting from the Hardware page in the System Menu), On or Off.</li> <li>Press Enter Key once more to set it.</li> </ol>"},{"location":"quick-start/transmitters/tx-prep/#model-setup","title":"Model Setup","text":""},{"location":"quick-start/transmitters/tx-prep/#rf-protocol","title":"RF Protocol","text":"<p>Note</p> <p>If you're using an External ExpressLRS Module, make sure the Internal RF Module is OFF.</p> <p>If your Radio has an Internal ExpressLRS Module, and you want to use it instead of an external module, then set the External RF Module to OFF, and then set the Internal RF Module to CRSF Protocol.</p> <p>ExpressLRS uses the CRSF serial protocol to communicate between the transmitter and the TX module. Follow the following procedure to set it up on the currently selected Model:</p> External ExpressLRS ModulesInternal ExpressLRS Modules <ol> <li>Press the MDL Key.<ul> <li>Older Radios or those with only one Menu Key will need to short-press the Menu Key to access the Model Menu.</li> <li>Consult your Radio User's Manual on how to get to the Model Menu.</li> </ul> </li> <li>Press the PAGE Key until you reach the Model Setup Page. On Colored Screen Radios, this should not be needed.</li> <li>Scroll down until you reach the Internal RF settings. Set this to <code>Off</code>.</li> <li>Scroll down until you reach the External RF settings.</li> <li>Set the Mode to <code>CRSF</code>.<ul> <li>You can also change the baud rate setting at this point.</li> </ul> </li> <li>(Optional) Set the Receiver ID to a Unique Number.</li> <li>Press the RTN Key or Exit the Model Menu</li> </ol> <p> </p> <p> </p> <ol> <li>Press the MDL Key.<ul> <li>Older Radios or those with only one Menu Key will need to short-press the Menu Key to access the Model Menu.</li> <li>Consult your Radio User's Manual on how to get to the Model Menu.</li> </ul> </li> <li>Press the PAGE Key until you reach the Model Setup Page. On Colored Screen Radios, this should not be needed.</li> <li>Scroll down until you reach the Internal RF settings.</li> <li>Set the Mode to <code>CRSF</code>.</li> <li>(Optional) Set the Receiver ID to a Unique Number.</li> <li>Scroll down until you reach the External RF settings. Set this to Off.</li> <li>Press the RTN Key or Exit the Model Menu</li> </ol> No CRSF Mode Option? (click/tap to expand) <p>If for some reason, you cannot find the CRSF Protocol under the Internal RF Modes, set the <code>Internal Module Type</code> to CRSF via your Radio's <code>System Menu -&gt; Hardware</code> page.</p> <ol> <li>Press the SYS Key. <ul> <li>Radios without a dedicated SYS Key will need to long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to get to the System Menu.</li> </ul> </li> <li>Press the PAGE Key until you get to the Hardware page.</li> <li>Scroll down until you reach the Internal RF settings.</li> <li>Set the Type to <code>CRSF</code>.<ul> <li>You can also set the Baudrate at this point.</li> </ul> </li> <li>Press the RTN Key or Exit the Hardware Menu, and go back into setting your Internal RF module.</li> </ol> <p> </p> <p> </p> <p>Note</p> <p>The iFlight Commando 8 is NOT using an internal RF module for its ExpressLRS units, unlike the RadioMaster Zorro, RadioMaster TX16S MK2, RadioMaster TX12 MK2, Jumper T-lite V2, Jumper T-pro or the BetaFPV Lite Radio 3 Pro.</p> <p>Set the Internal RF module to Off, and set the External RF module to CRSF protocol, as any External RF module requires.</p>"},{"location":"quick-start/transmitters/tx-prep/#switches-and-aux-channels","title":"Switches and Aux Channels","text":"<p>By default, a fresh model does not have any Aux Channels configured (Aux channels start from Ch5, with the first 4 Channels assigned to your joysticks). If moving any of the switches in your radio doesn't affect your Modes in Betaflight or INAV, this is one of the main reasons. So let's get this sorted out!</p> <ol> <li>Press the MDL Key.<ul> <li>Older Radios or those with only one Menu Key will need to short-press the Menu Key to access the Model Menu.</li> <li>Consult your Radio User's Manual on how to get to the Model Menu.</li> </ul> </li> <li>Press the PAGE Key until you reach the Mixes Page.</li> <li>Scroll down and select the Channel you want to configure.</li> <li>Long press Enter and select Edit and press Enter once more.</li> <li>(Optional) You can name this channel however you want to remind you of its purpose.</li> <li>Select Source. Press the Enter Key.</li> <li>Activate or flick the Switch you'd want to use for this channel. <ul> <li>An example would be for CH5, which will be your Arming switch, you'd want to choose a 2-position switch.</li> </ul> </li> <li>Press the Enter Key once more to set the switch.</li> <li>Press RTN Key once to exit the Channel Mix editor.</li> <li>Repeat steps 3-9 until you have configured all the switches you think you will need.</li> </ol> Mono-Screen RadioColored-Screen Radio <p> </p> <p> </p> <p> </p> <p> </p>"},{"location":"quick-start/transmitters/updating/","title":"Typical Updating Steps","text":""},{"location":"quick-start/transmitters/updating/#esp-based-tx-module-updating-methods","title":"ESP-based TX Module Updating Methods","text":"via WiFivia UARTvia ETX Passthrough Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <ol> <li>Connect your TX Module to your Computer via a USB Data Cable. Best if you remove it from your Radio.<ul> <li>Some TX Modules would require disassembly before you can reach the USB port.</li> </ul> </li> <li> <p>Determine whether your TX Module is being detected correctly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the TX Module is not being detected correctly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>Commonly used USB-to-UART chip for ExpressLRS Modules include: CP210x, CH340 and the CH9102 (driver download pages linked).</li> </ul> <p></p> </li> <li> <p>Some TX Modules have switches to change how the USB port interacts with the different components in the module. Make sure to set it in the position for \"Flashing the TX Module via UART\".</p> <ul> <li>The ES24TX line of modules from Happymodel have jumper blocks or dipswitches inside the module.</li> <li>The BetaFPV Micro modules have dipswitches at the back.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your module from USB. Return any dipswitches or jumper blocks to their \"Normal Operation\" position.</li> <li>Reconnect your TX module into your Radio's External Module bay.</li> <li>Using the ExpressLRS Lua Script from the Tools Menu, check  if the firmware version got updated.</li> </ol> <p> </p> <p>Info</p> <p>ETX Passthrough is the result of the collaborative effort between RadioMaster, EdgeTX and ExpressLRS.</p> <p>It is only available on Radios with Internal ExpressLRS Modules.</p> <p>Before you start, ensure you have the latest EdgeTX firmware version on your Radio. Consult the EdgeTX documentation regarding the updating process.</p> <ul> <li><code>TX16S MK2</code>: Update it to at least EdgeTX 2.7.0 (f79978b) or EdgeTX 2.7.1 (a55aff0).</li> <li><code>Zorro</code>: Update it to at least EdgeTX 2.7.0 (f79978b) or EdgeTX 2.7.1 (a55aff0). It often comes with an earlier EdgeTX 2.7.0 version (2bdd4974) which results in unsuccessful flashing.</li> <li><code>TX12 MK2</code>: Update it to at least EdgeTX 2.8.0 (f6d140e) for full EdgeTX support.</li> <li><code>Boxer</code>: The factory EdgeTX firmware should be based off an early EdgeTX 2.8.0 and wouldn't need an update.</li> <li><code>BetaFPV Lite Radio 3 Pro</code>: Update it to at least EdgeTX 2.8.0 (f6d140e) for full EdgeTX support.</li> <li><code>Jumper T-Pro</code>: Update it to at least EdgeTX 2.7.1 (a55aff0) for full EdgeTX support.</li> <li><code>Jumper T-Lite V2</code>: Update it to at least EdgeTX 2.8.0 (f6d140e) for full EdgeTX support.</li> </ul> Simplest EdgeTX Updating Procedure (click/tap to expand) <ol> <li>Visit http://buddy.edgetx.org/.</li> <li>Select the EdgeTX version and the Radio Model you want to update from the Left-hand side column.</li> <li>Click the Download .bin button at the bottom of the page.</li> <li>Save the firmware file into your Radio's SD Card, inside the <code>Firmware</code> Folder.</li> <li>Reboot the Radio into DFU/Bootloader mode.<ul> <li>Turn off your radio.</li> <li>Press and hold the two horizontal Trim switches then press the Power button. The Screen should Light up. Let go of the buttons.</li> <li>Some Radios have a different procedure, like the BetaFPV Lite Radio 3 Pro. Consult the Manual for the steps to get it into this DFU/Bootloader mode.</li> </ul> </li> <li>Select <code>Write Firmware</code>.</li> <li>Navigate to the EdgeTX firmware file you just downloaded.</li> <li>Follow the screen prompts.</li> <li>Once Writing is complete, reboot the radio.</li> <li>Check the Radio's Version Page to verify you have the version you need.</li> </ol> <p>Also, make sure you have an internal ELRS module on your Radio. The following steps only apply to handsets with ExpressLRS-specific internal modules. There are stickers marked with \"ELRS\" attached to your radio packaging or boxes, as well as on the JR module bays indicating the type of internal rf module the radio has.</p> <p>The current Model on the radio should be using the Internal ExpressLRS Module. Test this by loading the ExpressLRS Lua Script from the Tools Menu.</p> <p> </p> <p>There's one more setting you want to make sure is set properly before proceeding.</p> <ol> <li>Press the SYS Key on the Radio.<ul> <li>Radios without a dedicated SYS Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to get to the System Menu.</li> </ul> </li> <li>Press the PAGE Key until you reach the Hardware Page.</li> <li>Scroll down until you see the Serial Ports settings.</li> <li>Select or highlight USB-VCP. Press Enter and use the Scroll Wheel to set it to <code>CLI</code> mode if it is set to a different setting. Press Enter once more to confirm the changes.</li> <li>Exit the Hardware menu by long-pressing RTN Key.</li> </ol> <p>Now follow the next steps to get your Internal ExpressLRS Module Updated:</p> <ol> <li> <p>Connect your powered-up Radio to your Computer via a USB Data Cable.</p> <p> </p> </li> <li> <p>On your Radio, scroll down and select <code>USB Serial(VCP)</code> then press the Enter Key. Set your Radio aside in the meantime.</p> <p> </p> </li> <li> <p>On your Computer, check whether your Radio is being recognized correctly as a STMicroelectronics Virtual COM Port device.</p> <p>Important</p> <p>This is a vital step and a common failure point. Pay attention.</p> <p>Windows Users can use Device Manager to check whether the Radio is being recognized correctly.</p> <p> </p> <p> Yellow Caution Triangles in the Device Manager, or any mention of <code>&lt;Radio Name&gt; Serial Port</code> means drivers aren't installed.</p> <p>Download the Driver package first. Unzip/extract the contents of the package and run/execute (double-click) the installer file (<code>VCP_V1.5.0_Setup_W7_x64_64bits.exe</code> for Windows 10/11 Users). </p> <p>Once Drivers are installed, check again if the Radio is now being recognized correctly. You may have to first unplug-replug the USB Cable or even reboot your computer.</p> <p>You only have to do this once usually.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> </li> <li> <p>Set the Flashing Method to <code>EdgeTXPassthrough</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your Radio from USB.</li> <li>Using the ExpressLRS Lua Script from the Tools Menu, check if the firmware version got updated.</li> </ol>"},{"location":"quick-start/transmitters/vantac-lite/","title":"Vantac Lite","text":"<p>Advisory</p> <p>If you are flashing/updating your TX module via WiFi for the first time from the factory firmware, or from an older firmware, to ExpressLRS 3.x firmware, you will first need to flash it to version 2.5.2, then flash it with the Repartitioner binary file (right click, save as/save file as). Should it complain about Target Mismatch, just click <code>Flash Anyway</code>. Only then you can flash to 3.x firmware via WiFi.</p> <p>Joshua Bardwell has a video about it here.</p> <p>Updating to 3.x via UART or ETX Passthrough doesn't require 2.5.2 firmware or the Repartitioner.</p>"},{"location":"quick-start/transmitters/vantac-lite/#flashingupdating-your-tx-module-firmware","title":"Flashing/Updating your TX Module Firmware","text":"via WiFivia UART Manual Upload via APManual Upload via Local WiFiAuto Upload <p>Heads up!</p> <p>This option is only possible if you haven't previously flashed or configured your TX Module with your Home WiFi SSID and Password or if it's unable to connect to said WiFi Network because the router is Off or unreachable.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Vantac 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Vantac Lite 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.</p> <p></p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>Wifi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Using a WiFi-capable device such as your smartphone or laptop, scan for the <code>ExpressLRS TX</code> Access Point. Connect to this Access Point.</p> <p></p> <ul> <li>If your TX Module is previously flashed with your Home WiFi SSID and Password, and it is able to connect to that WiFi Network, then the Access Point will not show up.</li> <li><code>expresslrs</code> is the Password for this Access Point.</li> </ul> Where's the Access Point? (click/tap to expand) <p>If you cannot find the Access Point, make sure the device you're using is capable of connecting to 2.4GHz WiFi Networks. Also try putting the devices closer together.</p> <p>If you still cannot find the Access Point, chances are that you have set it with your WiFi SSID and Password before, and it has connected to your WiFi Network.</p> <p></p> </li> <li> <p>Once connected to the <code>ExpressLRS TX</code> Access Point, open up a Browser window, type in the IP Address <code>10.0.0.1</code> on the Address Bar, and press Enter. The ExpressLRS Web UI will load.</p> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Vantac 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Vantac Lite 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Once the Build process is done, a Temp folder window containing your firmware binaries should pop up.     </p> <ul> <li>Do not close this Temp folder because this is where you will take your firmware from in the later steps. If you are planning on using your phone or tablet to upload the firmware file later, copy the firmware file into your device.</li> </ul> <p>NOTICE</p> <p>With the release of ExpressLRS 3.3.0 and ExpressLRS Configurator 1.6.0, only one file will show up. Use the <code>firmware.bin</code> file for the next steps.</p> <p></p> </li> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>With your module now in WiFi Mode and it was able to connect to your Local WiFi Network, open a Browser window on any WiFi-capable device that is also connected to the same Local WiFi Network. Type in the Address http://elrs_tx.local on your browser's Address Bar. The ExpressLRS Web UI should load.</p> <ul> <li>If your browser cannot resolve this address and it cannot load the ExpressLRS Web UI, this means that MDNS is not working on your device or network.</li> </ul> MDNS is not working! (click/tap to expand) The <code>arp</code> CommandRouter DHCP List <ol> <li>Open up a Command Prompt window on your computer.</li> <li>Execute the command <code>arp -a</code>, which will list all the devices in the Network.</li> <li>Use each of the IP Addresses marked as <code>Dynamic</code> as a URL in your Browser until you get to the ExpressLRS Web UI.</li> </ol> <ol> <li>Log in into your Router dashboard.</li> <li>Check the DHCP List and look for the \"elrs\" device.</li> <li>Take note of the IP Address given by your router.</li> <li>Use this IP address in your Browser as the URL.</li> </ol> </li> <li> <p>Activate the <code>Update</code> Tab.</p> <p> </p> <ul> <li>If your TX Module is still on an earlier firmware version, then there's no Update Tab, and instead, you will need to scroll down to find the Firmware Update section.</li> </ul> <p> </p> </li> <li> <p>Drag and drop the Firmware file from the Temp folder into the File Upload field.</p> <ul> <li>You can also use the Browse or Choose File button and browse for the file yourself, especially if you've copied/moved it somewhere else on an earlier step.</li> </ul> </li> <li>Click the Update button to start the Updating procedure.</li> <li> <p>Wait for the firmware file to get uploaded and flashed into your device. It only takes a minute or two, and you will see the Success Popup Message.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p>Heads up!</p> <p>This option is only possible if you have previously flashed or configured your TX Module with your Home WiFi SSID and Password and the module is able to connect to said WiFi Network.</p> <p>MDNS must also be working so your browser can resolve the address http://elrs_tx.local and load the ExpressLRS Web UI from said address.</p> <ol> <li> <p>Press the SYS Key on your Radio to display the Tools Menu, where you can find the Lua Scripts.</p> <ul> <li>Older Radios or those with only one Menu Key must long-press the Menu Key to access the System Menu.</li> <li>Consult your Radio User's Manual on how to access the System Menu.</li> </ul> </li> <li> <p>Scroll down and select <code>ExpressLRS</code> Lua Script.</p> <p> </p> <ul> <li>If the script is nowhere to be found, download it from this page and save it into your Radio SD Card Scripts/Tools/ folder.</li> </ul> </li> <li> <p>Press Enter to Load it.</p> <p> </p> <ul> <li>If the script is stuck on a \"Loading...\" screen, return to the Radio Preparation Page and make sure you have configured your radio properly for ExpressLRS use.</li> </ul> </li> <li> <p>Scroll down and select <code>WiFi Connectivity</code> and press Enter.</p> </li> <li> <p>Select <code>Enable WiFi</code> and press Enter.</p> <p> </p> </li> <li> <p>The <code>WiFi Running</code> screen will show up. Your TX module is now in WiFi mode.</p> <ul> <li>Do not worry if the Script stops and shows a Syntax Error. The module is still in WiFi mode. The Syntax Error could be because you're on an older radio, older EdgeTX/OpenTX firmware, or both. It could also be because your TX module is on an earlier firmware version, and you're using a more recent Lua Script.</li> </ul> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Vantac 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Vantac Lite 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>WiFi</code>.</p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the upload to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> <p> </p> </li> <li> <p>On your Radio, the <code>WiFi Running</code> screen should disappear and should be back to the WiFi Connectivity Menu of the ExpressLRS Lua Script.</p> </li> <li>Long-press the RTN Key to exit the ExpressLRS Lua Script. Then reload it to check for the ExpressLRS Firmware version and verify your TX module has been updated.</li> </ol> <p> </p> <ol> <li> <p>Connect your TX Module to your Computer via a USB Data Cable. Best if you remove it from your Radio.</p> </li> <li> <p>Determine whether your TX Module is being detected properly as a USB-to-UART Device.</p> <p></p> <ul> <li>Windows Users can check via Device Manager, Ports device grouping.</li> <li>Drivers will be needed if the TX Module is not being detected correctly. This is indicated by a Yellow Caution Triangle  in Device Manager.</li> <li>You can download the drivers from the links below: <ul> <li>Windows users: CH340 Windows Drivers</li> <li>For other Operating Systems, head to this site to download your needed drivers.</li> </ul> </li> </ul> <p></p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>Vantac 2.4 GHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>Vantac Lite 2.4GHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>UART</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> <li>Local WiFi Network Credentials (Optional. Will be used the next time the device goes into WiFi mode).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li>Unplug your module from USB.</li> <li>Reconnect your TX module into your Radio's External Module bay.</li> <li>Using the ExpressLRS Lua Script from the Tools Menu, check if the firmware version got updated.</li> </ol>"},{"location":"quick-start/transmitters/voyager900/","title":"NamimnoRC Voyager","text":"<p>Attention</p> <p>ExpressLRS 3.5.x will be the last version to support STM32-based hardware. This includes the Happymodel PP, ES915 Tx and Rx, early NamimnoRC Flash and Voyager, FrSky R9, SIYI and ImmersionRC hardware.</p> <p>The STM32 platform's limited compute resources and feature gaps (WiFi, Bluetooth, Backpacks) made for an inferior version of ExpressLRS that necessitated disproportionate maintenance burden for the Dev Team.</p>"},{"location":"quick-start/transmitters/voyager900/#flashingupdating-the-tx-module-firmware","title":"Flashing/Updating the TX Module Firmware","text":"via Stock_BLvia STLink <ol> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>NamimnoRC Voyager 900MHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>Stock_BL</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Build button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>A Temp folder will open up with the firmware.elrs file. Copy-paste the firmware.elrs file into your Radio's SD Card (preferably to the <code>/FIRMWARE</code> folder for easy access).</p> </li> <li> <p>On your radio, open the System Menu. </p> <ul> <li>On newer radios, you can press the SYS key to open the System Menu</li> <li>On older radios, or radios that only have a menu key, long-press the Menu key to open the System Menu</li> </ul> </li> <li> <p>Using the Page key/s, navigate to the SD-HC Card page, scroll-down and open the <code>FIRMWARE</code> folder where you can find the firmware.elrs file.</p> </li> <li> <p>Highlight the file and press-hold the Enter button and select \"Flash External ELRS\". Wait for the firmware to be written.</p> No Sync (click/tap to expand) <ul> <li>Make sure you have updated the OpenTX/EdgeTX firmware of your radio to a newer version</li> <li>Make sure the current model selected on the radio is set up for ExpressLRS Use. See the [Radio Preparation] guide.</li> </ul> </li> <li> <p>With the ExpressLRS Lua Script in the Tools page, verify if the firmware version has been updated.</p> </li> </ol> <p> </p> <p>Attention</p> <p>Only use this method if the firmware has been corrupted.</p> <ol> <li> <p>Disassemble your TX Module to get access to the mainboard.</p> <p> </p> <p> </p> </li> <li> <p>Connect your STLink V2 dongle to the pads shown in the image below.</p> <p> </p> </li> <li> <p>Connect your STLink V2 dongle to your Computer's USB Port. Make sure it is being detected correctly.</p> </li> <li> <p>Launch the ExpressLRS Configurator on your Computer.     </p> <ul> <li>Make sure <code>Official Releases</code> is active from the horizontal tab.</li> <li>Ensure you select the Released version you want to flash into your TX module.</li> </ul> <p></p> </li> <li> <p>Select the Device Category and Device target matching your hardware.</p> <ul> <li> <p>Device Category: </p> <ul> <li><code>NamimnoRC 900 MHz</code></li> </ul> </li> <li> <p>Device: </p> <ul> <li><code>NamimnoRC Voyager 900MHz TX</code></li> </ul> </li> </ul> </li> <li> <p>Set the Flashing Method to <code>STLink</code></p> <p> </p> </li> <li> <p>Set the firmware options for your device.</p> <ul> <li>Regulatory Domain (Mandatory. Choose the domain appropriate for the location or country you're flying).</li> <li>Binding Phrase (Optional, but Highly Recommended. Note this phrase as it should be the same on your other devices, or they will not bind or sync).</li> </ul> </li> <li> <p>Click the Flash button.</p> <p> </p> </li> <li> <p>Wait for the process to finish. A Green Success bar will show up in the ExpressLRS Configurator.</p> </li> <li> <p>Disconnect the STLink V2 dongle from the TX Module PCB and reassemble the module.</p> </li> <li>Reattach your TX Module into your Radio and, using the ExpressLRS Lua Script, verify if the firmware version has been updated.</li> </ol>"},{"location":"software/airport/","title":"AirPort","text":"<p>NOTE</p> <p>With the addition of MAVLink support in ELRS 3.5, it is no longer recommended to use Airport for MAVLink telemetry. Please see the MAVLink page for more info.</p>"},{"location":"software/airport/#description","title":"Description","text":"<p>AirPort provides a firmware option that allows you to turn a regular ExpressLRS transmitter and receiver pair into a bi-directional transparent serial data link, over the air. A TX module can connect via USB to a laptop, and RX modules (or those flashed using RX-as-TX) can connect to a free UART on your device, as per usual. This allows for a wireless serial data link between TX and RX, as if they were connected directly via serial. Note that due to the packet size and sensitive LoRa modulation parameters used by ELRS, the data rate is relatively slow. Also, as the protocol has no knowledge of the data being transported, there is no ACK or retransmission which may result in dropped packets.</p> <p>Warning</p> <p>The AirPort option completely replaces the RC link, and repurposes it as a data link. If you intend to retain RC control via ELRS, you will need to run 2x TXs and 2x RXs on the ground and air, respectively. One TX+RX pair sends your normal RC link data, just as it does now, and the other TX+RX pair sends the serial data.</p>"},{"location":"software/airport/#required-hardware","title":"Required Hardware","text":"Airport Hardware <ul> <li>ExpressLRS TX module: A dedicated external TX module is required for the data link. The TX should ideally have an external USB port to make it easy to attach to a computer (assuming a computer is the desired endpoint for the data link). It is also favorable to use a module with a screen and a 5-way button, which makes packet rate and power selection easier. The TX should use an ESP-based microcontroller (for access to the WebUI).</li> <li>ExpressLRS RX: Any ExpressLRS ESP-based receiver is compatible with AirPort (technically STM-based receivers can work too, but it will be harder to set up and is therefore not covered in this guide). Receivers with higher telemetry power output (i.e. 100mW telemetry power) will provide better results.</li> </ul> <p>Frequency band</p> <p>If you plan to use two side-by-side ELRS links on the craft (one for RC and one for telemetry), it is HIGHLY recommended to use different frequencies for each link. For example, you will see good results with RC on 2.4GHz and AirPort on 900MHz. The range will be severely reduced if both RC and AirPort are on the same frequency band.</p>"},{"location":"software/airport/#data-rate-vs-baud-rate","title":"Data rate vs Baud rate","text":"<p>AirPort uses a 64-byte buffer to queue bytes that it receives from the FC or GCS, before sending them over the air. If the buffer overflows, the entire 64 bytes are discarded. For this reason, it is VERY important to select a serial baud rate that limits the flow of serial bytes to match the maximum over-the-air (OTA) data rate.</p> <p>The OTA data rate is determined by the selected packet rate. A faster packet rate will result in a higher data rate at the expense of range. The table below shows the baud rate you should use when configuring the AirPort feature.</p> Packet Rate Maximum OTA Data Rate (bytes/s) Baud Rate to Select 25Hz 62 600 50Hz 125 1200 100Hz 250 2400 100Hz Full Res 500 4800 150Hz 375 2400 200Hz 500 4800 200Hz Full Res 1000 9600 250Hz 625 4800 333Hz Full Res 1665 14400 or 9600 500Hz 1250 9600 1000Hz 2500 19200 1000Hz Full Res 5000 38400 <p>A good baseline is:</p> <ul> <li>100Hz Full Res at 4800 baud for 868/915MHz</li> <li>333Hz Full Res at 14400 or 9600 baud for 2.4GHz</li> </ul>"},{"location":"software/airport/#configuring-airport","title":"Configuring AirPort","text":"<p>Warning</p> <p>Once AirPort is enabled, there will be no way to access the RX settings from the LUA script. Before enabling the AirPort option, it is recommended that you bind the TX and RX normally, and (using the LUA) set the RX telemetry power output to maximum. If you already have AirPort enabled, and need to change the RX power, you will need to disable the AirPort checkbox by doing the reverse of the steps below, change the power using LUA, then re-enable AirPort.</p> <p>Binding Phrases</p> <p>Use a binding phrase that is different from whatever you are using for your RC link if you intend to run RC + AirPort side by side in ANY way.</p> TX ModulesRXes <ol> <li> <p>Flash the TX Module with the latest ELRS release version (AirPort is available in <code>v3.3.0</code> onwards). </p> </li> <li> <p>Enable WiFi on the TX module. This can be enabled by inserting the TX into a handset, and in the LUA script select <code>WiFi Connectivity</code> -&gt; <code>Enable WiFi</code>. WiFi can also be enabled via the screen + 5-way if your TX has one (while powered via USB).</p> </li> <li> <p>Using a computer or mobile device, connect to the TX WiFi using your preferred method (hotspot or home WiFi).</p> </li> <li> <p>Open the WebUI (<code>10.0.0.1</code> for hotspot, or <code>http://elrs_tx.local</code> for home WiFi) in a browser.</p> </li> <li> <p>In the ELRS WebUI, check the <code>Use as AirPort Serial device</code> checkbox.</p> </li> <li> <p>In the <code>AirPort UART baud</code> field, enter your desired baud rate. IMPORTANT: Pay close attention to the \"Data rate vs Baud rate\" section above when choosing your baud. A good default is <code>9600</code> baud for 2.4GHz and `4800`` baud for 868/900MHz.</p> </li> <li> <p>Click <code>SAVE &amp; REBOOT</code>.</p> </li> </ol> <ol> <li> <p>Flash the RX with the latest ELRS release version (AirPort is available in <code>v3.3.0</code> onwards). </p> </li> <li> <p>Enable WiFi on the RX. This can be enabled by powering on the RX with no TX powered and waiting for the WiFi timeout.</p> </li> <li> <p>Using a computer or mobile device, connect to the RX WiFi using your preferred method (hotspot or home WiFi).</p> </li> <li> <p>Open the WebUI (<code>10.0.0.1</code> for hotspot, or <code>http://elrs_rx.local</code> for home WiFi) in a browser.</p> </li> <li> <p>In the ELRS WebUI, check the <code>Use as AirPort Serial device</code> checkbox.</p> </li> <li> <p>In the <code>UART baud</code> field, enter your desired baud rate. IMPORTANT: Pay close attention to the \"Data rate vs Baud rate\" section above when choosing your baud. A good default is <code>9600</code> baud for 2.4GHz and `4800`` baud for 868/900MHz.</p> </li> <li> <p>Click <code>SAVE &amp; REBOOT</code>.</p> </li> </ol>"},{"location":"software/airport/#optional-pre-installation-operation-checks","title":"(Optional) Pre-Installation Operation Checks","text":"<p>Once you have enabled the AirPort setting on both TX and RX, they should be ready to send bi-directional serial data. If you have an FTDI (USB to serial adapter) handy, you can confirm that the link is working as expected before installing it in a craft.</p> <ol> <li>Using a suitable USB cable, connect your TX module to a computer.</li> <li>Open a serial terminal client, such as PuTTY, and connect to the COM port for your TX module using the baud rate you chose in the section above.</li> <li>Connect your FTDI to your computer, and connect the RX to the FTDI</li> <li>Open a second instance of PuTTY, and connect to the COM port for your FTDI using the baud rate you chose in the section above.</li> <li>Type chars into each PuTTY window, and confirm you can see them on the opposite terminal session (i.e. typing into the TX PuTTY should result in the same chars appearing in the RX PuTTY window). If you see comms, everything is working.</li> </ol>"},{"location":"software/airport/#installation","title":"Installation","text":"<p>Connect the RX to a spare UART on your flight controller, as per normal:</p> <p></p> Example AirPort Receiver Wiring <p>Using the appropriate Configurator tool for your FC firmware, configure your selected UART with your desired telemetry protocol. For example, if using AirPort for MAVLink in ArduPilot, you would set:</p> <ul> <li><code>SERIALN_BAUD</code> to the baud you entered in the section above,</li> <li><code>SERIALN_OPTIONS</code> to <code>0</code>,</li> <li><code>SERIALN_PROTOCOL</code> to <code>1</code> or <code>2</code> (for MAVLink v1 or MAVLink v2).</li> </ul> <p>Connect the TX to a computer via USB, open the program that you intend to view the telemetry in, then connect to the COM port for your TX module at the baud you entered above. For example, if using AirPort for MAVLink in ArduPilot, you would open Mission Planner / QGC etc. and select the TX COM port, enter the baud, then click Connect.</p>"},{"location":"software/backpack-telemetry/","title":"Sentinel Tracker Integration","text":""},{"location":"software/backpack-telemetry/#introduction","title":"Introduction","text":"<p>Version 3.4+ of ELRS introduces a new option in the Backpack section of the ELRS LUA script called \"Telemetry.\" This feature allows a Backpack equipped ELRS Transmitter to forward CRSF telemetry frames to any peer that is capable of receiving ESPNOW messages. These frames can be consumed by any Backpack receivers that are bound with your bind phrase.</p> <p></p> Sentinel Integration <p>This capability is particularly useful for devices like the Sentinel Antenna Tracker, which can subscribe to ESPNOW telemetry packets and read GPS data from the telemetry feed. See the Sentinel product page</p>"},{"location":"software/backpack-telemetry/#prerequisites","title":"Prerequisites","text":"<ul> <li>ELRS transmitter and receiver with the latest firmware.</li> <li>Backpack-capable receiver (e.g., in the Sentinel Antenna Tracker).</li> <li>Configured ELRS LUA script on your transmitter.</li> </ul>"},{"location":"software/backpack-telemetry/#setting-up-the-backpack-telemetry-feature","title":"Setting Up the Backpack Telemetry Feature","text":""},{"location":"software/backpack-telemetry/#step-1-update-firmware","title":"Step 1: Update Firmware","text":"<p>Ensure both your transmitter and receiver are running the latest firmware. Follow the firmware update guide for detailed instructions. This feature is available in v3.4.0 onwards.</p>"},{"location":"software/backpack-telemetry/#step-2-enable-backpack-telemetry-in-elrs-lua-script","title":"Step 2: Enable Backpack Telemetry in ELRS LUA Script","text":"<ol> <li> <p>Access the LUA Script:</p> <ul> <li>Power on your transmitter and navigate to the System menu.</li> <li>Execute the ELRS LUA script.</li> </ul> </li> <li> <p>Navigate to the Backpack Section:</p> <ul> <li>Scroll to find the \"Backpack\" section within the LUA script.</li> <li>Select the \"Telemetry\" option.</li> </ul> </li> <li> <p>Enable Backpack Telemetry:</p> <ul> <li>Set the \"Telemetry\" option to <code>ESPNOW</code>.</li> <li>Exit the script.</li> </ul> <p>NOTE: Backpack telemetry is transmitted on the 2.4G WiFi band, via ESPNOW (this should have a very limited impact on any LoRa signals, as it is modulated via OFDM like a normal WiFi hotspot). Every telemetry message that your transmitter receives from the craft will be re-transmitted via ESPNOW. You may want to disable Backpack Telemetry to reduce your footprint on the RF noise floor when you aren't using it, especially if you are at something like a race day, where there is often contention on the RF spectrum. To disable Backpack Telemetry:</p> <ul> <li>Execute the ELRS LUA script.</li> <li>Scroll to find the \"Backpack\" section within the LUA script.</li> <li>Select the \"Telemetry\" option.</li> <li>Set the \"Telemetry\" option to <code>Off</code>.</li> <li>Exit the script.</li> </ul> </li> </ol>"},{"location":"software/backpack-telemetry/#step-3-bind-backpack-receivers","title":"Step 3: Bind Backpack Receivers","text":"<p>Ensure your Backpack receivers (e.g., the one in the Sentinel Antenna Tracker) are bound using your bind phrase. This allows them to receive telemetry data sent via ESPNOW. See the Sentinel ELRS setup guide</p>"},{"location":"software/backpack-telemetry/#using-the-telemetry-feature-with-sentinel-antenna-tracker","title":"Using the Telemetry Feature with Sentinel Antenna Tracker","text":""},{"location":"software/backpack-telemetry/#sentinel-configuration","title":"Sentinel Configuration","text":"<p>The Sentinel Antenna Tracker includes an ESP12 Backpack-capable receiver that can consume ESPNOW telemetry frames. Ensure the tracker is properly configured to subscribe to ESPNOW telemetry packets. See the Sentinel ELRS setup guide</p>"},{"location":"software/backpack-telemetry/#viewing-telemetry-data","title":"Viewing Telemetry Data","text":"<p>Once configured, power up your GPS-equipped craft and establish the link between your ELRS Transmitter and Receiver. Ensure that GPS telemetry is being received on your Handset (go to the Model menu in EdgeTX, and inspect the Telemetry page to make sure you are getting GPS coordinates). The Sentinel Antenna Tracker will be able to read GPS data and other telemetry information from the telemetry feed provided by the ELRS transmitter.</p>"},{"location":"software/backpack-telemetry/#advanced-use-cases","title":"Advanced Use Cases","text":"<p>This new telemetry feature can be expanded for various applications, e.g.:</p> <ul> <li>Real-time flight data monitoring.</li> <li>Integration with other ESP Backpack-compatible devices.</li> </ul> <p>Any Espressif ESP-based microcontroller, like the ESP32 or ESP8266 (and many variants) is capable of receiving ESPNOW frames. Custom firmware could be written to decode the CRSF telemetry and consume it in your own custom solution. See this ESPNOW guide for an example of developing using ESPNOW.</p>"},{"location":"software/backpack-telemetry/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues:</p> <ul> <li> <p>No Telemetry Data: Ensure the \"Telemetry\" option is set to <code>ESPNOW</code> in the Backpack section of the LUA script and that the firmware is up to date. Also check that your Telemetry Ratio is set to a value that is able to provide frequent telemetry packets. As a rule of thumb, a ratio somewhere between 1:2 to about 1:16 (depending on your packet rate) will suffice. See Packet Rate and Telemetry Ratio and Telemetry</p> </li> <li> <p>Binding Issues: Verify that the bind phrase is correctly set and matches between the Backpack on your transmitter and the Sentinel receiver.</p> </li> <li> <p>Interference: The Backpack Telemetry feature uses a point to point WiFi-based link to forward telemetry. The Sentinel tracker (or other Backpack receiver type) should be within 10m of the ELRS transmitter (ideally 5m or less) for good WiFi signal. Some ELRS transmitters have better Backpack WiFi antennas than others, so your mileage may vary depending on your hardware. If you are experiencing drops in the link between ELRS and the Sentinel tracker (or other Backpack receiver type), try moving the two closer, or move to an area with less WiFi noise.</p> </li> </ul>"},{"location":"software/dynamic-transmit-power/","title":"Dynamic Transmit Power","text":""},{"location":"software/dynamic-transmit-power/#description","title":"Description","text":"<p>Dynamic Power allows the TX module to lower its output power from the configured power level using signal information from the RX. The TX will lower power if the signal level is above a threshold (see below) and will raise power if it is not, has a low LQ, or has a sudden drop in LQ. Because Dynamic Power relies on telemetry, telemetry must be enabled. That is, \"Telem Ratio\" must be set to anything except \"Off\" or \"Race\".</p> <p>Warning</p> <p>Dynamic Power relies on telemetry. If no telemetry is received while armed, then the power level will be kicked up to the maximum configured power level.</p>"},{"location":"software/dynamic-transmit-power/#how-to-configure-dynamic-power","title":"How to configure Dynamic Power","text":"<p>In the ELRS Lua script, select <code>&gt; TX Power</code>. There are three configurable elements.</p> <ul> <li><code>Max Power</code>: The output power will never exceed this power output level in any situation.</li> <li><code>Dynamic</code>: Three options are available.<ul> <li><code>Off</code>: Fixed power, always set power to the configured <code>Max Power</code> output.</li> <li><code>Dyn</code>: Dynamic power is enabled.</li> <li><code>AUX9</code>-<code>AUX12</code>: Dynamic power is enabled only when this AUX channel is <code>high</code>, and power is fixed to the <code>Max Power</code> when <code>low</code>. Demo Video</li> </ul> </li> <li><code>Fan Thresh</code>: Fan threshold. If the module has a fan, it will be enabled starting at this power level after a short delay.</li> </ul> <p>Another important setting is to make sure your craft is armed on AUX1=<code>high</code> (~2000us). See Switch Modes for more information about AUX channels.</p>"},{"location":"software/dynamic-transmit-power/#details","title":"Details","text":""},{"location":"software/dynamic-transmit-power/#starting-power","title":"Starting Power","text":"<p>On module power up with Dynamic Power enabled, transmit power is set to the minimum supported power.</p>"},{"location":"software/dynamic-transmit-power/#lowering-power","title":"Lowering Power","text":"<p>For non-FLRC modes, Dynamic Power uses the average signal to noise ratio (SNR) reported by the receiver. If the SNR is above a threshold, the power will be lowered by one level. SNR is used because it takes into account interference (the \"noise\" in signal-to-noise) and is not affected by receivers with LNAs, which boost RSSI dBm. The thresholds for lowering the power are specific to each packet rate. For example, 250Hz (LoRa) will lower the power if SNR is &gt;= 9.5 but 150Hz (LoRa) will lower power if the SNR is &gt;= 8.5.</p> <p>For FLRC modes (packet rates beginning with <code>F</code> or <code>D</code>) Dynamic Power averages the last few RSSI dBm readings from the RX. If the RSSI is &gt;= -83dBm, the transmit power is lowered by one level.</p> <p>For both algorithms, the power will only be lowered if the link quality (LQ) is 95% or higher.</p>"},{"location":"software/dynamic-transmit-power/#raising-power","title":"Raising Power","text":"<p>The opposite of the \"lowering power\" algorithm is also in place, to raise power as needed slowly such as when flying away on a long range flight. The algorithms are the same as for lowering power, except with different thresholds. Examples:</p> <ul> <li>250Hz (LoRa) raise power if SNR &lt;= 3.0</li> <li>150Hz (LoRa) raise power if SNR &lt;= 0.0</li> <li>F500 (FLRC) raise power if RSSI &lt;= -89 dBm. Note that all FLRC modes use this same limit.</li> </ul> <p>To be proactive when telemetry is not received, Dynamic Power will also increase power one level for each missed telemetry packet, starting when two are missed back to back.</p> <ul> <li>TX misses first telemetry packet: no action, maintain power level</li> <li>TX misses second telemetry packet: increase power 1 level</li> <li>TX misses third telemetry packet: increase power 1 level</li> <li>...</li> <li>TX receives telemetry packet: normal raise / lower conditions apply</li> </ul> <p>In addition to the slow power ramp up, three LQ-based conditions will raise the power immediately to the maximum configured value.</p> <ol> <li>If the LQ ever drops below the hard limit (50% LQ), the power will jump to the max.</li> <li>If the LQ drops suddenly in a single telemetry update compared to the moving average. This is intended to react to flying behind a structure where the LQ suddenly takes a hit and is expected to drop further. Example: LQ is running 100% (as ExpressLRS does under most conditions) and the TX receives a telemetry packet with 80% LQ, the power will jump to the max.</li> <li>If telemetry is lost entirely with the arm switch high. Any time the TX is \"disconnected\" while armed, the power will jump to the max.</li> </ol> <p>Finally, if reported LQ is below 85% and no other condition has been met this period, increase the power one level.</p>"},{"location":"software/dynamic-transmit-power/#notes","title":"Notes","text":""},{"location":"software/dynamic-transmit-power/#minimum-recommended-telemetry-ratio","title":"Minimum Recommended Telemetry Ratio","text":"<p>Because dynamic power relies on information coming back from the RX to know how to adjust the power, dynamic power is only available if the \"Telemetry Ratio\" is not set to Off / Race. Any ratio will allow it to operate, but the algorithm is optimized around having at least 2x Link Statistics telemetry packets per second, which is provided with the \"Std\" telemetry option. If using a manual telemetry ratio, it is recommended to use at least the ratio suggested below.</p> Packet Air Rate Telemetry Ratio 1000Hz 1:128 500Hz 1:128 250Hz 1:64 200Hz 1:64 150Hz 1:32 100Hz 1:32 50Hz 1:16 <p>On startup, the output power will be set to the lowest possible value. If telemetry is lost while disarmed, the output power will stay at the current value until telemetry is received again. This is intended to prevent everyone's TX from blasting to max power when swapping batteries.</p>"},{"location":"software/dynamic-transmit-power/#osd-power-display","title":"OSD Power Display","text":"<p>To see the current output power on your FPV OSD, enable the <code>TX Uplink Power</code> OSD element and set <code>Switch Mode</code> to <code>Wide</code> in the ELRS lua. <code>TX Uplink Power</code> is not available if <code>Switch Mode</code> is set to <code>Hybrid</code>, or on older Betaflight (&lt;4.3.0) and iNav (&lt;2.6.0) versions. </p>"},{"location":"software/dynamic-transmit-power/#edgetx-opentx-power-readout","title":"EdgeTX / OpenTX Power Readout","text":"<p>Alternatively, a handset special function can be used to generate an audio notification when the TX power level changes.</p> <ul> <li>Set a logical switch to <code>|\u0394|&gt;x</code> / <code>TPWR</code> / <code>1mW</code> as shown in L04 below. The logical switch triggers when the power changes by at least 1mW.</li> </ul> <p></p> <ul> <li>For a readout when the power changes, set a special function triggered from the logical switch, and assign <code>Play Value</code> / <code>TPWR</code> / <code>1x</code> (SF10 in the picture). If instead you'd prefer the power to be read out periodically, choose a switch to enable the special function, and assign <code>Play Value</code> / <code>TPWR</code> / (SF11 in the picture, with 10s interval).</li> </ul> <p></p> <p>Note</p> <p>OpenTX has no value for 50mW in the CRSF Telemetry protocol and instead will be read as 0mW. EdgeTX versions 2.5.0 and newer have the proper 50mW readout.</p>"},{"location":"software/gemini/","title":"Gemini","text":""},{"location":"software/gemini/#what-is-gemini","title":"What is Gemini?","text":"<p>Gemini is a dual channel 2.4GHz and/or 900MHz (and potentially other low-band frequencies) transmission mode that leverages true diversity hardware to maximize LQ. This page covers single-band Gemini mode, which uses diversity hardware to transmit in multiple channels within the same band (e.g. 2.4GHz or 900MHz). There is also a dual-band mode, Gemini Xrossband or GemX, which is capable of transmitting on both 2.4GHz and 900MHz bands simultaneously. Please see the PR here for more info while the documentation is updated. </p> <p>In Gemini Mode, a TX module simultaneously transmits a packet in two frequencies 40MHz apart for 2.4GHz and ~10MHz apart for 900MHz users.  The packet separation used is half of the frequency domain selected and will vary a little. A true diversity Receiver is used to receive both packets simultaneously. Transmitting on 2 separate frequencies provides better interference avoidance and/or mitigation, in a similar way DVDA does by sending repeat packets sequentially on different frequencies. This means, the Receiver has an increased chance of receiving the packet. This results in a much higher and stable LQ.</p>"},{"location":"software/gemini/#setup","title":"Setup","text":"<p>Via Lua set your TX AND RX Antenna Modes to Gemini.</p> <p>Use Model Config Matching to set the correct antenna mode based on the active Model on the radio. e.g. use Model 5 for single antenna receivers, Model 6 for Gemini-capable receivers.</p>"},{"location":"software/gemini/#introductory-video-and-testing","title":"Introductory Video and Testing","text":""},{"location":"software/gemini/#what-about-using-gemini-with-dvda","title":"What about using Gemini with DVDA?","text":"<p>Gemini doubles the redundancy of DVDA modes.  For example, D500 sends 2 repeat packets on 2 different frequencies. When using D500 with a Gemini TX you will now have 4 packets sent across 4 different frequencies.</p> <p>When using D250 which sends 4 repeat packets across 3 frequencies.  With Gemini you will now have 8 repeat packets across 6 different frequencies.</p>"},{"location":"software/gemini/#what-are-the-benefits","title":"What are the Benefits?","text":""},{"location":"software/gemini/#freestylers","title":"Freestylers","text":"<p>Flying in urban environments with lots of RF noise? Gemini will help to dodge the interference and maintain a strong link.</p>"},{"location":"software/gemini/#racers","title":"Racers","text":"<p>Flying at events with 6 to 8 up racers, plus who knows how many handsets left powered up in the pits, can cause your precious link to take a hit.  Gemini is an obvious choice for these environments when every packet counts.</p>"},{"location":"software/gemini/#lovers-of-telemetry","title":"Lovers of Telemetry","text":"<p>A Gemini TX has the advantage of not only sending simultaneous packets, but also receiving simultaneous packets.  Or when used in single antenna mode (or switch mode) both antennas will listen for the same TLM packet, in the same way a diversity RX listens for RC packets.  So your TLM link becomes stronger with fewer missed packets, even when not used in Gemini mode and with single antenna receivers.</p>"},{"location":"software/gemini/#airport-and-mavlink-users","title":"AirPort and MAVLink users","text":"<p>For data links a single missed packet can mean more than 1 missed packet. If a single packet is missed, this means the rest of the data that was received for that MAVLink packet is now wasted. As the MAVLink packet may have been split across multiple OTA packets and will not be complete. The single missed packet can turn into 10 packets missed. Gemini will help with making sure you get the highest MAVLink packet rate possible!</p>"},{"location":"software/gemini/#will-gemini-increase-my-range","title":"Will Gemini increase my range?","text":"<p>No. The packet sensitivity remains the same for the RF Mode (or Packet Rate) used.  Gemini will help maintain a higher LQ to the point of failsafe.  However failsafe will still happen at approximately the same distance e.g. the moon.</p>"},{"location":"software/gemini/#comparison-with-other-antenna-modes","title":"Comparison with other Antenna Modes","text":""},{"location":"software/gemini/#is-there-antenna-switching-with-gemini-can-antenna-1-of-receiver-talk-with-antenna-2-of-tx-if-they-are-in-the-same-polarization-during-a-flight","title":"Is there antenna switching with Gemini? Can Antenna 1 of Receiver talk with Antenna 2 of TX if they are in the same polarization during a flight?","text":"<p>Yes, there is antenna switching.</p>"},{"location":"software/gemini/#what-happens-if-i-use-a-gemini-tx-in-gemini-mode-with-a-single-antenna-receiver","title":"What happens if I use a Gemini TX, in Gemini Mode, with a single Antenna Receiver?","text":"<p>The Gemini TX will function as designed, in Gemini Mode. The Receiver will only get the signal from the TX it has synchronized with. The other TX, will act as a noise generator. Therefore, you should set the TX in either Switch or Single Antenna (Ant1/Ant2) Mode.</p>"},{"location":"software/gemini/#what-happens-if-i-use-a-gemini-tx-in-gemini-mode-with-gemini-incapable-diversity-receivers","title":"What happens if I use a Gemini TX, in Gemini Mode, with Gemini-incapable Diversity Receivers?","text":"<p>As above, with the Receiver antennas only getting sync from one TX. We recommend setting the TX to non-Gemini Modes.</p>"},{"location":"software/gemini/#how-does-a-gemini-rx-behave-when-paired-with-a-non-gemini-tx","title":"How does a Gemini RX behave when paired with a non-Gemini TX?","text":"<p>The Receiver will still listen on both Antennas, but only get sync on one. Both RX will send out Telemetry, but only one of them will be used.</p>"},{"location":"software/loan-model/","title":"Loan Model","text":"<p>Scenario</p> <p>You are flying with your buddies and your friend has crashed all his models. You'd like to be able to lend him one of yours but you can't because it's using a binding phrase, so he's relegated to being the crashed model fetcher for the rest of the day!</p> <p>No longer is he destined to be running to the bando and back again fetching downed quads. You can use the \"Loan Model\" feature and lend him one of your models!</p> <p>This is deprecated and removed in ExpressLRS 3.4.0 in favor of the new Binding Procedures. See the binding page for details.</p>"},{"location":"software/loan-model/#how-to-loan-model","title":"How to \"Loan Model\"","text":""},{"location":"software/loan-model/#on-the-lenders-handset","title":"On the lenders handset","text":"<ul> <li>Connect to the model you wish to loan out with your handset</li> <li>Enter the LUA screen and select \"Other Devices\" at the bottom of the list</li> </ul> <ul> <li>Choose the RX from the list</li> </ul> <ul> <li>Select the \"Loan Model\" entry</li> </ul> <ul> <li>The receiver LED should go into the bind flashing state</li> </ul>"},{"location":"software/loan-model/#on-the-borrowers-handset","title":"On the borrowers handset","text":"<ul> <li>From the main ExpressLRS LUA screen select <code>[Bind]</code></li> <li>The receiver LED should turn solid on, and the handset should connect to the receiver</li> </ul>"},{"location":"software/loan-model/#returning-a-loaned-model","title":"Returning a \"Loaned\" Model","text":"<p>There are a couple of ways to return a model to the owner. </p> <p>The first method is for the borrower to return it from the LUA script as follows:</p> <ul> <li>On the borrowers handset, connect to the \"loaned\" model</li> <li>Enter the LUA screen and select \"Other Devices\" at the bottom of the list</li> </ul> <p></p> <ul> <li>Choose the RX from the list</li> </ul> <p></p> <ul> <li>Select the \"Return Model\" entry</li> </ul> <p></p> <p>The second method used if the borrower forgets to return the model, is as follows:</p> <ol> <li>Power cycle the model 3 times in rapid succession, turning it off each time after the LED flashes on and off again.</li> <li>If done correctly, the model will return to the state where it is bound to your transmitter.</li> </ol> <p>Note</p> <p>If the LED returns to normal flashing between reboots, the counter is reset to 0 and you must restart the process.</p>"},{"location":"software/loan-model/#bump-to-loan","title":"Bump to Loan","text":"<p>On transmitter modules with an accelerometer (such as the Axis Thor), you can loan and return a model by bumping it to another transmitter. </p> <p>The process is easy - simply hold both the lender and the borrower's transmitters vertically while a model is connected and not armed and bump them together. </p> <p>Note</p> <p>If the borrower does not have an accelerometer, the borrower must go into binding mode manually.</p>"},{"location":"software/mavlink/","title":"MAVLink","text":"<p>Warning</p> <p>Although MAVLink has been in development for some time, and has been tested by a community of early adopters using ArduPilot crafts, MAVLink support is still a recent addition. There may be unexpected bugs; Exercise due caution.</p> <p>NOTE</p> <p>Enabling MAVLink forces the use of Hybrid or 16ch/2 switch mode. Wide switch mode is not supported. Enabling MAVLink forces a telemetry ratio of 1:2</p>"},{"location":"software/mavlink/#description","title":"Description","text":"<p>ExpressLRS now has full bi-directional MAVLink support, enabling native MAVLink telemetry downlink and RC control uplink. Users can now enjoy seamless integration of telemetry and RC control.</p> <p></p>"},{"location":"software/mavlink/#hardware-requirements","title":"Hardware Requirements","text":"<p>Unlike airport, you do NOT need a second RX/TX pair for RC control, since ELRS' implementation allows you to do BOTH telemetry and RC control over one link. </p> <p>To start using MAVLink, you just need one ESP ELRS transmitter, and one ESP ELRS receiver. The majority of recent ELRS hardware is ESP based, and will be compatible with MAVLink. An easy way to check is, if the RX/TX have WiFi, then it is ESP based.</p> <p>NOTE</p> <p>If you are using an internal TX module (e.g. a TX16S with internal ELRS), you will be required to use the TX Backpack to connect to you GCS via WiFi (USB cable between the TX and the PC is not an option for internal modules). See WiFi Connectivity below.</p> <p>NOTE</p> <p>If you are planning to use 915/868MHz, note that the data rate will be significantly slower than on 2.4GHz. This will result in especially slow parameter downloading, and with 200Hz packet rate at 915MHz, it takes  2+ minutes to pull parameters.</p>"},{"location":"software/mavlink/#flashing-and-configuring-mavlink-rc","title":"Flashing and Configuring MAVLink-RC","text":"<p>Ensure both your transmitter module, the embedded TX-Backpack (if using WiFi forwarding), and your receiver are up to date with the latest release versions:</p> <ul> <li>For the main ELRS firmware, follow the Firmware Update Guide for detailed instructions.</li> <li>For the TX-Backpack, follow the Transmitter Backpack Firmware Guide for detailed instructions.</li> </ul> <p>The minimum versions to use this feature are: - Transmitter / receiver firmware: <code>3.5.0</code> - TX Backpack firmware: <code>1.5.0</code></p> <ol> <li> <p>Using the guides above, flash both the RX and TX</p> </li> <li> <p>Turn on both the RX and TX, and ensure they connect properly</p> </li> <li> <p>In ELRS LUA script, select <code>Other Devices</code>, select your receiver, and set the <code>serial protocol</code> to <code>MAVLink</code>. This configures the RX to output MAVLink protocol on the UART.</p> </li> <li> <p>Back out to the LUA scripts main menu, and select the new <code>Link Mode</code> option. Change it from <code>Normal</code> to <code>MAVLink</code>. This configures the TX module to send / receive MAVLink.</p> </li> <li> <p>Configure your usual power, packet rate, etc. The telemetry ratio will be preset to 1:2 (and cannot be changed while in MAVLink mode).</p> </li> <li> <p>(Optional) Configure Source and Target SysIDs</p> <ol> <li> <p>Power-cycle the receiver</p> </li> <li> <p>Go to <code>Other Devices</code> and select your receiver</p> </li> <li> <p>Set <code>Target SysID</code> to the vehicle SysID</p> </li> <li> <p>Set <code>Source SysID</code> to preferred GCS SysID</p> </li> </ol> </li> <li> <p>Wire the RX to a free UART on your flight controller that is suitable for TLM + RC. A DMA-capable UART is recommended.</p> </li> </ol> ArduPilotPX4INAVBetaflight <p>For the below steps, when a UART connection is mentioned, it will be written as <code>SERIALx</code>. Replace <code>x</code> with the UART number you are using.</p> <ol> <li>Configure <code>SERIALx_PROTOCOL=2</code>, <code>SERIALx_BAUD=460</code>, and <code>RSSI_TYPE=5</code></li> <li>Connect the TX module to the computer running the Ground Control Station via a USB cable (or alternatively via WiFi - See WiFi Connectivity below)</li> <li>Select the COM port on the GCS, and connect using <code>460800</code> baud</li> </ol> <p>For the below steps, when a UART connection is mentioned, it will be written as <code>SER_TELx</code>. Replace <code>x</code> with the UART number you are using.</p> <ol> <li>Configure SER_TELx_BAUD to <code>460800 8N1</code></li> <li>Configure MAVLink with MAV_0_CONFIG to <code>TELEM2</code></li> <li>Configure MAVLink sending rate with MAV_0_RATE to <code>9600 B/s</code></li> </ol> <p>Released versions of INAV (from version 8 onwards) can use MAVLink for flight monitoring. However, given that INAV is primarily an MSP flight controller, full functionality and configuration via MAVLink should not be expected.</p> <p>For the below steps, when a UART connection is mentioned, it will be written as <code>UARTx</code>. Replace <code>x</code> with the UART number you are using.</p> <ol> <li>In the Ports tab, set the UARTx <code>Telemetry Protocol</code> to <code>MAVLink</code>, and the baud rate to <code>460800</code>. Make sure <code>RX Serial</code> is disabled.</li> <li>In the Receiver tab, set the Receiver type to <code>SERIAL</code> and the <code>Serial Receiver Provider</code> to <code>MAVLink</code>. Leave inverted &amp; half-duplex <code>disabled</code>.</li> <li>In the CLI, enter <code>set mavlink_radio_type=ELRS</code> to get the correct RSSI and LQ values on INAV's OSD.</li> </ol> <p>Betaflight contains an incomplete implementation of the MAVLink protocol standard (lacking RADIO_STATUS flow control). This causes an Betaflight aircraft to saturate the bandwidth of a telemetry link using soft flow control, and renders it unusable, ergo breaking support with ExpressLRS MAVLink.</p>"},{"location":"software/mavlink/#wifi-connectivity","title":"WiFi Connectivity","text":"<p>For TX modules that have an onboard Backpack, the MAVLink data can be sent / received via WiFi to a PC or tablet etc. that is running the GCS software. This provides for a cable-free solution on your handset, as it removes the need for a USB cable between the TX and the GCS device.</p> <p>To setup WiFi forwarding for MAVLink:</p> <ol> <li> <p>Ensure the TX Backpack is running version <code>1.5.0</code> or later</p> </li> <li> <p>In the ELRS LUA script, select <code>Backpack</code>, scroll to the <code>Telemetry</code> option, and change the value to <code>WiFi</code></p> </li> <li> <p>If you are NOT using Home WiFi on the Backpack, a new WiFi access point will be available to connect to. Use your PC or tablet etc. to search for and connect to a WiFi network with SSID of <code>ExpressLRS TX Backpack xxx</code> (where <code>xxx</code> will be part of your UID). The WiFi password is <code>expresslrs</code>. Alternatively, if you ARE using Home WiFi on the Backpack, the Backpack will automatically start WiFi and connect to your router.</p> </li> <li> <p>Power on the craft, so that the TX and RX have an active link.</p> </li> <li> <p>On your PC or other GCS device, open your GCS software (e.g. Mission Planner) and set the connection type to <code>UDP</code>. Click connect, and use the default UDP port of <code>14550</code>. The GCS should successfully connect to the craft and start downloading params.</p> </li> </ol> <p>Attention!</p> <p>DO NOT manually put the TX Backpack into WiFi mode via <code>WiFi Connectivity -&gt; Enable Backpack WiFi</code>. It's not in the steps above for a reason.  When you set <code>Telemetry</code> into <code>WiFi</code> mode, the backpack automatically starts its WiFi mode, and so, there's no need to manually kick it into WiFi mode.</p>"},{"location":"software/mavlink/#implementation-details","title":"Implementation Details","text":""},{"location":"software/mavlink/#rc-interleaving","title":"RC Interleaving","text":"<p>When set to MAVLink mode, ELRS changes the allocation of uplink and downlink frame as follows:</p> <ul> <li>Uplink frames from TX to RX continue to include stick/switch data in the standard ELRS format</li> <li> <p>Uplink frames are opportunistically replaced with MAVLink data from your GCS to your aircraft, which is limited to a maximum of 50% of the link's upstream bandwidth. In general, MAVLink from GCS to the aircraft consumes very little bandwidth, due to it being mainly GCS heartbeats.</p> </li> <li> <p>Downlink telemetry frames from RX to TX are completely replaced by MAVLink data</p> </li> <li>Your TX converts the MAVLink telemetry into standard CRSF format which is understood by EdgeTX</li> </ul>"},{"location":"software/mavlink/#stubborn-sender","title":"Stubborn Sender","text":"<p>ELRS uses its stubborn telemetry sender system for MAVLink messages - this system retries packets which weren't delivered, keeping MAVLink link quality high over longer distances and/or with interference.</p>"},{"location":"software/mfd-crossbow/","title":"MFD Crossbow Tracker Integration","text":""},{"location":"software/mfd-crossbow/#introduction","title":"Introduction","text":"<p>ExpressLRS provides an integration with the MFD Crossbow and mini Crossbow antenna trackers, which wirelessly forwards the telemetry from an ELRS TX module to the Crossbow in order to track the craft.</p> <p></p>"},{"location":"software/mfd-crossbow/#how-does-it-work","title":"How does it work?","text":"<p>In order to forward the telemetry data (that the TX is receiving from the craft) over to the MFD Crossbow, we have leveraged the \"Backpack\" functionality that is built-in to many ELRS transmitter modules. The Backpack allows an ELRS TX module to communicate with nearby devices using ESP-NOW, which is a peer to peer WiFi-based protocol.</p> <p>By flashing the <code>MFD Crossbow Antenna Tracker Backpack</code> firmware to a receiver, it will now listen for ESP-NOW telemetry packets, and forward them as MAVLink (via UART) to the Crossbow.</p> <p>When the main ELRS firmware receives the telemetry from the craft, it sends it to the onboard TX-Backpack device, which then broadcasts it via ESP-NOW to any Backpack receivers that are flashed with your bind phrase. The receiver on the Crossbow receives these packets, and is able to track the craft.</p>"},{"location":"software/mfd-crossbow/#what-do-i-need","title":"What do I need?","text":"<ul> <li>An ELRS transmitter module with internal TX-Backpack.</li> <li>A Backpack-capable receiver - this can be an ESP-based ExpressLRS receiver, or for better WiFi performance, you can also use an ESP32 dev board, etc.</li> <li>An MFD Crossbow (mini or full size) tracker</li> <li>ELRS LUA script installed on your handset</li> <li>A GPS-equipped craft with an ELRS receiver</li> </ul>"},{"location":"software/mfd-crossbow/#what-will-i-need-to-do-to-set-this-up","title":"What will I need to do to set this up?","text":"<p>To work through this guide, you will need to:</p> <ul> <li>Update the firmware on your TX and TX-Backpack (depending on your current version)</li> <li>Flash an ELRS receiver, or an ESP-based dev board as a Backpack receiver</li> <li>Wire the receiver to the Crossbow</li> <li>Setup the Crossbow for MAVLink protocol</li> <li>Setup ELRS via LUA for telemetry forwarding on the Backpack</li> </ul>"},{"location":"software/mfd-crossbow/#step-1-flash-firmware","title":"Step 1: Flash Firmware","text":""},{"location":"software/mfd-crossbow/#transmitter-firmware","title":"Transmitter Firmware","text":"<p>Ensure both your transmitter module, and the embedded Backpack are up to date with the latest release versions:</p> <ul> <li>For the main ELRS firmware, follow the Firmware Update Guide for detailed instructions.</li> <li>For the TX-Backpack, follow the Transmitter Backpack Firmware Guide for detailed instructions.</li> </ul> <p>The minimum versions to use this feature are:</p> <ul> <li>Main TX firmware: <code>3.5.0</code></li> <li>TX Backpack firmware: <code>1.5.0</code></li> </ul>"},{"location":"software/mfd-crossbow/#select-a-backpack-receiver","title":"Select a Backpack Receiver","text":"<p>Select a Backpack receiver to use on the Crossbow. Most ExpressLRS receivers will work for this (STM32 receiver cannot be used as they don't have WiFi).</p> <p>When selecting a receiver for this integration, the quality of the WiFi antenna (not to be confused with the ELRS antenna) on the receiver is important if you want decent range (more than 5 meters). Some ELRS receivers have a chip antenna for the onboard WiFi, which helps.</p> <p>The best receiver for WiFi range is an ESP32 dev board:</p> <p></p> ESP32 Dev Board <p>These can be found on Amazon for cheap, and have much better WiFi range than a standard ELRS receiver.</p> <p>Once you have chosen a receiver to use, you need to determine the MCU type that it uses:</p> <ul> <li>ESP8285 / ESP8266</li> <li>ESP32</li> <li>ESP32C3</li> <li>ESP32S3</li> </ul> <p>If you are using an ELRS receiver, you can look this up (for supported hardware) in the targets.json file. Click the targets.json link, and then search for your receiver (e.g. <code>RadioMaster RP1</code>) and note the <code>platform</code> that it uses:</p> <p></p> Platform for the RadioMaster RP1 <p>If you are using an ESP32 dev board, check the listing to see if it's an <code>ESP32</code>, an <code>ESP32C3</code> or an <code>ESP32S3</code>.</p>"},{"location":"software/mfd-crossbow/#flash-the-backpack-receiver","title":"Flash the Backpack Receiver","text":"<ul> <li>Open the ExpressLRS Configurator and select <code>Backpack</code> in the left hand menu bar.</li> <li>Select the <code>1.5.0</code> or newer Backpack Release version from the <code>Releases</code> dropdown.</li> <li>Select <code>MFD Crossbow Antenna Tracker Backpack</code> under <code>Device category</code></li> <li>Select <code>Generic ESPxxxx Receiver</code> (where \"ESPxxxx\" is the platform for your receiver type) in the <code>Device</code> dropdown</li> <li>Enter your Binding Phrase and your Home WiFi SSID and Password (Optional).</li> <li>Choose your <code>Flashing Method</code> based on your hardware (choose from the options below):</li> </ul>"},{"location":"software/mfd-crossbow/#flashing-via-usbuart","title":"Flashing via USB/UART","text":"<p>Use this method if you have an FTDI (USB to serial converter), or if you are using an ESP32 dev board connected to the PC via a USB cable.</p> <ul> <li>Ensure you have the drivers installed for your FTDI, and the device shows up as a COM port in Device Manager when plugged in.</li> <li>Connect the receiver to the FTDI:</li> </ul> <p></p> FTDI to receiver wiring <ul> <li>Hold down the BOOT button on the receiver / dev board, or temporarily bridge the BOOT pads if the receive uses pads instead (e.g. with tweezers) as you plug the USB / FTDI into the PC.</li> <li>In the Configurator, select the <code>UART</code> option under <code>Flashing Method</code>.</li> <li>Ensure you have completed the steps in the \"Flash the Backpack Receiver\" section above, then click <code>Flash</code> on the ExpressLRS Configurator.</li> <li>Wait for the process to complete and you should see the green <code>Success</code> notification.</li> </ul>"},{"location":"software/mfd-crossbow/#flashing-via-wifi","title":"Flashing via WiFi","text":"<p>If you are flashing an ExpressLRS receiver, you may chose to use WiFi to flash the Backpack firmware.</p> <ul> <li>Power on the receiver (with no transmitter active), and wait for it to enter WiFi mode (fast flashing LED).</li> <li>If you are NOT using Home WiFi, connect to the <code>ExpressLRS RX</code> WiFi access point (password is <code>expresslrs</code>) and navigate your browser to http://10.0.0.1/?force=true NOTE THE EXTRA ?force=true ON THE url</li> <li>If you ARE using Home WiFi, navigate your browser to http://elrs_rx.local/?force=true NOTE THE EXTRA ?force=true ON THE url</li> <li>In the Configurator, select the <code>WIFI</code> option under <code>Flashing Method</code>.</li> <li>Ensure you have completed the steps in the \"Flash the Backpack Receiver\" section above, then click <code>Build</code> on the ExpressLRS Configurator.</li> <li>Grab the built <code>firmware.bin.gz</code> (do NOT extract it) and drag-and-drop it into the File Upload section of the webpage. If you are using an ESP32 based device, the filename may be <code>firmware.bin</code>. Drag-and-drop it into the File Upload section of the webpage.</li> <li>Click <code>Update</code>. Wait a bit (~10s) for the \"Update Success! Rebooting...\". The AP should automatically disappear and disconnect.</li> </ul> <p></p> WiFi ESP"},{"location":"software/mfd-crossbow/#step-2-wire-the-receiver-to-the-crossbow","title":"Step 2: Wire the receiver to the Crossbow","text":"<p>The receiver communicates via UART with the Crossbow, using the MAVLink protocol at 115200 baud. We need to wire the <code>tx</code> pad on the receiver to one of the <code>rx</code> pins on the Crossbow:</p> <p></p> Crossbow Wiring Diagram <p>The Crossbow mini can communicate via MAVLink on <code>RX3</code> or <code>RX1</code>, depending on which port you want to use:</p> <p></p> Crossbow Ports <p>If you use the L-Port on the mini, you also get a +5V and GND source for the receiver:</p> <p></p> Example Crossbow RX Wiring"},{"location":"software/mfd-crossbow/#step-3-configure-the-crossbow-for-mavlink","title":"Step 3: Configure the Crossbow for MAVLink","text":"<p>Refer to the respective user manual for your model of Crossbow in order to change the UART to MAVLink protocol, at a baud rate of 115200.</p> <p>For example, on the Crossbow mini, assuming you are using the L-Port:</p> <ul> <li>Long press the left button to enter the menu</li> <li>Short press the left button until you get to <code>L-Baudrate</code> and short press the right button to enter</li> <li>Short press the left button until <code>115200</code> is highlighted, and short press the right button to confirm</li> <li>Short press the left button until <code>Exit</code> is highlighted, and short press the right button to exit</li> <li>Short press the left button until you get to <code>Protocol</code> and short press the right button to enter</li> <li>Short press the left button until <code>L:&lt;protocol&gt;</code> is highlighted, and short press the right button until it reads <code>L:MAVLink</code></li> <li>Short press the left button until <code>Exit</code> is highlighted, and short press the right button to exit. Do the same again to exit the main menu.</li> </ul>"},{"location":"software/mfd-crossbow/#step-4-enable-backpack-telemetry-in-elrs-lua-script","title":"Step 4: Enable Backpack Telemetry in ELRS LUA Script","text":"<ol> <li> <p>Access the LUA Script:</p> <ul> <li>Power on your transmitter and navigate to the System menu.</li> <li>Execute the ELRS LUA script.</li> </ul> </li> <li> <p>Navigate to the Backpack Section:</p> <ul> <li>Scroll to find the \"Backpack\" section within the LUA script.</li> <li>Select the \"Telemetry\" option.</li> </ul> </li> <li> <p>Enable Backpack Telemetry:</p> <ul> <li>Set the \"Telemetry\" option to <code>ESPNOW</code>.</li> <li>Exit the script.</li> <li>Your TX module is now configured to broadcast telemetry to the Backpack receiver.</li> </ul> <p>NOTE: Backpack telemetry is transmitted on the 2.4G WiFi band, via ESPNOW (this should have a very limited impact on any LoRa signals, as it is modulated via OFDM like a normal WiFi hotspot). Every telemetry message that your transmitter receives from the craft will be re-transmitted via ESPNOW. You may want to disable Backpack Telemetry to reduce your footprint on the RF noise floor when you aren't using it, especially if you are at something like a race day, where there is often contention on the RF spectrum. Disabling Backpack Telemetry will cause the Crossbow integration to stop working.</p> <p>To disable Backpack Telemetry (only do this if you are NOT using the Crossbow integration):</p> <ul> <li>Execute the ELRS LUA script.</li> <li>Scroll to find the <code>Backpack</code> section within the LUA script.</li> <li>Select the \"Telemetry\" option.</li> <li>Set the \"Telemetry\" option to <code>Off</code>.</li> <li>Exit the script.</li> </ul> </li> </ol>"},{"location":"software/mfd-crossbow/#step-5-set-the-telemetry-ratio","title":"Step 5: Set the Telemetry Ratio","text":"<p>The Crossbow requires frequent GPS coordinate updates in order to track the craft, and to maintain the link.</p> <p>The recommendation is to use a telemetry ratio of:</p> <ul> <li><code>1:2</code> or <code>1:4</code> if you are using a low packet rate such as 50Hz or 100Hz</li> <li><code>1:2</code> to <code>1:8</code> if you are using a higher packet rate such as 250Hz or above</li> </ul> <p>To change the telemetry ratio:</p> <ul> <li>Execute the ELRS LUA script.</li> <li>Scroll to find the <code>Telem Ratio</code> option.</li> <li>Select the ratio as above.</li> <li>Exit the script.</li> </ul>"},{"location":"software/mfd-crossbow/#confirming-operation","title":"Confirming Operation","text":"<p>Once configured, power up your GPS-equipped craft and establish the link between your ELRS Transmitter and Receiver. Ensure that GPS telemetry is being received on your handset (go to the <code>Model</code> menu in EdgeTX, and inspect the Telemetry page to make sure you are getting GPS coordinates).</p> <p>The Crossbow status screen should now be showing <code>DLink:100%</code> and <code>GPS:</code> should reflect the number of sats acquired. Once <code>GPS:</code> is greater than 6, press the right button to set home, as per the user manual.</p>"},{"location":"software/mfd-crossbow/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues:</p> <ul> <li> <p>No Telemetry Data / DLink:0%: Ensure the \"Telemetry\" option is set to <code>ESPNOW</code> in the Backpack section of the LUA script and that the firmware is up to date. Also check that your Telemetry Ratio is set to a value that is able to provide frequent telemetry packets. As a rule of thumb, a ratio somewhere between 1:2 to about 1:16 (depending on your packet rate) will suffice. As a troubleshooting step, try 1:2 to guarantee that the tracker is getting regular updates. For more info, see Packet Rate and Telemetry Ratio and Telemetry</p> </li> <li> <p>Binding Issues: Verify that the bind phrase is correctly set and matches between the Backpack on your transmitter and the Backpack receiver. This should also match the bind phrase that you use for regular ELRS receivers.</p> </li> <li> <p>Interference / Poor Range: The Backpack Telemetry feature uses a point to point WiFi-based link to forward telemetry. The Backpack receiver should be within 10m of the ELRS transmitter (ideally 5m or less if using an ELRS receiver) for good WiFi signal. Some ELRS transmitters and receivers have better Backpack WiFi antennas than others, so your mileage may vary depending on your hardware. If you are experiencing drops in the link between ELRS and the tracker, try moving the two closer, or consider using an ESP32 dev board as the receiver.</p> </li> </ul>"},{"location":"software/model-config-match/","title":"Model Matching","text":""},{"location":"software/model-config-match/#model-configuration","title":"Model Configuration","text":"<p>ExpressLRS stores separate configurations for each CRSF Receiver number configured in OpenTX/EdgeTX. This can be used with or without model matching - for example, a single drone being used for long-range and freestyle can have its RF params switched quickly by changing the model on the radio. The value is shown highlighted below on a TX16s.</p> <p></p> <p>The parameters stored per-Receiver number are:</p> Setting Description Packet Rate The RC update frequency (500Hz, 250Hz, etc) Telem Ratio Telemetry ratio (Off, 1:128, 1:64, etc) Switch Mode Method for sending switches to the receiver Model Match Enable the model match feature (see below) Max Power Transmitter output power level Dynamic Power Enable Dynamic Power switching <p>All other configuration parameters are global across all Receiver numbers. Note: not \"per receiver\" but \"per Receiver number\". For details about the configurable parameters, see Lua Configuration.</p>"},{"location":"software/model-config-match/#model-match","title":"Model Match","text":"<p>ExpressLRS uses a binding phrase, which means the transmitter will connect to any receiver built with that binding phrase. Model Match is a feature which prevents a full connection if the Model Match number does not match. In this mode, the receiver will connect to the handset, but no data will be sent from the receiver to the flight controller. This allows a user to force that the model selected in OpenTX only connects to a specific receiver, for example preventing using a quad OpenTX model definition with a fixed wing model.</p> <p>The terms Receiver number (set in OpenTX/EdgeTX) and Model Match number (set in the receiver) are used interchangeably here-- they are the same.</p> <p>If the <code>Model Match</code> option is Off, then only receivers with no Model Match number (255) can be connected. If the <code>Model Match</code> option is On, then the Receiver number configured in the external module configuration (as shown in the image above) must match the Model Match number stored on the receiver module for the receiver and transmitter to fully connect.</p> <p>The implementation follows this set of rules for handling half connections / full connections</p> TX ModelMatch TX Receiver ID RX Model ID Result Off Any Off Connects / Communicates as usual Off Any A Connects but does not communicate to FC On Any Off Connects but does not communicate to FC On A A Connects / Communicates as usual On B A Connects but does not communicate to FC"},{"location":"software/model-config-match/#setting-model-match-number","title":"Setting Model Match number","text":"<ul> <li>Set the Receiver number to be used in the OpenTX Model Setup -&gt; External Module -&gt; Receiver</li> <li>Be sure the receiver to be assigned is connected and has a high LQ</li> <li>Use the ExpressLRS Lua to set the Model Match option to \"On\"</li> <li>The receiver now has its Model Match number set to match the Receiver number and will only fully connect when using this Receiver number.</li> </ul> <p>Alternatively</p> <ul> <li>For WiFi-enabled RX modules, use the WebUI to set the Model Match directly. \"Model Match\" must still be set to \"On\" in the Lua config.</li> </ul> <p></p>"},{"location":"software/model-config-match/#clearing-model-match-number","title":"Clearing Model Match number","text":"<ul> <li>Be sure the receiver to be assigned is connected and has a high LQ</li> <li>Use the ExpressLRS Lua to set the Model Match option to \"Off\"</li> <li>The receiver now has its Model Match number cleared and will connect with any configuration profile which has Model Match set to \"Off\"</li> </ul> <p>Alternatively</p> <ul> <li>For WiFi-enabled RX modules, use the WebUI to set the Model Match to 255 to disable matching. \"Model Match\" must still be set to \"Off\" in the Lua config.</li> </ul>"},{"location":"software/obsolete-defines/","title":"Obsolete Defines","text":"<p>Note</p> <p>This page contains old user_defines.txt that have been removed or superseded by new defines.</p> <p>New items should be added to the top of the list so the last entry here is the oldest. The order of each entry should be <code>[code]definename[/code]</code> followed by the original text of the documentation, ending with a separate paragraph \"REMOVED [version] [replacement or reason for removal]\".</p>"},{"location":"software/obsolete-defines/#obsolete-defines","title":"Obsolete Defines","text":"<p><pre><code>USE_DIVERSITY\n</code></pre> Enable antenna-switching diversity for RX that supports it. Safe to leave it on for hardware that doesn't have diversity except for DIY builds which did not populate the RF switch.</p> <p>REMOVED 3.0. Diversity is now a receiver option, changed via Lua for devices that support it in hardware.</p> <p><pre><code>DYNPOWER_THRESH_UP=15\nDYNPOWER_THRESH_DN=21\n</code></pre> Change the RSSI thresholds used by the Dynamic Power algorithm. If the RSSI moving average is below <code>DYNPOWER_THRESH_UP</code> dBm from the sensitivity limit, the algorithm will increase the power output by one step. Similarly, if the RSSI is above <code>DYNPOWER_THRESH_DN</code> from the sensitivity limit, the power will be decreased by one step.</p> <p>REMOVED 3.0. The dynamic power algorithm uses SNR which is defined per-rate so the thresholds are more complicated than 2 defines.</p> <p><pre><code>NO_SYNC_ON_ARM\n</code></pre> no sync on arm doesn't transmit sync packets while armed. This is useful for racing as there is less time &amp; packets wasted \ud83d\uddd1\ufe0f on sending sync packets (one packet every 5 seconds if connected). HOWEVER if you are doing serious long range \u26f0\ufe0f, keep this disabled because, in the case of a sustained failsafe, the link can not be regained while armed.</p> <p>AUX1 is the channel ExpressLRS uses to detect \"ARMED\", and this feature assumes that a low value of the arm switch is disarmed, and a high value is armed. OpenTX can invert your switch if you prefer it to be mechanically inverted. It is best not to enable no sync on the arm when you are first setting up ExpressLRS as it can be a source of confusion.</p> <p>REMOVED 3.0. Replaced with \"Race\" telemetry mode, which also disables sending SYNC on arm.</p> <pre><code>FEATURE_OPENTX_SYNC\nFEATURE_OPENTX_SYNC_AUTOTUNE\n</code></pre> <p>These features enable lower latency \ud83c\udfc3\u200d\u2642\ufe0f and offset from the OpenTX radio to the TX. The first is lower latency which should be kept enabled. The second is more experimental and can lower the offset from the radio by tuning it as close as possible to <code>0</code>, but is experimental (even in 1.0) and is best left disabled.</p> <p>Both require OpenTX <code>2.3.12</code> or above. To install it, you will have to use OpenTX companion application.</p> <p>Deviation radio users such as those with the T8SG v2/v3 should disable this feature.</p> <p>You can also use EdgeTX.</p> <p>REMOVED After 2.2.0. Sync packets were always sent regardless of if this was enabled, but the sync offset would just be wrong if it wasn't defined.</p> <p><pre><code>USE_ESP8266_BACKPACK\n</code></pre> This enables communication with the ESP Backpack for over-the-air updates (<code>env:FrSky_TX_R9M_via_WiFi</code>) \ud83d\udda5\ufe0f and debugging via WebSocket \ud83d\udd0d. Uncommented by default, does not need to be changed.</p> <p>REMOVED 2.0 development. Replaced with USE_TX_BACKPACK.</p> <p><pre><code>#-DHYBRID_SWITCHES_8\n</code></pre> Changes how the AUX channels are sent over the air. The default option is Normal Mode with 8x 2-position low-latency switches. Enabling <code>HYBRID_SWITCHES_8</code> changes this to 1x 2-pos + 6x 7-pos + 1x 16-pos, with only the 2-position being low-latency. In Normal Mode, all switches are sent with every packet, in Hybrid Mode, only AUX1 is sent with every packet and the rest are rotated through. Note: The switch mode MUST match between the RX and TX. A detailed explanation of the differences between the two options can be found in Switch Modes, but   1. If only two position switches are needed, and they must be updated as fast as possible: Normal Mode   2. Almost everyone: Hybrid Mode (Put ARM on AUX1)</p> <p>REMOVED 2.0 development, all switch modes are available via Lua configuration. HYBRID_SWITCHES_8 is always enabled / available.</p> <p><pre><code>#-DENABLE_TELEMETRY\n</code></pre> Enable advanced telemetry support. This option must be enabled on both TX and RX. The following telemetry messages are supported:</p> <ul> <li>GPS</li> <li>BATTERY_SENSOR</li> <li>ATTITUDE</li> <li>DEVICE_INFO</li> <li>FLIGHT_MODE</li> <li>MSP_RESP</li> </ul> <p>Note</p> <p>Increase the telemetry rate with the ExpressLRS Lua script. Increase the rate until the sensor lost warnings go away. It is normal to set it up to 1:16 with 200 Hz refresh rate.</p> <p>Note</p> <p>It must be enabled together with HYBRID_SWITCHES_8.</p> <p>REMOVED 2.0 development, ENABLE_TELEMETRY is always enabled. Advanced Telemetry will only be sent if telemetry messages are received from the FC.</p> <p><pre><code>-DUSE_500HZ\n</code></pre> This enables 500Hz mode for 2.4 GHz RXes and TXes. The drawback is that you have to give up 25Hz mode to add 500Hz mode. It requires OpenTX 2.3.12 or Newer, EdgeTX or a Radio firmware that has CRSFShot or Mixer Sync. </p> <p>REMOVED 1.0.0-RC9, this option is now always enabled and in turn, 25Hz has been dropped/removed.</p> <p><pre><code>-DUSE_UART2\n</code></pre> This enables integration with Jye's FENIX rx5805 pro-diversity module</p> <p>REMOVED Somewhere in the 1.0.0-RC cycle. Feature removed.</p> <p><pre><code>-DFAST_SYNC\n</code></pre> An option that adds faster initial syncing, by changing how long the receiver waits for a connection in each mode while not connected. This option is now the default, but disabling it can help to sync at lower packet rates (50Hz and below).</p> <p>REMOVED 1.0.0-RC2 initial sync replaced with a full FHSS period wait</p> <p><pre><code>#-DR9M_UNLOCK_HIGHER_POWER \n</code></pre> REMOVED 1.0.0-RC1 replaced with generic <code>-DUNLOCK_HIGHER_POWER</code></p> <p><pre><code>#-DARM_CHANNEL=AUX1\n</code></pre> If you are using a different channel than the default you need to edit \ud83d\udd25 (or you may not be able to gain sync safely - the default is listed in <code>#DARM_CHANNEL</code> as AUX1 which is Channel 5).</p> <p>NB This feature assumes that a low value of the arm switch is disarmed, and a high value is armed. If you have the arm switch reversed it will not work correctly and the link won't be established. For this reason, it may be best not to enable no sync on the arm when you are first setting up ExpressLRS as it can be a source of confusion.</p> <p>REMOVED 1.0.0-RC1 AUX1 is always the arm switch now, no longer configurable</p> <p><pre><code>#-DLOCK_ON_50HZ\n</code></pre> <code>LOCK_ON_50HZ</code> locks the RX at <code>50Hz</code> mode from the power-up. (Only recommended for long range, and partly redundant with the previous feature.) Merged in Pull 143</p> <p>REMOVED 1.0.0-RC1 not sure why this was removed</p> <p><pre><code>-DAUTO_WIFI_ON_BOOT\n</code></pre> REMOVED 1.0.0-RC1 replaced with <code>-DAUTO_WIFI_ON_INTERVAL=X</code></p>"},{"location":"software/open-ocd/","title":"OpenOCD for STLink","text":""},{"location":"software/open-ocd/#overview","title":"Overview","text":"<p>If you are using Linux then you can't use the ST-LINK utility from st.com. But fortunately, you can achieve the same effect with openocd on the Linux command line. This tutorial assumes you have an STLink v2.</p> <ol> <li>Install openocd from your distro's repository. For Debian/Ubuntu use: <code>sudo apt-get install openocd</code></li> <li> <p>Issue the full command:</p> <p>a. For R9mm/Mini <code>openocd -f interface/stlink-v2.cfg -f target/stm32f1x.cfg -c 'init; reset halt; stm32f1x unlock 0; reset run; shutdown'</code></p> <p>b. For Ghost Atto/Zepto <code>openocd -f interface/stlink-v2.cfg -f target/stm32f3x.cfg -c 'init; reset halt; stm32f3x unlock 0; flash protect 0 0 last off; reset halt; exit'</code></p> </li> <li> <p>Restart your device so the disabled readout protection can take effect.</p> </li> <li>Now you can proceed with flashing your receiver. This may work on other devices or it might not.</li> </ol>"},{"location":"software/serial-protocols/","title":"Receiver Serial Protocols","text":""},{"location":"software/serial-protocols/#description","title":"Description","text":"<p>ExpressLRS receivers can communicate using a variety of serial protocols:</p> <ul> <li>CRSF (Crossfire) + Inverted</li> <li>SBUS + Inverted</li> <li>SUMD</li> <li>DJI RS2 Pro (Modified SBUS with pre-configured limits)</li> <li>HoTT Telemetry</li> <li>Tramp</li> <li>SmartAudio</li> </ul>"},{"location":"software/serial-protocols/#receiver-protocol-selection","title":"Receiver Protocol Selection","text":"<p>Note</p> <p>For R9MM and R9-Mini receivers <code>SBUS</code>, <code>DJI RS2 Pro</code> and <code>CRSF Inverted</code> protocols will be output on the SBUS (A2) pad. This is a hardware limitation of these receivers, as they do not have software controllable inverters.</p> <p>On a serial based receiver or a PWM receiver with output pins configured for serial communication (as shown below), the protocol used for serial communication can be selected from the receiver WebUI in the <code>Serial Protocol</code> section.</p> <p></p> <p>Alternately, in the Lua script, enter <code>&gt; Other Devices</code> and change the value of the <code>Protocol</code> field.</p> <p></p>"},{"location":"software/serial-protocols/#pwm-receiver-serial-pin-selection","title":"PWM Receiver Serial Pin Selection","text":"<p>A PWM receiver may also be configured to communicate via serial on two of its pins. The exact pins will vary depending on the receiver. This can be configured in either the receiver WebUI or in the receiver Lua script.</p> <p>Note</p> <p>Not all pins support serial communication. Only the pins that support serial will have the option in the <code>Mode</code> dropdown in the WebUI or the <code>Output Mode</code> field in the Lua script.</p>"},{"location":"software/serial-protocols/#webui","title":"WebUI","text":"<p>Start the WebUI on the receiver and go to the <code>Model</code> tab. From there you will be able to select <code>Serial TX</code> or <code>Serial RX</code> on an output pin that supports serial communication.</p> <p></p> <p>Once you've configured the output pins to allow Serial communications you will be presented with a new section, <code>Serial Protocol</code>, underneath the <code>PWM Output</code> section. In this section you can choose the serial protocol you wish to use.</p>"},{"location":"software/serial-protocols/#lua-script","title":"Lua Script","text":"<p>When connected to the receiver with the transmitter, enter the ExpressLRS Lua script and select <code>&gt; Other Devices</code> then select <code>&gt; Output Mapping</code>. In that screen select the output channel/pin that supports serial (either Serial TX or RX) and set that as the output mode. Setting one automatically enables the other matching pin for serial communications.</p> <p></p>"},{"location":"software/serial-protocols/#second-serial-interface-on-esp32-non-pwm-and-pwm-receivers","title":"Second Serial Interface on ESP32 non-PWM and PWM receivers","text":"<p>Starting with firmware version 3.5 an additional serial interface (Serial2) can be assigned on any featured PWM Output or exposed pins of some non-PWM receivers to run any of the available serial protocols. Both serial interfaces can be be used simultaneously. This enables setups like running a CRSF wing stabilization unit and HoTT telemetry, Tramp or SmartAudio at the same time. Serial2 can also be used to simplify the wiring of e.g. an SBUS connection on receivers which have the first serial interface on separate connectors (e.g. RM receivers with JST connectors).</p>"},{"location":"software/serial-protocols/#assigning-serial2-tx-vs-serial2-rx-and-serial2-tx","title":"Assigning Serial2 TX vs Serial2 RX and Serial2 TX","text":"<p>Most of the supported serial protocols are uni-directional (only sending data) or are bi-directional (sending and receiving data) on one single wire (half duplex). For those protocols it is only necessary to assign a TX pin. True (full duplex) serial protocols require the assignment of RX and TX. The following list shows the configuration requirements for the supported protocols:</p> <ul> <li>CRSF and MAVLINK: require Serial2 TX and additionally Serial2 RX if the device returns data (e.g. telemetry) </li> <li>all others: require Serial2 TX only</li> </ul>"},{"location":"software/serial-protocols/#configuring-serial2-on-esp32-pwm-receivers","title":"Configuring Serial2 on ESP32 PWM receivers","text":"<p>Serial2 is best configured using the WebUI but can also be configured using the LUA script.</p> <p>Open the WebUI as described in section \"How to get to the Web UI\" and scroll down to the PWM Output table. Any PWM Output with the blue Serial2 feature tag can be used to assign Serial2 TX or Serial2 RX. </p> <p></p> <p>Assign Serial2 TX. If necessary for the serial protocol you intend to run assign Serial2 RX also. In this example we want to run a protocol that only requires Serial2 TX (see above section). Choose Serial2 TX using the Mode drop down list on the desired PWM Output.</p> <p></p> <p>Scroll down a little further. A new line named Serial2 protocol is now available to choose the desired protocol.</p> <p></p> <p>Save the configuration using the SAVE button at the bottom of the page.</p> <p>Restart the receiver and connect your serial device to the configured PWM Output.</p>"},{"location":"software/serial-protocols/#configuring-serial2-on-esp32-non-pwm-receivers","title":"Configuring Serial2 on ESP32 non-PWM receivers","text":"<p>Some non-PWM receivers like the RadioMaster RP4TD have spare pins exposed. The pins are configured for Serial2 by default. For Serial2 protocol selection use the ELRS LUA script and follow the Protocol 2 section of Other Devices.</p> <p></p>"},{"location":"software/serial-protocols/#sumd-notes","title":"SUMD Notes","text":"<p>SUMD is the Graupner HoTT bus protocol used to transmit multiple channel data over a single serial line. It transports up to 16 full res channels at a rate of 100Hz and is mainly used to provide digital channel data to Flybarless Control Systems for helicopters and older Flight Controllers.</p> <p>As already stated many times in this manual, ExpressLRS expects AUX1 (channel 5) to control the arm state. This may lead to a conflict using serial protocols like SUMD in conjunction with devices having fixed channel assignments. To circumvent the problem, SUMD implements a channel remapping by swapping channels 5 and 8 in its serial output:</p> <p></p> <p>This opens the possibility to assign a linear output channel order for channels 1 to 7 using an appropriate OpenTX/EdgeTX mixer setup.</p> <p>Example: Microbeast flybarless controller without RPM governor. (Follow the Microbeast manual to setup the single line receiver mode.)</p> <p>Microbeast expected channel order for SRXL/SUMD:</p> <p></p> <p>Required OpenTX/EdgeTX mixer setup to satisfy the Microbeast expected channel order:</p> <p></p>"},{"location":"software/serial-protocols/#dji-rs2-pro-notes","title":"DJI RS2 Pro Notes","text":"<p>Here's a few things to be aware of when using this Receiver Mode:</p> <ul> <li>The ELRS TX should be set to 100Hz Full, and Switch Mode to 8ch.</li> <li>Channels 1, 2, 4 are Pan, Tilt, Roll</li> <li>Aux1/CH5 is unused but should be set as an arm switch and left in the unarmed position (Low).</li> <li>Aux2/CH6 should be a 3 way switch. From the switch center position to high/low, Rec start/stop or photos can be captured.</li> <li>Aux3/CH7 should be a 3 way switch. Each of the 3 positions corresponds to Modes 1, 2 or 3.</li> <li>Aux4/CH8 should be a 3 way switch. From the switch center position to high/low, Selfie or Recenter can be activated.</li> <li>Rec, photos, recenter, and selfies are done by toggling the switch from the center position to high/low, and back to center in a quick 0.4s movement. With some ETX and mixer magic these functions can be improved and mapped to buttons etc.</li> <li>ETX Outputs for the channels should be -100 to 100.</li> </ul> <p>For more information, please see PR 2140</p>"},{"location":"software/serial-protocols/#hott-telemetry-notes","title":"HoTT Telemetry Notes","text":"<p>The HoTT Telemetry Serial Protocol allows to connect multiple Graupner HoTT Telemetry devices and intends to support the growing community of ELRS enthusiasts flying fixed wing or helicopter models by providing access to commercially available external telemetry devices without the use of flight controllers or DIY data hubs.</p> <p>A typical use case for an electric fixed wing model could make use of a the electric Swiss knife SM Unisens-E to downlink flight battery data like voltage, current, consumed capacity and flight data like altitude, vertical velocity while an electric glider pilot could choose a YGE or Graupner Telemetry ESC to downlink flight battery data and a GPS/Vario to downlink flight data like GPS position, GPS speed, GPS (MSL) altitude together with barometric vertical velocity and barometric altitude.</p> <p>HoTT Telemetry example setup - GPS/Vario and Voltage Module connected to a RadioMaster ER6 receiver:</p> <p></p> <p>Tested receivers:</p> <p>ESP8285 platform</p> <ul> <li>BetaFPV Nano RX 2.4 GHz</li> <li>Happymodel EPW6</li> </ul> <p>ESP32 platform</p> <ul> <li>BetaFPV SuperD 900MHz</li> <li>BetaFPV SuperP 14ch</li> <li>RM ER6 (G and V variants too)</li> <li>RM ER8 (G and V variants too)</li> </ul> <p>Tested HoTT Telemetry devices (OEM and 3<sup>rd</sup> party):</p> <ul> <li>Graupner 33600 GPS/Vario</li> <li>Graupner 336001 Vario</li> <li>Graupner 33631 Voltage Module</li> <li>Graupner S3046 ESC +T50 (all other +T ESCs will work too)</li> <li>SM GPSLogger 3</li> <li>SM Unisens-E</li> <li>SM Microvario (with TEK support)</li> <li>YGE 35LVT. ESC (all other YGE Telemetry ESCs will work too)</li> <li>VSpeak Vario Pro</li> <li>X-Vario 2</li> </ul> <p>HoTT Telemetry protocol is running on a multi-device capable single wire half duplex bus and requires a bus master to orchestrate the communication between the bus master and the connected devices. The ELRS receiver acts as the bus master communicating with the devices. The bus master receives selected HoTT Telemetry data to be forward to the ELRS CRSF protocol based over-the-air telemetry down link. The list of additional telemetry sensors provided shows the telemetry sensors available for EdgeTX depending on the HoTT Telemetry devices connected to the HoTT Telemetry bus:</p> <ul> <li>Baro altitude (AGL)</li> <li> <p>Baro vertical speed (Vario)</p> </li> <li> <p>GPS latitude</p> </li> <li>GPS longitude</li> <li>GPS groundspeed</li> <li>GPS heading</li> <li>GPS altitude (MSL)</li> <li>GPS number of satellites</li> <li>GPS distance - possible if added as EdgeTX calculated sensor</li> <li> <p>GPS traveled distance - possible with LUA script</p> </li> <li> <p>Batt voltage</p> </li> <li>Batt current</li> <li>Batt capacity</li> <li>Batt remaining</li> </ul> <p>Requirements for using HoTT Telemetry:</p> <ul> <li>The Serial port must be enabled. The Serial port is enabled by default on some receivers, e.g. RadioMaster ER6x/ER8x receivers. On other receivers the Serial port must be enabled using the WebUI or LUA script, see above section WebUI and Lua Script.</li> <li>The Serial Protocol must be set to HoTT Telemetry, see above section WebUI and Lua Script.</li> <li>On some receivers adapter cables are required.</li> </ul> <p>Adapter cables</p> <p>If an adapter cable is required depends on the platform the receiver is based on (ESP8285 or ESP32) and the way the serial port is designed on the specific receiver. RadioMaster uses a dedicated JST connector, on other receivers including the BetaFPV SuperP one or two of the PWM servo connectors are used.</p> <p>ESP32 based receivers with Serial on dedicated PWM servo connectors like the BetaFPV SuperP 14ch:</p> <ul> <li>No adapter cable is required. HoTT sensors can be directly connected to the PWM servo connector of any of the PWM pins configured for Serial2 TX (see above section).</li> </ul> <p>ESP32 based receivers with Serial on the JST connector.</p> <ul> <li>RadioMaster ER6x/ER8x need a JST to JR adapter. The JST pigtail RadioMaster included in the package can be used.</li> <li>Caveat: the SuperP 14ch also has a JST connector but it can't be used as a Serial port, see the first ESP32 category.</li> <li>Alternatively use any of the PWM pins configured for Serial2 (see above section 2).</li> </ul> <p></p> <p></p> <p>ESP8285 based receivers:</p> <ul> <li>Require a Schottky diode between Serial RX and Serial TX:  </li> </ul> <p></p> <p>Example realization of an adapter cable with diode for ESP8285 non-PWM receivers like the BetaFPV Nano RX:</p> <p></p> <p>Example adapter cable setup for ESP8285 PWM receivers like the Happymodel EPW6:</p> <p></p>"},{"location":"software/serialvtx/","title":"Serial VTX","text":"<p>NOTE</p> <p>SmartAudio/Tramp are loosely-defined protocols with edge cases, misinterpretations, and shoddy cloned implementations. ExpressLRS does not intend to support the vast majority of VTXes. SmartAudio was tested on a TBS Unify Pro32 HV, and Tramp was tested on an ImmersionRC Tramp HV, and both were tested with OpenVTX. It may work on other hardware, but it's not guaranteed and changes won't be made to accommodate broken implementations.</p> <p>NOTE</p> <p>ESP32 is the only supported platform for SmartAudio/Tramp at this time; ESP8266 RXes lack the necessary UART functionality to do this the right way, and are not supported.</p>"},{"location":"software/serialvtx/#description","title":"Description","text":"<p>ExpressLRS now has support for controlling an external video transmitter through SmartAudio/Tramp protocols. This is a powerful feature for PWM+FPV users who don't have a flight controller to manage their VTX settings.</p>"},{"location":"software/serialvtx/#hardware-requirements","title":"Hardware Requirements","text":"<p>Using serial VTX control requires at least a secondary UART TX pin assigned on your ESP32-based receiver, such as the RadioMaster RP4TD or the BetaFPV SuperP. You may need to assign a pin as Serial TX using the Lua script \"Other devices\" section, or using the RX Web UI if one is not already set up.</p>"},{"location":"software/serialvtx/#software-requirements","title":"Software Requirements","text":"<p>Ensure both your transmitter module and your receiver are up to date with the latest release versions; follow the Firmware Update Guide for detailed instructions.</p> <p>The minimum version to use this feature is: - Receiver firmware: <code>3.5.0</code></p>"},{"location":"software/serialvtx/#setting-up-serial-vtx-control-via-lua","title":"Setting up serial VTX control (via Lua)","text":"<ol> <li> <p>Open the ExpressLRS LUA script, scroll to the bottom and select <code>Other Devices</code>, then select your receiver.</p> </li> <li> <p>Select <code>Output Map</code>, and assign an available <code>Output Ch</code> as <code>Serial2 TX</code>.</p> </li> <li> <p>Select \"BACK\" to return to the main RX menu</p> </li> <li> <p>Select <code>Protocol2</code> and set it to <code>SmartAudio</code> or <code>Tramp</code>. This configures the RX to output SmartAudio or Tramp on the previously-selected pin.</p> </li> <li> <p>Wire the selected <code>Output Ch</code> to your video transmitter's SmartAudio or Tramp pin</p> </li> <li> <p>Select \"BACK\" to return to the main Lua menu</p> </li> <li> <p>You can now use the ExpressLRS VTX Administrator function to control your VTX</p> </li> </ol>"},{"location":"software/serialvtx/#implementation-details","title":"Implementation details","text":"<p>ExpressLRS does not intend to support full VTX control, and especially not \"VTX Table\" functionality. To that end, here are some of the implementation decisions we've made in supporting SmartAudio/Tramp</p>"},{"location":"software/serialvtx/#bandschannels","title":"Bands/Channels","text":"<p>Only bands A/B/E/F/R/L and channels 1-8 are supported. Custom frequencies, and non-5.8GHz VTXes don't work, and we're not interested in making them work.</p>"},{"location":"software/serialvtx/#bidirectionality","title":"Bidirectionality","text":"<p>These protocols support methods to confirm the settings on the VTX and update them on the controlling device (flight controller, RX). Our implementation is one-way only.</p>"},{"location":"software/serialvtx/#smartaudio-power-levels","title":"SmartAudio power levels","text":"<p>SmartAudio has 3 different ways to specify a power level: a raw DAC output value, a power output in dBm, or a \"power level\" starting from 0. We've chosen to implement the third option.</p> <p>Here's the result on a Unify Pro32 HV</p> VTX Administrator \"Pwr Lvl\" Output power in dBm Output power in mW 1 14 25 2 23 200 3 27 500 4 29 800"},{"location":"software/serialvtx/#smartaudio-pit-mode","title":"SmartAudio pit mode","text":"<p>SmartAudio once again has 3 different ways to do something: pit mode is able to be specified as \"in-range\", \"out-range\", both at the same time, and a running or not flag (which is documented backwards of how it actually works). It's difficult to determine the \"right\" way of entering/exiting pitmode, and it never behaved how I expected it to in testing. YMMV.</p>"},{"location":"software/serialvtx/#tramp-power-levels","title":"Tramp power levels","text":"<p>ImmersionRC Tramp takes a completely different approach to power levels; just send the output power you want in mW. Unfortunately this doesn't match our \"Pwr Lvl\" approach from VTX Administrator, so we had to arbitrarily determine some output power levels. ImmersionRC hardware will only support the first 5; the last 3 are \"YMMV\" options for \"other\" video transmitters that support Tramp protocol.</p> VTX Administrator \"Pwr Lvl\" Output power in mW 1 10 2 25 3 200 4 400 5 600 6 1000 (not supported by ImmersionRC Tramp) 7 1600 (not supported by ImmersionRC Tramp) 8 3000 (not supported by ImmersionRC Tramp)"},{"location":"software/stlink-fix/","title":"PIO STLink Fix","text":""},{"location":"software/stlink-fix/#overview","title":"Overview","text":"<p>PlatformIO has an older version of STLink. It is unable to communicate with the STM32L MCUs on some RXs.  </p>"},{"location":"software/stlink-fix/#affected-receivers","title":"Affected Receivers","text":"<ul> <li>(DIY) PP</li> </ul> <p>Swapping out PIO's STLink folder contents with the current STLink will allow using the configurator with these RXs.</p> <p>Go to your STLink folder</p> <ul> <li>Copy contents of \"ST-Link Utility\" <code>C:\\Program Files (x86)\\STMicroelectronics\\STM32 ST-LINK Utility\\ST-LINK Utility</code></li> </ul> <p></p> <ul> <li>Paste files from \"st-link utility\" folder into \"stlink\" folder in your user PIO location <code>C:\\Users\\username\\ .platformio\\packages\\tool-stm32duino</code></li> </ul> <p></p>"},{"location":"software/switch-config/","title":"Switch Configs","text":"<p>WARNING</p> <p>Put your arm switch on AUX1, and set it as ~1000 is disarmed, ~2000 is armed.</p>"},{"location":"software/switch-config/#summary-of-switch-configuration-modes","title":"Summary of Switch Configuration Modes","text":"<p>This table summarizes the switch configuration modes, available channel switch positions and resolutions, channel update rate, and packet rate as it applies to each channel or flight controller auxiliary channel (Aux). Below the table are descriptions for each option.</p> Channel Flight Controller Hybrid Wide Full Res 8ch Full Res 16ch Rate/2 Full Res 12ch Mixed 1 Sticks NormalRange NormalRange CRSF ExtLimits CRSF ExtLimits<sup>H</sup> CRSF ExtLimits 2 Sticks NormalRange NormalRange CRSF ExtLimits CRSF ExtLimits<sup>H</sup> CRSF ExtLimits 3 Sticks NormalRange NormalRange CRSF ExtLimits CRSF ExtLimits<sup>H</sup> CRSF ExtLimits 4 Sticks NormalRange NormalRange CRSF ExtLimits CRSF ExtLimits<sup>H</sup> CRSF ExtLimits 5 Aux 1 2-posArm 2-posArm 2-posArm CRSF ExtLimits<sup>H</sup>Arm 2-posArm 6 Aux 2 6-pos<sup>RR</sup> 64/128-pos<sup>RR</sup> CRSF ExtLimits CRSF ExtLimits<sup>H</sup> CRSF ExtLimits<sup>H</sup> 7 Aux 3 6-pos<sup>RR</sup> 64/128-pos<sup>RR</sup> CRSF ExtLimits CRSF ExtLimits<sup>H</sup> CRSF ExtLimits<sup>H</sup> 8 Aux 4 6-pos<sup>RR</sup> 64/128-pos<sup>RR</sup> CRSF ExtLimits CRSF ExtLimits<sup>H</sup> CRSF ExtLimits<sup>H</sup> 9 Aux 5 6-pos<sup>RR</sup> 64/128-pos<sup>RR</sup> CRSF ExtLimits CRSF ExtLimits<sup>H</sup> CRSF ExtLimits<sup>H</sup> 10 Aux 6 6-pos<sup>RR</sup> 64/128-pos<sup>RR</sup> - CRSF ExtLimits<sup>H</sup> CRSF ExtLimits<sup>H</sup> 11 Aux 7 6-pos<sup>RR</sup> 64/128-pos<sup>RR</sup> - CRSF ExtLimits<sup>H</sup> CRSF ExtLimits<sup>H</sup> 12 Aux 8 16-pos<sup>RR</sup> 64/128-pos<sup>RR</sup> - CRSF ExtLimits<sup>H</sup> CRSF ExtLimits<sup>H</sup> 13 Aux 9 - - - CRSF ExtLimits<sup>H</sup> CRSF ExtLimits<sup>H</sup> 14 Aux 10 - - - CRSF ExtLimits<sup>H</sup> - 15 Aux 11 - - - CRSF ExtLimits<sup>H</sup> - 16 Aux 12 - - - CRSF ExtLimits<sup>H</sup> - PacketRates 50 thruF1000 50 thruF1000 100&amp;333Only 100&amp;333Only 100&amp;333Only"},{"location":"software/switch-config/#switch-position-channel-resolution","title":"Switch Position / Channel Resolution","text":"Label Description Normal Range 10-bit or 1024 positions mapped to PWM 988us to 2012us (1 bit = 1us) CRSF Ext Limits 10-bit or 1024 positions mapped to PWM 885us to 2115us (1 bit = 1.23046875us) 64 / 128-pos The bit depth is dependent on the selected telemetry ratio. For a telemetry ratio of 1:2 and 1:4 these channels are 6-bit/64 pos. For all other ratios, these channels are 7-bit/128 pos. The 7-bit/128 positions is 12.5% the resolution of 10-bit, and 6-bit/64 positions is 6.25% the resolution of 10-bit. This may not be enough resolution for a head tracker but definitely enough for flight modes, flaps, gear, etc. 16-pos 4-bit which is good for flight modes, flaps, gear, etc. 6-pos 3-bit which is good for flight modes, flaps, gear, etc. 2-pos 1-bit for Arm, ~1000us is the disarmed state and ~2000us is the armed state (see the explanations below of why the armed state is very important for safety and performance) <p>WARNING</p> <p>Put your arm switch on AUX1, and set it as ~1000 is disarmed, ~2000 is armed.</p> <p>Note</p> <p>If using a receiver with PWM outputs and you would like to use the PWM output 5 on the receiver for a servo, gear, etc. Go into the WiFi interface of the receiver and map any of the other channels to PWM Output 5. Please always still use AUX1 for the 2-pos Arm switch.</p>"},{"location":"software/switch-config/#channel-update-rate-versus-packet-rate","title":"Channel Update Rate versus Packet Rate","text":"Label Description Bolded This channel will be included in every packet at the selected packet rate (So a 150Hz Packet Rate = 150Hz Channel Update Rate) H  Half Rate Half of the channels are included in each packet - Rate/2 (So a 100Hz Packet Rate cut in half = 50Hz Channel Update Rate) RR  Round Robin These channels wait their turn to be sent in a packet (So a 150Hz Packet Rate sends a channel every 7<sup>th</sup> packet = 22Hz Channel Update Rate) 50 thruF1000 The Hybrid and Wide switch modes are only available on packet rates of 50Hz, 150Hz, 250Hz, 500Hz, D250Hz, D500Hz, F500Hz, and F1000Hz 100&amp;333Only The Full Resolution switch modes (8ch, 16ch Rate/2, 12ch Mixed) are only available on packet rates of 100Hz Full and 333Hz Full"},{"location":"software/switch-config/#detailed-description-of-switch-configuration-modes","title":"Detailed Description of Switch Configuration Modes","text":"<p>Note</p> <p>The switch configuration mode can only be changed when a receiver is not connected to the transmitter and when the transmitter is not armed. The mode is changed using the LUA Configuration in EdgeTX / OpenTX or using buttons, joystick, screen, etc. on the actual transmitter itself. </p> <p>ExpressLRS has a few options for how switches are transmitted; Hybrid, Wide, Full Res 8ch, Full Res 16ch Rate/2, Full Res 12ch Mixed.</p>"},{"location":"software/switch-config/#hybrid-and-wide-switch-configuration-modes","title":"Hybrid and Wide Switch Configuration Modes","text":"<p>These two switch modes are only available when packet rates of 50Hz, 150Hz, 250Hz, 500Hz, D250Hz, D500Hz, F500Hz, and F1000Hz and selected.</p> <p>The stick inputs (Chan 1-4) are sent with every packet at the normal range resolution of 10-bit or 1024 positions mapped to a PWM of 988us to 2012us (1 bit = 1us) which corresponds to -100% and 100% in EdgeTX / OpenTX.</p> <p></p> <p>The first switch (Chan 5 / AUX 1) is sent with every packet. PUT YOUR ARM ON THIS CHANNEL / AUX 1. It is used to enable safeguards and performance settings in the software and hardware. See the FAQ below. This switch is 1-bit / 2-position and is mapped to a PWM of ~1000us for disarmed and ~2000us for armed.</p> <p>For the remaining 7 switches (Chan 6 thru 12 /  AUX 2 thru AUX 8), only one switch is sent with each packet and is rotated on each packet (Round Robin).</p> <p>In Hybrid mode, AUX2-AUX7 / Chan6-11 are 3-bit and can be used as either 2-position, 3-position, or 6-position switches or selector buttons. These are mapped to a PWM of 1000us to 2000us.</p> 2-posSwitch 3-posSwitch 6-posSwitch Approx. ChannelInput PWM (us) ChannelOutput (us) ArduPilot Mode 1 1 1 988 1000 Mode1 (up position for 2-pos / 3-pos) 2 1192 1275 Mode2 3 1398 1425 Mode3 2 - 1500 1500 Mode4 (center position in 3-pos) 4 1602 1575 Mode4 5 1807 1725 Mode5 2 3 6 2012 2000 Mode6 (down position for 2-pos / 3-pos) <p>In Hybrid mode, AUX8 / Chan12 is 4-bit / 16-position and is mapped to the PWM table below. It takes 7 packets to send the complete set of switches before cycling back to AUX2. You can stack all your modes in here, Bardwell style, or get some low-res camera pan action (180 degrees / 16 = 11ish deg per position which isn't terrible). Clever math-heads might note that there's no \"center position\" (1500us) in a 16-position switch, so using AUX8 with a 3-position switch means it will come out as 1533 at the flight controller.</p> Switch Position 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Approx.\u00a0Chan\u00a0Input\u00a0PWM\u00a0(us) 988 1056 1125 1193 1261 1329 1398 1466 1534 1602 1671 1739 1807 1875 1944 2012 Chan\u00a0Output\u00a0PWM\u00a0(us) 1000 1066 1133 1200 1266 1333 1400 1467 1533 1600 1666 1733 1800 1866 1933 2000 <p>In Wide mode, AUX2-AUX8 / Chan6-12 are 6-bit / 64-position for telemetry ratios of 1:2 and 1:4. For all other telemetry ratios, these 7 switches are 7-bit / 128-position. It takes 8 packets to send the complete set of switches before cycling back to AUX2 (one more than Hybrid). Wide uses the 8<sup>th</sup> slot to transmit extra data to the receiver, including the current transmitter power. This is the only switch mode which can show the transmitter power <code>TPwr</code> on the flight controller's OSD. These behave more like traditional channels although with lower precision. You can tell you're operating in Wide mode when a switch in the middle position shows up as 1503 instead of 1500.</p> <p>If using ArduPilot in Wide mode you will see that the channel outputs don't line up very well with the standard -100% (988us) to +100% (2012us) output range in EdgeTX / OpenTX when using a 6-position selector as input. Both the first two and the last two positions get binned into Mode 1 and Mode 6 respectively. To get the full 6 ArduPilot modes, go to the Outputs page on the OpenTX model setup and set the min / max for the channels to -75% / +75%.</p>"},{"location":"software/switch-config/#full-resolution-switch-configuration-modes","title":"Full Resolution Switch Configuration Modes","text":"<p>These switch modes come in three flavors based on the number of output channels you would like and are only available on packet rates of 100Hz Full and 333Hz Full.</p> <ol> <li> <p>8ch - Channels 1 to 4 and Channels 6 to 9 are sent 10-bit, at the selected Packet Rate, along with Channel 5 (AUX1) in 1-bit (2-position) for Arming.</p> </li> <li> <p>16ch Rate/2 - All the Channels are sent 10-bit but at half rate.</p> </li> <li> <p>12ch Mixed - Channels 1 to 4 are sent 10-bit with Channel 5 (AUX1) in 1-bit (2-position) for Arming at the selected Packet Rate. Channels 6 to 13 are then sent at 10-bit but at half rate.</p> </li> </ol> <p>All of these 10-bit or 1024 positions are mapped to PWM 885us to 2115us (1 bit = 1.23046875us) in what is called \"CRSF Extended Limits\"</p> <p></p>"},{"location":"software/switch-config/#faq","title":"FAQ","text":""},{"location":"software/switch-config/#why-do-you-keep-saying-put-arm-on-aux1","title":"Why do you keep saying \"put arm on AUX1\"?","text":"Why do you keep saying \"put arm on AUX1\"? <p>For safety and performance reasons.</p> <p>SAFETY</p> <p>AUX1 is sent with every packet going out, this is the most reliable way to be able to tell your model to disarm. If your arm switch is on another aux channel, it may be several packets before that switch is transmitted, and there's no guarantee that the RX will actually receive that packet. There's a non-trivial chance your model may not ever disarm if the link quality is low and it just so happens that the packet containing the arm switch is getting missed every time. Forcing the arm switch into every packet on AUX1 means that if any packet is received by ExpressLRS, it will disarm your model, not just a less than 1-in-7 chance.</p> <p>It also protects against unintentional disarms caused by a corrupt packet changing the value of the arm switch to disarmed. Betaflight requires that 4x \"disarm\" commands are received before disarming to guard against this possibility. With arm on AUX1, a single corrupt packet can not disarm your model. With arm on AUX2-8, the one corrupt switch value will be sent 6 times before the value is refreshed, but the flight controller would have already disarmed by that point.</p> <p>Your transmitter and receiver also act differently when \u201carmed\u201d and when \u201cdisarmed\u201d. When disarmed, the transmitter and receiver are free to adjust their communication in order to make the LUA and other configuration operations more responsive. When \"disarmed\", everything will appear to be working appropriately but none of the safeguards will be in place and performance will not be what you expect. </p> <p>When <code>IsArmed</code> is enabled, these safeguards are applied:</p> <ul> <li>All \"Button\" inputs are disabled</li> <li>All \"Joystick\" (5-way buttons) are disabled</li> <li>Bump to Share is disabled</li> <li>VTX Admin is disabled</li> <li>Integrated VTX channel change is disabled</li> </ul> <p>PERFORMANCE</p> <p>When <code>IsArmed</code> is enabled, these performance features are activated:</p> <ul> <li>Dynamic Power is fully enabled</li> <li>Race telemetry mode turns telemetry off</li> <li>Some thermal-based fan controls are enabled</li> </ul> <p>Arming is an extremely important part of the performance of the control link. Please use Aux 1 / Chan 5 as indicated. Also keep in mind that for ExpressLRS, ~1000us is the disarmed state and ~2000us is the armed state.</p>"},{"location":"software/switch-config/#i-use-a-3-pos-switch-for-arm-this-software-is-unusable","title":"I use a 3-pos switch for arm, this software is unusable?","text":"I use a 3-pos switch for arm, this software is unusable? <p>Good news, you can still use a 3-position switch to arm! However, you will need to adjust the model input / mixer settings for AUX1 in EdgeTX / OpenTX to remap the switch to be 2-position / on-off switch. If your 3-position arm switch had a second function as well, such as enabling Blackbox, just use one of the other channels to send the same switch on a second channel using the model input / mixer settings EdgeTX / OpenTX.</p>"},{"location":"software/switch-config/#what-about-normal-one-bit-switch-mode","title":"What about \"Normal\" one bit switch mode?","text":"What about \"Normal\" one bit switch mode? <p>In version 1.0 of ExpressLRS, there was also a switch mode called \"Normal\" where there were eight 1-position switches sent in every packet. This mode was removed in version 2.0 due to its unpopularity and the flash space was used for other features. Please use Hybrid or Wide modes and all of the high performance packet rates.</p>"},{"location":"software/switch-config/#every-time-i-change-switch-mode-in-lua-it-changes-back-is-my-transmitter-broken","title":"Every time I change switch mode in Lua, it changes back! Is my transmitter broken?","text":"Every time I change switch mode in Lua, it changes back! Is my transmitter broken? <p>If the Lua loads then you know its communicating with your transmitter. However, the switch mode can only be changed when a receiver is not connected and makes it appear as if the changes are not saving. This is done to ensure consistency between the RX and TX interpretation of the switch data being actively transmitted. This is a safeguard. Power down your receiver, wait for the \"Telemetry Lost\" callout, and the switch mode change will stick / save. The receiver will talk to the transmitted when it is powered up to handshake on the new settings.</p>"},{"location":"software/teamracing/","title":"Team Racing","text":""},{"location":"software/teamracing/#what-is-team-racing","title":"What is Team Racing?","text":"<p>Team Racing is a receiver feature that allows multiple models to be connected to one transmitter at the same time. Each model is assigned to a different switch position and will select that model to control. Any non-selected model is failsafed and will have its telemetry disabled.</p> <p>The purpose of the receiver selection is to allow a downed model (which is physically unreachable mid-race) to be deactivated and allow the pilot to take control of another model using the same controller. In a default setup, if the pilot plugged in a new model and armed, both models will respond and arm which is incredibly undesirable. This would be used in a Team Race event such as MultiGP Mayhem.</p>"},{"location":"software/teamracing/#formal-definition","title":"Formal Definition","text":"<p>Team Racing is defined in this context as:</p> <ul> <li>0 or 1 active transmitters with a distinct binding phrase. \"One pilot operating their transmitter\"</li> <li>Multiple receivers bound to that transmitter's binding phrase, all powered at the same time.</li> <li>Pilot has the ability to direct which receiver is currently \"active\" including:</li> <li>Sending channels data and LinkStats information to flight controller</li> <li>Transmitting telemetry to the TX</li> <li>Updating servo positions</li> </ul>"},{"location":"software/teamracing/#team-racing-does-not","title":"Team Racing does NOT","text":"<ul> <li>Allow multiple pilots (more than 1 active transmitter) to control a model. There is only one binding phrase and ExpressLRS rule is one active transmitter per binding phrase.</li> <li>Support different packet rates / switch modes per model. All models use the same packet parameters.</li> <li>Encourage pilots to have multiple active models flying at once, e.g. launching a model and putting it into autopilot, then switching to a second model to chase it by effectively failsafing the first via TeamRace switch.</li> <li>Adjust VTX power settings when switching.</li> </ul>"},{"location":"software/teamracing/#setup","title":"Setup","text":"<p>Two configuration parameters are present in the Receiver Lua (ExpressLRS Lua -&gt; Other Devices -&gt; (select receiver item) -&gt; Team Race). See ExpressLRS Lua script</p> <ul> <li>Channel - The channel that is checked to determine the currently selected model.</li> <li>Position - Which position of the TeamRace Channel activates this model.</li> </ul> <p>No flight controller setup is needed. The receiver selection is completely transparent to the flight controller-- the channels will stop updating and it should failsafe as normal. NOTE Servos will wait 1s before switching to failsafe positions, which may be longer than normal (LQ dropping to 0 is usually faster than the 1s hard timeout).</p> <p>Team Racing works in Hybrid and Wide switch mode as well as FullRes packet modes. When the receiver is in a TeamRace Mismatch mode, the LED will display the \"Model Mismatch\" blink pattern / color. The Lua will not display Model Mismatch, as telemetry will be disabled.</p>"},{"location":"software/teamracing/#vtx-control","title":"VTX Control","text":"<p>No VTX Admin / Control is performed when deselecting a model at this time due to the variety of ways a user might configure their VTX to go into Pit Mode: ExpressLRS VTX Admin Pit Switch, Betaflight PitMode mode switch, or USER1/USER2/pinio_box power cut. The user must still configure their method to disable the deselected VTX using the Team Race channel. For CRSF mode serial output, ExpressLRS guarantees at least one packet with the proper deselected channel position will be sent to the flight controller to handle this.</p>"},{"location":"software/toolchain-install/","title":"Toolchain Setup","text":"<p>Note</p> <p>The following section is intended for advanced users who intend to dabble with the source code directly.</p>"},{"location":"software/toolchain-install/#toolchain-setup-advanced","title":"Toolchain Setup (Advanced)","text":"<p><code>ExpressLRS</code> is written in C++ using the Arduino framework. </p> <ul> <li>Rather than using the Arduino IDE (which let's face it, \ud83d\uddff is pretty clunky), we use PlatformIO</li> <li>To ease the use of <code>pio</code> we recommend using the extension   for <code>Visual Studio Code</code></li> </ul>"},{"location":"software/toolchain-install/#platformio","title":"PlatformIO","text":"<ol> <li>\ud83d\udd3d Download a copy of VSCode for your computer </li> <li>\ud83d\udcc2 Open VSCode, and click on the \"Extensions\" icon in the toolbar on the right (see Managing Extensions \ud83d\udcd8)</li> <li>\ud83d\udd0e In the search box, enter <code>platformio</code>, and install the extension (see the <code>pio install</code> documentation \ud83d\udcda)</li> </ol>"},{"location":"software/toolchain-install/#git-setup","title":"Git Setup","text":"<p>We recommend using VSCode's built-in Git client, as it requires the least 3<sup>rd</sup> party software \ud83e\udd16.</p> <ol> <li>\ud83d\udd3d Download a copy of git (this is also needed for <code>PlatformIO</code>)</li> <li>Install <code>git</code>, click yes to the default options (there are a LOT \ud83d\udcaf)</li> </ol> <p>Important</p> <p>Make sure you select this option during installation, it adds git to PATH which is necessary for VSCode cloning (the next step). </p> <p></p>"},{"location":"software/toolchain-install/#cloning-the-repo","title":"Cloning the Repo","text":"<ul> <li>In VSCode open the <code>command palette</code> (using <code>Cmd+Shift+P</code> on MacOS or <code>Ctrl+Shift+P</code> on Windows)</li> <li>Enter <code>Git: Clone</code> </li> </ul> <ul> <li>Click that! \ud83d\udc48 </li> <li>Then, enter ExpressLRS Repo URL -&gt; <code>https://github.com/ExpressLRS/ExpressLRS.git</code> \ud83d\udcbb </li> <li>Choose a folder for ExpressLRS. \ud83d\udcc2 </li> </ul>"},{"location":"software/toolchain-install/#selecting-the-latest-release","title":"Selecting the Latest Release","text":"<p>Before we can do any building, you need to select a release build of ELRS. For example, release 0.1.0-RC1. In Visual Studio Code select that tag. The location of the selector is shown below. \ud83d\uddb1\ufe0f </p> <p></p> <p></p> <p>Click the selector, and then type in the name of the tag, in this case <code>0.1.0-RC1</code>. </p>"},{"location":"software/toolchain-install/#platformio-building","title":"PlatformIO Building","text":"<p>Once you had the time of your life setting up your toolchain \ud83e\uddf0 you are ready to Flash \u26a1 ExpressLRS to supported hardware.</p>"},{"location":"software/toolchain-install/#building-targets-using-platformio","title":"Building Targets using PlatformIO","text":"<ol> <li>\ud83d\udcc2 When you first launch <code>Visual Studio Code</code>, you should see the <code>PlatformIO Home Page</code> in a tab. Click the <code>Open Project</code> button. Navigate to the <code>ExpressLRS</code> repo directory. Navigate into the <code>src</code> folder (i.e. <code>./ExpressLRS/src/</code>). Finally, press the <code>Open</code> button.</li> <li>\u270f\ufe0f Edit the file <code>./src/user_defines.txt</code> to define user specific variables. \ud83d\ude08 Please make sure you edit the file according to your needs! </li> <li>\ud83d\udcca In the toolbar on the left, click the PlatformIO icon, which will show the list of tasks. Now, select Project Tasks, expand your desired target and select Build/Upload (depending on the method). You should see the result in the terminal.</li> <li>\ud83d\ude43 If something went wrong - please check the <code>Terminal</code>, too. It will contain at least a hint of what the issue is. Please ask the community for further help\ud83e\uddd1\u200d\ud83d\udd27!</li> </ol>"},{"location":"software/toolchain-install/#updating-your-local-repo","title":"Updating your Local Repo","text":"<p>You've cloned the repository and are now wondering how to get new updates down the line. Then this document is meant for you! Here's a primer on how to keep your local copy of the repository up-to-date.</p>"},{"location":"software/toolchain-install/#method-1-the-clean-way-fetch-reset","title":"Method 1: The Clean Way - Fetch &amp; Reset","text":"<p>Probably the easiest and least troublesome method, however, it'll overwrite any changes you've made to your local copy. </p> <ol> <li> <p>Open the terminal</p> <p>You can either straight up open <code>bash/cmd</code> and navigate to your project folder or open an integrated terminal in VSCode:</p> <ul> <li>Open the <code>command palette</code> (using <code>Cmd+Shift+P</code> on MacOS or <code>Ctrl+Shift+P</code> on Windows)</li> <li> <p>Enter: <code>Create New Integrated Terminal</code></p> <p> </p> </li> </ul> </li> <li> <p>In the terminal, type: <code>git fetch -pu &amp;&amp; git reset --hard origin/master</code></p> <p>This will get you the latest version and destroy any local changes you've made.</p> </li> </ol>"},{"location":"software/toolchain-install/#method-2-the-lazy-way-commit-pull-merge","title":"Method 2: The lazy way - Commit, Pull &amp; Merge","text":"<p>The advantage this method has over the first method is that all your changes to the user_defines.txt (or any other file, for that matter) will get merged with any new updates. There's a possibility that, if changes are too big, you could end up with a merge conflict. If that doesn't appeal to you, stick to the first method.</p> <ol> <li> <p>Commit your changes to your local repository</p> <ul> <li>In VSCode open the <code>command palette</code> (using <code>Cmd+Shift+P</code> on MacOS or <code>Ctrl+Shift+P</code> on Windows)</li> <li> <p>Enter: <code>Git: Commit</code></p> <p>VSCode will tell you that there are unstaged changes and ask if you want to add them to the commit. Confirm this! This will just commit your changes to the user_defines.txt to your local repository. No worries, you're not overwriting anything on GitHub! :octocat:</p> </li> </ul> </li> <li> <p>Open the terminal, how-to is detailed in method 1</p> </li> <li> <p>In the terminal, type: <code>git pull -f</code></p> <p>This will pull a new revision of the remote repository to your local repository and automatically merge it with your changes.</p> </li> </ol>"},{"location":"software/toolchain-install/#avoid-user_definestxt-ending-up-in-a-commit-or-getting-overwritten","title":"Avoid user_defines.txt ending up in a commit or getting overwritten","text":"<p>Don't change <code>user_defines.txt</code> for setting up your local configuration. Instead create a new text file <code>`super_defines.txt</code> in the same location as <code>user_defines.txt</code> to define your local build configuration. <code>super_defines.txt</code> will be git-ignored and will not be part of any commits and won't be overwritten by pulls. Example <code>super_defines.txt</code>:</p> <pre><code>#-DRegulatory_Domain_EU_CE_2400\n-DRegulatory_Domain_ISM_2400\n#-DRegulatory_Domain_FCC_915\n#-DRegulatory_Domain_EU_868\n\n-DMY_BINDING_PHRASE=\"bindphrase\"\n-DHOME_WIFI_SSID=\"ssid\"\n-DHOME_WIFI_PASSWORD=\"password\"\n-DLOCK_ON_FIRST_CONNECTION\n\n-DUART_INVERTED\n\n!-DAUTO_WIFI_ON_INTERVAL=60\n-DAUTO_WIFI_ON_INTERVAL=40\n</code></pre> <p>Note: the <code>!</code> flag is called the removal flag. It removes other flags that completely match the text after the <code>!</code>.</p>"},{"location":"software/toolchain-install/#toolchain-setup-advanced-for-linux-users","title":"Toolchain Setup (Advanced) for Linux Users","text":"<p>Note</p> <p>These instructions are meant as a quick start guide for those who develop on Linux. Typically developers on Linux don't need much of an explanation and just look for the right commands for the toolchain. That's what this guide will provide, without any nudging to use Microsoft VSCode IDE.</p>"},{"location":"software/toolchain-install/#cloning-the-repo_1","title":"Cloning the Repo","text":"<p>Open a Shell (Bash) in your regular workspace and clone the repo recursively like always and change into that directory. It is assumed that Linux users know how to use git.</p> <pre><code>git clone --recursive https://github.com/ExpressLRS/ExpressLRS.git\ncd ExpressLRS\n</code></pre>"},{"location":"software/toolchain-install/#platformio_1","title":"PlatformIO","text":"<p>PlatformIO is available as a Python package and can be installed via Pip. Following best practices we will create a virtual environment in the repo directory first.</p> <ol> <li>Install virtual-env (just in case it's not installed by default)</li> </ol> <pre><code>pip install virtual-env\n</code></pre> <ol> <li>Setup a virtual environment to not taint your system's python installation. It does not matter where you create this but it makes sense to create it in the project directory, because best practice is to have a separate venv for each python project.</li> </ol> <pre><code>python -m venv .venv\nsource .venv/bin/activate\n</code></pre> <ol> <li>Install the required python packages. <code>empy</code> and <code>pexpect</code> are listed because modules like <code>dronecan</code> fail to correctly specify their dependencies for pip to install them automatically.</li> </ol> <pre><code>pip install platformio dronecan setuptools empy==3.3.4 pexpect\n</code></pre>"},{"location":"software/toolchain-install/#building-targets-using-platformio_1","title":"Building Targets using PlatformIO","text":"<p>The platformio package comes with the pio executable. It is the build command of the toolchain. <code>pio</code> expects a <code>platformio.ini</code> file in the directory where it is invoked, so change into src directory first.</p> <p>There find and open the <code>user_defines.txt</code> file in your favorite editor. This file contains the build flags that you know from ELRS Configurator. At least uncomment the line for your regulatory domain. That's the minimum requirement for the build to work. You may also want to set your binding phrase and everything else you would normally set in the ELRS Configurator.</p> <p>To verify your build environment does work, start building firmware for a common 900Mhz target. It obviously needs a corresponding regulatory domain setting.</p> <pre><code>cd src\npio run --environment Unified_ESP32_900_RX_via_BetaflightPassthrough\n</code></pre> <p>At some point at the end of the build you will be asked to select some configuration between different manufacturers and products. This sets parameters to provision a unified software binary with information about the device hardware, e.g. if the device has a power amplifier, diversity, etc. .</p> <p>When you reach that point, this indicates that everything did work. You can abort with Ctrl-C and Enter now.</p>"},{"location":"software/toolchain-install/#finding-the-right-configuration-for-your-target","title":"Finding the right configuration for your target","text":"<p>This is the most tricky and obscure part of the ELRS project. Browsing through the <code>platformio.ini</code> file already gives hints about the correct environment, but typically you need to look into the targets and into the devices to back-track what the configurator would select for your device. Another option is to look into the logs of the ELRS Configurator after it flashed your device. You should find the call to pio together with the arguments there.</p>"},{"location":"software/toolchain-install/#flashing","title":"Flashing","text":"<p>When you select <code>--target upload</code> and provide an <code>--upload-port</code>, pio will flash the device as the final step of the build, again asking you about manufacturer / device. Under the hood pio then invokes esptool.</p> <pre><code>pio run --target upload --environment Unified_ESP32_900_RX_via_BetaflightPassthrough --upload-port /dev/ttyUSB0\n</code></pre>"},{"location":"software/user-defines/","title":"User Defines","text":"<p>With more features being added consistently, <code>./src/user_defines.txt</code> has gotten complicated \ud83e\udd37\u200d\u2642\ufe0f. So we will break it down! \ud83d\udd28 </p> <p>Info</p> <p>This is the full list of currently supported User Defines and would help you should you intend to compile the firmware using the Toolchain or manual mode on the ExpressLRS Configurator.</p>"},{"location":"software/user-defines/#defines-101","title":"Defines 101","text":"<ul> <li>If these are used in Configurator Manual Mode or user_defines.txt, the value must begin with <code>-D</code>. Example: <code>NO_SYNC_ON_ARM</code> would be <code>-DNO_SYNC_ON_ARM</code>.</li> <li>A user definition that begins with <code>#</code> is \"commented out\", i.e. not active.</li> </ul>"},{"location":"software/user-defines/#binding-phrase","title":"Binding Phrase","text":"<pre><code>MY_BINDING_PHRASE=\"default ExpressLRS binding phrase\"\n</code></pre> <p>Important</p> <p>This step is simple but important. Both the TX and RX NEED to have the same binding phrase or ExpressLRS WILL NOT WORK. Anyone using the same binding phrase as you will be able to control your model, so be unique. Set something memorable, and limit to alphanumeric phrases conforming to the Latin alphabet<sup>*</sup>. </p> <p>Receivers flashed with firmware builds that do not have binding phrases enabled will support and require the traditional binding method. \ud83d\udcdc For ESP/ESP32 hardware, this value can also be changed through the WebUI.</p> <p>This feature can, but should not be used as a model match feature (to lock a single specific transmitter to a single specific receiver). For that use, the Model Match option.</p> <p><sup>*</sup> This phrase gets md5 hashed and gets built into the binary you will be flashing.</p>"},{"location":"software/user-defines/#regulatory-domain","title":"Regulatory Domain","text":"<p><pre><code>Regulatory_Domain_AU_915\nRegulatory_Domain_EU_868\nRegulatory_Domain_AU_433\nRegulatory_Domain_EU_433\nRegulatory_Domain_FCC_915\nRegulatory_Domain_ISM_2400\n</code></pre> This is a relatively simple one - enable whatever regulatory domain you are in. <code>EU 868</code> \ud83c\uddea\ud83c\uddfa  is compliant to the frequency but is not LBT compliant \ud83d\udc42 . Every other band is near compliant \ud83d\udc7f  but may not be fully compliant for your regulatory domain. </p> <p><pre><code>TLM_REPORT_INTERVAL_MS=240LU\n</code></pre> The TX module sends the LinkStats telemetry to the OpenTX frequently to let the handset know the connection is still active and reduce \"Telemetry Lost\" warnings. Reducing this value may reduce warnings caused by handset errors at higher baud rates. This only affects the connection from the TX module to the handset and does not do anything with the telemetry connection from the receiver. The default value is 240LU. When changing this value, suffix your milliseconds value with LU. For example, to specify a 100ms LinkStats update rate, you have to enter it like this: 100LU.</p>"},{"location":"software/user-defines/#output-power-limit","title":"Output Power Limit","text":"<p><pre><code>UNLOCK_HIGHER_POWER \n</code></pre> By default the max power of the hardware is limited to what it can safely output without extra cooling. Some hardware supports increasing the power by enabling the following option. Check the supported hardware page to see if this is available and what cooling modifications can be made. By enabling this, you are risking permanent damage to your hardware, sometimes even when you add extra cooling. For example, R9M modules will burn out without cooling.</p>"},{"location":"software/user-defines/#performance-options","title":"Performance Options","text":"<p><pre><code>LOCK_ON_FIRST_CONNECTION\n</code></pre> RF Mode Locking - When the RX is waiting for a connection, it cycles through all available rates waiting for a connection on each one. By default, ExpressLRS will go back to this mode after a disconnect (failsafe). If <code>LOCK_ON_FIRST_CONNECTION</code> is used, ELRS will not cycle after a disconnect, but instead, just stay at whatever rate the last connection was. This makes connection re-establishment quick, because the RX is always listening at the proper rate. This is generally what everyone wants, but there is utility in being able to switch the TX to the lowest rate to get more range to re-establish a link with a downed model, which can't happen if the RX is locked at the previous rate.</p> <p>When cycling through the rates, the RX starts with the fastest packet rate and works down to the slowest, then repeats. It waits <code>PACKET_INTERVAL * PACKS_PER_HOP * HOP_COUNT * 1.1</code> at each rate. Example: 4ms * 4 * 80 * 1.1 = 1.408s for 250Hz. The duration is extended 10x if a valid packet is received during that time. Even with <code>LOCK_ON_FIRST_CONNECTION</code>, the rate can be changed by changing the TX rate using ELRS.lua while connected, or by power cycling the RX.</p> <p><pre><code>FAN_MIN_RUNTIME=30\n</code></pre> For TX devices with fans, FAN_MIN_RUNTIME keeps the fan running even after the power level has dropped below the configured Fan Threshold. This prevents the fan from turning on and off every few seconds if the power level is constantly changing. The default is 30 seconds if not defined, the value can be 0-254. There is always a short delay before the fan is activated, which can not be disabled. </p>"},{"location":"software/user-defines/#compatibility-options","title":"Compatibility Options","text":"<p><pre><code>UART_INVERTED\n</code></pre> This only works with <code>ESP32</code> based TXes (will not work with modules without built-in inversion/uninversion), but enables compatibility with radios that output inverted CRSF, such as the FrSky QX7, TBS Tango 2, RadioMaster TX16S. You want to keep this enabled in most cases. If your radio is T8SG V2 or you use Deviation firmware turn this setting off.</p> <p><pre><code>RCVR_INVERT_TX\n</code></pre> This only works with <code>ESP8266/ESP8285</code> based RXes. Invert the TX pin in the receiver code to allow an inverted RX pin on the flight controller to be used (usually labeled SBUS input or RXI). Inverted CRSF output. RX pin (telemetry) is unaffected. Update via_BetaflightPassthrough will not work, only via_Wifi. Note that just because this description includes the word SBUS, it doesn't mean the RX will output SBUS. It is still a CRSF protocol, only inverted, so CRSF should still be the receiver protocol selected in the flight controller software.</p> <p><pre><code>RCVR_UART_BAUD=420000\n</code></pre> Use a custom baud rate on the receiver instead of the default 420000 baud. This is useful for a KISS v1 FC (which runs at 400000) or any other oddball baud, like 115200 for interfacing with an Arduino.</p> <p><pre><code>USE_R9MM_R9MINI_SBUS\n</code></pre> This does not turn on SBUS protocol it simply changes the pin used for communication from those two side pins (A9 and A10) to use the pin labeled \"SBUS\" on the RX, which is inverted. This is useful for <code>F4 FCs</code> which only have an inverted receiver input UART RX. \ud83d\udd3c. This is only one way, so you lose the telemetry downlink to your radio as well as passthrough flashing. Enabling this turns on CRSF protocol output on the <code>S.BUS</code> \ud83d\ude8c pin on your <code>R9MM/R9Mini</code>. <code>set serialrx_inverted = ON</code> may also be needed within Betaflight \ud83d\udc1d for compatibility</p>"},{"location":"software/user-defines/#network-options","title":"Network Options","text":"<p><pre><code>AUTO_WIFI_ON_INTERVAL=30\n</code></pre> \u26a0\ufe0f Must be defined if you plan to update your RX over WiFi without using a button on the RX \u26a0\ufe0f This will automatically turn the WiFi \ud83d\udcf6 on for any module that has an <code>ESP8285</code> on it if no TX connection is established after N seconds from boot (the 30 is the time). This enables pushing firmware updates to the RX by connecting to its WiFi network and visiting <code>http://10.0.0.1</code>.</p> <pre><code>HOME_WIFI_SSID\nHOME_WIFI_PASSWORD\n</code></pre> <p>These options set Home Network Access for your WiFi-enabled hardware. With these sets, the devices will try connecting to your existing WiFi Network when you click on \"(WiFi) Update\" on the ExpressLRS Lua script (for some TX Modules) or automatically after your set interval time. Once the devices connect to your Home WiFi, the Update page can be accessed anywhere, from any device on the same network. The TX Module WiFi update page can be reached using the address http://elrs_tx.local, while the receivers' update page can be reached via http://elrs_rx.local.</p> <p>WiFi mode will first try to connect to the network specified before falling back and creating a new WiFi network. The Home Network can also be modified from the website.</p>"},{"location":"software/user-defines/#other-options","title":"Other Options","text":"<p><pre><code>JUST_BEEP_ONCE\nMY_STARTUP_MELODY=\"&lt;music string&gt;|&lt;bpm&gt;|&lt;semitone offset&gt;\" -or-\nMY_STARTUP_MELODY=\"&lt;rtttl string&gt;\"\n</code></pre> For TXes like the R9M, this sets if the TX only beeps one-time versus playing a startup song. Currently, it is set to play the startup song \ud83c\udfbc , but if you don't prefer it, uncomment this to turn it off. \u2716\ufe0f</p> <p>For all your customization needs, use <code>DMY_STARTUP_MELODY</code> to define your own startup melody using the BLHeli32 or RTTTL syntax. For BLHeli32, the parameters <code>music string</code> and <code>bpm</code> are required, whereas <code>semitone offset</code> is optional to transpose the entire melody up or down by the defined amount of semitones.</p> <p>For example, BLHeli32 melodies are available on Rox Wolf's youtube channel, some experimentation may be required though.  To write your own melody, this (Sheet Music 101) and this (BLHeli Piano) are useful resources.</p> <p>The build process also supports RTTTL-formatted ringtone strings. RTTTL melodies are delimited by colons <code>:</code> and start with a description versus the BLHeli style with pipes <code>|</code>. e.g. <code>Mario:d=4,o=5,b=100:32p,16e6,16e6,16p,16e6,16p,16c6,16e6,16p,16g6,8p,16p,16g</code></p> <p><pre><code>DISABLE_STARTUP_BEEP\n</code></pre> Disables beep sequence at startup of TX, but the TX will still beep when the CRSF connection is acquired</p> <p><pre><code>DISABLE_ALL_BEEPS\n</code></pre> Disables all TX buzzer beeps at any state</p> <p><pre><code>USE_TX_BACKPACK\n</code></pre> Enables code for talking to a connected ESP8266 backpack on the TX module, and associated Lua params. The device target should enable this automatically for devices that come with this built-in, but can be added to any device. The TX backpack allows wireless integration with VRX modules and planned telemetry mirroring over WiFi.</p>"},{"location":"software/user-defines/#debug-options","title":"Debug Options","text":"<p><pre><code>DEBUG_LOG\n</code></pre> Turn on debug messages, sent to the TX Backpack UART if available or else right out the main CRSF UART (such as on the receiver).</p> <p><pre><code>DEBUG_LOG_VERBOSE\n</code></pre> Use to see verbose debug logging (spammy stuff)</p> <p><pre><code>DEBUG_RX_SCOREBOARD\n</code></pre> Print a letter for each packet received or missed (receiver debugging)</p> <p><pre><code>DEBUG_CRSF_NO_OUTPUT\n</code></pre> Don't send CRSF messages over the CRSF UART (receiver only). Used to only see logging and not logging mixed with CRSF.</p> <p><pre><code>DEBUG_RCVR_LINKSTATS\n</code></pre> Prints a log line for every channels packet received at the RX <code>ID,Antenna,RSSI,LQ,SNR,PWR,FHSS,TimingOffset</code>. The ID is generated on the TX side and overwrites CH1-CH4 and increments once for every channel packet. Writes directly to Serial, and does not require DEBUG_LOG. Flash both TX &amp; RX with this enabled to use it if the ID is required.</p> <p><pre><code>DEBUG_FREQ_CORRECTION\n</code></pre> Enable reporting of RF FreqCorrection in receiver's SNR LinkStatistics, also decreases packet rate on Team2.4 for the additional time needed to include the packet header / enable FreqCorrection. The current FreqCorrection value will be reported in RSNR in the LinkStats scaled -127 to +127, where 127 is the maximum allowable deviation. 200kHz for Team2.4, 100kHz for Team900. Dynamic power must be OFF, or else it will adjust based on the FreqCorrection reported in SNR. Both the TX and RX must have this definition enabled otherwise they will not bind.</p>"},{"location":"software/user-defines/#obsolete-user_defines","title":"Obsolete user_defines","text":"<p>See Obsolete user_defines</p>"},{"location":"software/testing/crc-testing/","title":"CRC Testing","text":""},{"location":"software/testing/crc-testing/#overview","title":"Overview","text":"<p>After performing CRC tests using the CRC-13 it was found that CRC includes parity checking so adding a separate parity check was wasteful. CRC checking has now been updated to 14-bit.</p> <p>The following tests were performed using the new CRC-14 bit implementation with a polynomial of <code>0x372B</code>, which gives a hamming distance of 6 in a 57-bit range. What this means is that it can detect up to 5 randomly flipped bits of a message that is 57 bits long.</p> <p>Three stress tests have been performed on the 50-bit data with CRC-14. The tests create random data in 7 bytes (the first byte only has the lower 2 bits set) and then perform random bit flipping based on three styles.</p> <p>Bear in mind that the CRC is not in the data and so is not subject to bit flipping.</p>"},{"location":"software/testing/crc-testing/#random-flipped-bits-within-14-bit-range","title":"Random flipped bits within 14-bit range","text":"<p>Anything over 14 is fairly useless as it will just flip bits back! <pre><code>1 : 0 out of 1000000 false positives, 0.000000%\n2 : 0 out of 1000000 false positives, 0.000000%\n3 : 0 out of 1000000 false positives, 0.000000%\n4 : 0 out of 1000000 false positives, 0.000000%\n5 : 0 out of 1000000 false positives, 0.000000%\n6 : 0 out of 1000000 false positives, 0.000000%\n7 : 0 out of 1000000 false positives, 0.000000%\n8 : 0 out of 1000000 false positives, 0.000000%\n9 : 0 out of 1000000 false positives, 0.000000%\n10 : 0 out of 1000000 false positives, 0.000000%\n11 : 0 out of 1000000 false positives, 0.000000%\n12 : 0 out of 1000000 false positives, 0.000000%\n13 : 0 out of 1000000 false positives, 0.000000%\n14 : 0 out of 1000000 false positives, 0.000000%\n15 : 0 out of 1000000 false positives, 0.000000%\n16 : 0 out of 1000000 false positives, 0.000000%\n17 : 0 out of 1000000 false positives, 0.000000%\n18 : 0 out of 1000000 false positives, 0.000000%\n19 : 0 out of 1000000 false positives, 0.000000%\n20 : 0 out of 1000000 false positives, 0.000000%\n21 : 0 out of 1000000 false positives, 0.000000%\n22 : 0 out of 1000000 false positives, 0.000000%\n23 : 0 out of 1000000 false positives, 0.000000%\n24 : 0 out of 1000000 false positives, 0.000000%\n25 : 0 out of 1000000 false positives, 0.000000%\n26 : 0 out of 1000000 false positives, 0.000000%\n27 : 0 out of 1000000 false positives, 0.000000%\n28 : 0 out of 1000000 false positives, 0.000000%\n29 : 0 out of 1000000 false positives, 0.000000%\n30 : 0 out of 1000000 false positives, 0.000000%\n</code></pre></p>"},{"location":"software/testing/crc-testing/#flipped-bits-in-a-single-sequence-at-the-random-start-position","title":"Flipped bits in a single sequence at the random start position","text":"<p>The number 1-30 is the number of consecutive bits that are flipped at a random starting position. <pre><code>1 : 0 out of 1000000 false positives, 0.000000%\n2 : 0 out of 1000000 false positives, 0.000000%\n3 : 0 out of 1000000 false positives, 0.000000%\n4 : 0 out of 1000000 false positives, 0.000000%\n5 : 0 out of 1000000 false positives, 0.000000%\n6 : 0 out of 1000000 false positives, 0.000000%\n7 : 0 out of 1000000 false positives, 0.000000%\n8 : 0 out of 1000000 false positives, 0.000000%\n9 : 0 out of 1000000 false positives, 0.000000%\n10 : 0 out of 1000000 false positives, 0.000000%\n11 : 0 out of 1000000 false positives, 0.000000%\n12 : 0 out of 1000000 false positives, 0.000000%\n13 : 0 out of 1000000 false positives, 0.000000%\n14 : 0 out of 1000000 false positives, 0.000000%\n15 : 0 out of 1000000 false positives, 0.000000%\n16 : 0 out of 1000000 false positives, 0.000000%\n17 : 0 out of 1000000 false positives, 0.000000%\n18 : 0 out of 1000000 false positives, 0.000000%\n19 : 0 out of 1000000 false positives, 0.000000%\n20 : 0 out of 1000000 false positives, 0.000000%\n21 : 0 out of 1000000 false positives, 0.000000%\n22 : 0 out of 1000000 false positives, 0.000000%\n23 : 0 out of 1000000 false positives, 0.000000%\n24 : 0 out of 1000000 false positives, 0.000000%\n25 : 0 out of 1000000 false positives, 0.000000%\n26 : 0 out of 1000000 false positives, 0.000000%\n27 : 0 out of 1000000 false positives, 0.000000%\n28 : 0 out of 1000000 false positives, 0.000000%\n29 : 0 out of 1000000 false positives, 0.000000%\n30 : 0 out of 1000000 false positives, 0.000000%\n</code></pre></p>"},{"location":"software/testing/crc-testing/#randomly-flipped-bits","title":"Randomly flipped bits","text":"<p>Interestingly this is where the hamming distance shows any flipped bits less that HD6 is detected. Also this is where the built-in parity shows up as it detects the odd numbered bit flips. <pre><code>1 : 0 out of 1000000 false positives, 0.000000%\n2 : 0 out of 1000000 false positives, 0.000000%\n3 : 0 out of 1000000 false positives, 0.000000%\n4 : 0 out of 1000000 false positives, 0.000000%\n5 : 0 out of 1000000 false positives, 0.000000%\n6 : 101 out of 1000000 false positives, 0.010100%\n7 : 0 out of 1000000 false positives, 0.000000%\n8 : 134 out of 1000000 false positives, 0.013400%\n9 : 0 out of 1000000 false positives, 0.000000%\n10 : 129 out of 1000000 false positives, 0.012900%\n11 : 0 out of 1000000 false positives, 0.000000%\n12 : 123 out of 1000000 false positives, 0.012300%\n13 : 0 out of 1000000 false positives, 0.000000%\n14 : 116 out of 1000000 false positives, 0.011600%\n15 : 0 out of 1000000 false positives, 0.000000%\n16 : 106 out of 1000000 false positives, 0.010600%\n17 : 0 out of 1000000 false positives, 0.000000%\n18 : 113 out of 1000000 false positives, 0.011300%\n19 : 0 out of 1000000 false positives, 0.000000%\n20 : 118 out of 1000000 false positives, 0.011800%\n21 : 0 out of 1000000 false positives, 0.000000%\n22 : 131 out of 1000000 false positives, 0.013100%\n23 : 0 out of 1000000 false positives, 0.000000%\n24 : 102 out of 1000000 false positives, 0.010200%\n25 : 0 out of 1000000 false positives, 0.000000%\n26 : 111 out of 1000000 false positives, 0.011100%\n27 : 0 out of 1000000 false positives, 0.000000%\n28 : 159 out of 1000000 false positives, 0.015900%\n29 : 0 out of 1000000 false positives, 0.000000%\n30 : 116 out of 1000000 false positives, 0.011600%\n</code></pre></p>"},{"location":"software/testing/crc-testing/#ota-testing","title":"OTA Testing","text":"<p>A 5hr OTA soak test was done at RSSI -108dBm (2.4GHz, 500Hz) and branch <code>counting-flipped-bits@e3ddcc</code>.  RC data bytes were hard coded <code>0xAA</code> and checked for CRC14 pass/fail, and the number of bits flipped counted.</p> <p>The below table columns are the number of bits flipped, crc passed tally, crc failed tally. Where passed means a bad packet that passes the CRC check and would accepted by the RX. On the <code>0</code> row, <code>Passed</code> is good, <code>Failed</code> is where the data is good, but the CRC itself was changed by bit-flips. <pre><code>CRC | Passed | Failed\n0   | 5589423 | 55438\n1   | 0 | 68262\n2   | 0 | 81015\n3   | 0 | 37478\n4   | 2 | 32449\n5   | 0 | 18546\n6   | 0 | 20082\n7   | 1 | 12697\n8   | 0 | 12433\n9   | 0 | 9803\n10   | 1 | 8899\n11   | 0 | 7462\n12   | 0 | 6105\n13   | 1 | 4720\n14   | 0 | 3858\n15   | 0 | 3170\n16   | 1 | 2673\n17   | 0 | 2159\n18   | 1 | 1980\n19   | 0 | 1746\n20   | 1 | 1703\n21   | 0 | 1449\n22   | 0 | 1332\n23   | 0 | 1076\n24   | 0 | 833\n25   | 0 | 565\n26   | 0 | 454\n27   | 0 | 353\n28   | 0 | 288\n29   | 0 | 210\n30   | 0 | 168\n31   | 0 | 92\n32   | 0 | 39\n33   | 0 | 25\n34   | 0 | 5\n35   | 0 | 2\n36   | 0 | 0\n37   | 0 | 0\n38   | 0 | 0\n39   | 0 | 0\n</code></pre></p> <p>1hr soak test at -100dBm <pre><code>CRC | Passed | Failed\n0   | 1450923 | 10\n1   | 0 | 6\n2   | 0 | 34\n3   | 0 | 5\n4   | 0 | 10\n5   | 0 | 1\n6   | 0 | 3\n7   | 0 | 2\n8   | 0 | 0\n9   | 0 | 1\n10   | 0 | 1\n11   | 0 | 3\n12   | 0 | 0\n13   | 0 | 0\n14   | 0 | 0\n15   | 0 | 0\n16   | 0 | 0\n17   | 0 | 0\n18   | 0 | 1\n19   | 0 | 0\n20   | 0 | 0\n21   | 0 | 0\n22   | 0 | 0\n23   | 0 | 0\n24   | 0 | 0\n25   | 0 | 0\n26   | 0 | 0\n27   | 0 | 0\n28   | 0 | 0\n29   | 0 | 0\n30   | 0 | 0\n31   | 0 | 0\n32   | 0 | 0\n33   | 0 | 0\n34   | 0 | 0\n35   | 0 | 0\n36   | 0 | 0\n37   | 0 | 0\n38   | 0 | 0\n39   | 0 | 0\n</code></pre></p>"},{"location":"software/testing/rx-scoreboard/","title":"RX Testing","text":""},{"location":"software/testing/rx-scoreboard/#overview","title":"Overview","text":"<p>The RX Scoreboard is a developer/troubleshooting feature that shows the outcome of every receiver packet cycle with a single character. Enable it with <code>-DPRINT_RX_SCOREBOARD</code> when compiling any RX environment and connect to the debug serial UART, usually the same as the CRSF output UART for most environments. </p> <p>\u26a0\ufe0f For that reason, it should not be enabled during normal RC control operations since it will get mixed in with real CRSF data sent to the FC.</p>"},{"location":"software/testing/rx-scoreboard/#example-500hz-132-scoreboard","title":"Example 500Hz 1:32 Scoreboard","text":"<pre><code>RRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRR_RRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRR\nRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRR\nRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRR._RRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRR\nRRRRRRRRRRRRRRTRRRRRRRRRRRRRRR_RRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRT\nRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRR_RRRRRRRRRRRRRRTRRRRRRRRRRRRRRR\nRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRR__.RRRRRRRRRRRR\nRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRR\nRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRR\nRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRR\nRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRR\nRRRRRTRRRRRRRRRRRRRRRRRR_RRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRR\nRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRR\nRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRR\nRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRR_RRRRRRRRR.RRTRRRRRRRRRRRRRRRRRRRRRR\nRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRR\nRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRR._RRRRRRRRRRRRRRRRRRTRRRRRRRR.RRRRRRRRRRR\nRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRR\nRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRR\nRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTR\nRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRR\nRRRRRRRRRRRRRRRTRRRRsRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\nTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRR\nRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR.TRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\nRRTRRRRRRRRRRRRRRRRRR_RRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRR\nRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRR\nRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRR\nRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRR_RRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRR\nRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRR\nRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRR._R_RRRRRRRRRRRRRRRRTRRRRRRRR.RRRRRRRRRRRRRR\nRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRTRRRRRR\n</code></pre>"},{"location":"software/testing/rx-scoreboard/#character-legend","title":"Character Legend","text":"Character Meaning Description R Receive \u2714\ufe0f A valid RC sticks or MSP packet was received which passes all validation T Telemetry \u2714\ufe0f Telemetry was successfully transmitted s SYNC \u2714\ufe0f A valid SYNC packet was received. Sync packets come about once every 4 seconds, or more frequently around a telemetry ratio or packet rate change _ Missing \u274c No packet was received at all yet one was expected \ud83d\udc7b . CRC \u274c A packet was received but failed CRC check"},{"location":"software/testing/rx-scoreboard/#name-origin","title":"Name Origin","text":"<p>The term scoreboard originated from an Apache (web server) feature that would display the state of every work as a single character in a text block. Thanks to them for the feature name and the dodecatillion web pages they've enabled serving.</p>"},{"location":"software/testing/unit-testing/","title":"Unit Testing","text":""},{"location":"software/testing/unit-testing/#tools","title":"Tools","text":"<p>Assuming you have Visual Studio Code and PlatformIO installed</p>"},{"location":"software/testing/unit-testing/#windows-prerequisite","title":"Windows Prerequisite","text":"<ul> <li>Install mingw-w64 from sourceforge.net</li> <li>In the windows search bar type <code>env</code> and select Edit the system environment variables</li> <li>Click the <code>Environment Variables...</code> button and in the <code>System variables</code> section double-click <code>Path</code> and click <code>New</code> then paste <code>C:\\Program Files (x86)\\mingw-w64\\i686-8.1.0-posix-dwarf-rt_v6-rev0\\mingw32\\bin</code>. This path may be different on your system, but it is the path that mingw-w64 was installed previously and where <code>g++.exe</code> is located.</li> </ul>"},{"location":"software/testing/unit-testing/#running-the-tests","title":"Running the tests","text":"<ul> <li>In VSCode with the ExpressLRS project open, click on the <code>New Terminal</code> button in the status bar</li> <li>Ensure the native platform is installed by entering <code>pio platform install native</code> in the terminal window.</li> <li>Now you can enter <code>pio test -e native</code> to run the tests.</li> <li>It is also possible to use the PlatformIO module and select Native/Advanced/Test in the target selection list.</li> </ul>"},{"location":"software/updating/betaflight-passthrough/","title":"Betaflight Passthrough","text":""},{"location":"software/updating/betaflight-passthrough/#general-instructions","title":"General Instructions","text":"<p>Once you have Flashed ELRS onto your receivers they can be conveniently updated using the passthrough feature of Betaflight (and similar FC FW). This is a relatively simple process.</p> <ol> <li>Open VS Code or the configurator and prepare to compile and upload.  </li> <li>Plug in your FC to your computer, but do NOT connect to the betaflight configurator.  </li> <li>Select <code>env:YOUR_RX_via_Betaflight_Passthrough</code> and hit upload.  </li> <li>That's it!</li> </ol>"},{"location":"software/updating/betaflight-passthrough/#esp-specific-instructions","title":"ESP-Specific Instructions","text":"<p>Since 1.0.0, ESP receivers can be updated via passthrough without using the boot button as long as the firmware is not corrupted. If you're unable to get it to work, your firmware might be corrupted, in which case you'll need to temporarily turn off the telemetry feature in betaflight. If it still doesn't work, the bootloader might be messed up and the following steps should work.</p> <ol> <li>Open VS Code or the configurator and prepare to compile and upload.  </li> <li>Plug in your FC to your computer, but do NOT connect to the betaflight configurator and do NOT power the RX. If your RX gets powered from USB, desolder the power wire so that you can manually power it up independently of the flight controller.  </li> <li>Hold the boot button of the RX or jump the boot jumper.  </li> <li>Select <code>env:YOUR_RX_via_Betaflight_Passthrough</code> and hit upload.  </li> <li>Wait for the command line to show <code>.....-----</code>.  </li> <li>Plug in a battery or otherwise power up the RX.</li> </ol>"},{"location":"software/updating/betaflight-passthrough/#troubleshooting","title":"Troubleshooting","text":"<ul> <li> <p>If it fails to flash (may display a success message but has errors show up above the final success output), check if it is flashing the correct COM. Sometimes an ethernet adapter on your motherboard will populate a COM port, which will confuse the script and it will attempt to flash to that COM. </p> <ul> <li>The solution that could work would be manually editing the <code>UARTUpload.py</code> and <code>BetaflightinitPassthrough.py</code> files in <code>src/python</code>.</li> <li>Another possible solution could be changing the COM to a higher number for the unnecessary COMs </li> </ul> </li> <li> <p>Sometimes the boot jumper or button must be used while powering up the receiver.</p> </li> </ul>"},{"location":"software/updating/betaflight-passthrough/#ardupilot-instructions-community-contribution-untested","title":"ArduPilot Instructions (community contribution, untested)","text":"<ul> <li>Connect the autopilot to a PC using a USB cable and connect with a Ground Station (i.e. Mission Planner, QGC, etc).</li> <li>Set <code>SERIAL_PASSTIMO</code> to a length of time (in seconds) that gives you enough time to connect with the sensor\u2019s configuration software. 30 to 60 seconds is a good choice</li> <li>Set <code>SERIAL_PASS2</code> to the number of the serial port connected to the sensor. I.e. \u201c2\u201d if the sensor is connected to Telem2/Serial2.</li> <li>Be sure to set each port\u2019s baud rate appropriately using the <code>SERIALx_BAUD</code> parameter. The rates may be different for each port. ArduPilot will do the buffering.</li> <li>Press the \u201cDisconnect\u201d button on the ground station but leave the USB cable from the PC to the autopilot connected.</li> <li>Open the sensor\u2019s configuration software and connect to the autopilot\u2019s COM port. If all goes well the configuration software should work as it does when the PC is directly connected to the sensor</li> <li>If the configuration fails to connect there are some things to try:</li> <li>Some configuration software will not allow connecting to the autopilot\u2019s COM port by default but may have an option to display all available COM ports</li> <li>If no serial messages are received from the PC the timeout will expire and SERIAL_PASS2 will revert to -1</li> </ul> <p>You can also refer to the ArduPilot official docs for serial passthrough.</p>"},{"location":"software/updating/wifi-updating/","title":"Wifi Updating","text":""},{"location":"software/updating/wifi-updating/#flashing-methods","title":"Flashing Methods","text":"<p>With the release of v2.0.0, there will be a total of 3 different methods to flash your devices via WiFi</p>"},{"location":"software/updating/wifi-updating/#method-1-hotspot","title":"Method 1: Hotspot","text":"<p>Build your firmware file, either via the ExpressLRS Configurator or PlatformIO. The ExpressLRS Configurator will open a folder for you where the correct firmware file was created and should be named like <code>&lt;target name&gt;-&lt;version&gt;.bin</code> (e.g. for the Happymodel ES24TX, the file will be <code>HappyModel_ES24TX_2400_TX-2.0.0.bin</code>). Meanwhile, PlatformIO should create the file within the <code>\\src\\.pio\\build\\&lt;target name&gt;\\</code> folder.</p> <p>Put your device in WiFi Updating mode. For TX modules, this is accomplished using the ExpressLRS Lua Script. Simply select <code>WiFi Update</code> from the script and it should start the Update Hotspot. For receivers, power the receiver and wait until <code>AUTO_WIFI_ON_INTERVAL</code> time has elapsed and the LED on the receiver is blinking fast.</p> <p>Connect to the hotspot that the device has created. For TX modules, this hotspot should show up as ExpressLRS TX while for receivers, the hotspot will have a name such as ExpressLRS RX. They have the same password: <code>expresslrs</code>. </p> Updating on Phones (click/tap to expand) <p>In case your computer does not have WiFi capabilities, you can use a WiFi capable smartphone as well. Most phones will display a notification after a successful connection. This is because the phone does not recognize an internet connection. It is recommended to acknowledge this notification because the phone might disconnect again.</p> <p>On iOS, the WiFi Update Page may open immediately. You can close it via the \"Cancel\" button on the top right and choose \"Use without internet\"</p> <p> </p> <p>On Android, you may see a notification. Click the notification to open the WiFi Update Page and then hit the three dots on the top right and choose \"Use this network as is\".</p> <p> </p> <p>Now continue with the guide below.</p> <p>Note</p> <p>The receivers, due to their respective sizes, don't have robust WiFi antennas and you will have to bring them closer to the device you're connecting from. The window that opens can easily be closed.</p> <p></p> <p></p> <p>Navigate your browser to <code>http://10.0.0.1/</code> and the WiFi Update Page should show up.</p> <p>Using the <code>Choose File</code> button, navigate to the folder where the Firmware file is. You can also drag-and-drop the file from the folder window into the Choose File field.</p> <p></p> <p>Click the <code>Update</code> button adjacent to the Upload field, and the Update process should commence. A progress bar will be shown to show the status of the Update.</p> <p></p> <p>Once the Update process completes, a Popup should show the result of the Update. Normally, it will show the Success Message. Otherwise, some info will be shown for the reason it failed, like a wrong firmware file, old firmware or a wrong firmware file format.</p> <p></p> <p>DO NOT unplug/turn off the device yet. For TX Modules, wait for the Lua Script to return to its Main Screen, indicating that the TX Module has rebooted. For receivers, wait until the LED started blinking again, or you can even wait for it to activate WiFi Mode again for good measure.</p> <p>Additionally, using this same Wifi Update page, you can also configure the receiver to connect to your local Wifi Network, in preparation for the other (better) methods.</p> <p></p>"},{"location":"software/updating/wifi-updating/#method-2-home-network","title":"Method 2: Home Network","text":"<p>This method will only work if the device has been configured to connect to the local Wifi Network, either via the Join Network section in the Hotspot, or it's flashed with a firmware with the Home WiFi Network SSID and Password options set.</p> <p>Build your firmware file, either via the ExpressLRS Configurator or PlatformIO. The ExpressLRS Configurator will open a folder for you where the correct firmware file was created and should be named like <code>&lt;target name&gt;-&lt;version&gt;.bin</code> (e.g. for the Happymodel ES24TX, the file will be <code>HappyModel_ES24TX_2400_TX-2.0.0.bin</code>). Meanwhile, PlatformIO should create the file within the <code>\\src\\.pio\\build\\&lt;target name&gt;\\</code>.</p> <p>Put your device in WiFi Updating mode. For TX modules, this is accomplished using the ExpressLRS Lua Script. Simply select <code>WiFi Update</code> from the script and it should connect to your WiFi Network. For receivers, power the receiver and wait until <code>AUTO_WIFI_ON_INTERVAL</code> time has elapsed and the LED on the receiver is blinking fast.</p> <p>Using your browser, navigate to the Wifi Update page. For TX Modules, this should be <code>http://elrs_tx.local</code> while for receivers, the URL should be <code>http://elrs_rx.local</code>.</p> <p>Using the <code>Choose File</code> button, navigate to the folder where the Firmware file is. You can also drag-and-drop the file from the folder window into the Choose File field.</p> <p></p> <p>Click the <code>Update</code> button adjacent to the Upload field, and the Update process should commence. A progress bar will be shown to show the status of the Update.</p> <p></p> <p>Once the Update process completes, a Popup should show the result of the Update. Normally, it will show the Success Message. Otherwise, some info will be shown for the reason it failed, like a wrong firmware file, old firmware or a wrong firmware file format.</p> <p></p> <p>DO NOT unplug/turn off the device yet. For TX Modules, wait for the Lua Script to return to its Main Screen, indicating that the TX Module has rebooted. For receivers, wait until the LED started blinking again, or you can even wait for it to activate WiFi Mode again for good measure.</p>"},{"location":"software/updating/wifi-updating/#method-3-build-and-flash","title":"Method 3: Build and Flash","text":"<p>This method will only work if the device has been configured to connect to the local Wifi Network, either via the Join Network section in the Hotspot, or it's flashed with a firmware with the Home WiFi Network SSID and Password options set.</p> <p>Put your device in WiFi Updating mode. For TX modules, this is accomplished using the ExpressLRS Lua Script. Simply select <code>WiFi Update</code> from the script and it should start the Update Hotspot. For receivers, power the receiver and wait until <code>AUTO_WIFI_ON_INTERVAL</code> time has elapsed and the LED on the receiver is blinking fast. </p> <p>Set your User Defines or Firmware Options. Make sure you've selected the correct Target.</p> <p>With PlatformIO, select Upload with the Wifi Target. With the ExpressLRS Configurator, click Build and Flash. Wait for the Compile to finish and you should see a section of the log like the image below:</p> <p></p> <p>DO NOT unplug/turn off the device yet. For TX Modules, wait for the Lua Script to return to its Main Screen, indicating that the TX Module has rebooted. For receivers, wait until the LED started blinking again, or you can even wait for it to activate WiFi Mode again for good measure.</p>"}]}